Initialize the program!
Verify Test Cases
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcRunning test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 24 25 26 27 28 29 30 31 32 33 34 38 39 40 41  > __res
All passed!
Done Verification
Generating repair candidates!
Processing src/cut.c
In dir /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src
BUILDDIR:
BUILDCMD:/home/ubuntu/spr-fast/tools/coreutils-build.py -p /home/ubuntu/spr-fast/benchmarks/coreutils-deps -c -d src/cut.c /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src __args >>/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/build.log 2>&1
going to directory /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src
warning: &&\: 'linker' input unused
warning: unknown warning option '-Wclobbered'; did you mean '-Wconsumed'? [-Wunknown-warning-option]
warning: unknown warning option '-Wcoverage-mismatch'; did you mean '-Wpointer-type-mismatch'? [-Wunknown-warning-option]
warning: unknown warning option '-Wcpp' [-Wunknown-warning-option]
warning: unknown warning option '-Wdouble-promotion'; did you mean '-Wdocumentation'? [-Wunknown-warning-option]
warning: unknown warning option '-Wformat-contains-nul' [-Wunknown-warning-option]
warning: unknown warning option '-Wfree-nonheap-object'; did you mean '-Wsequence-point'? [-Wunknown-warning-option]
warning: unknown warning option '-Winvalid-memory-model'; did you mean '-Winvalid-pp-token'? [-Wunknown-warning-option]
warning: unknown warning option '-Wjump-misses-init'; did you mean '-Wimplicit-int'? [-Wunknown-warning-option]
warning: unknown warning option '-Wmaybe-uninitialized'; did you mean '-Wuninitialized'? [-Wunknown-warning-option]
warning: unknown warning option '-Wmissing-parameter-type' [-Wunknown-warning-option]
warning: unknown warning option '-Wmudflap'; did you mean '-Wvla'? [-Wunknown-warning-option]
warning: unknown warning option '-Wnormalized=nfc' [-Wunknown-warning-option]
warning: unknown warning option '-Wold-style-declaration'; did you mean '-Wout-of-line-declaration'? [-Wunknown-warning-option]
warning: unknown warning option '-Woverride-init' [-Wunknown-warning-option]
warning: unknown warning option '-Wpacked-bitfield-compat'; did you mean '-Wkeyword-compat'? [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=const' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=noreturn' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=pure'; did you mean '-WNSObject-attribute'? [-Wunknown-warning-option]
warning: unknown warning option '-Wsync-nand' [-Wunknown-warning-option]
warning: unknown warning option '-Wtrampolines' [-Wunknown-warning-option]
warning: unknown warning option '-Wunused-but-set-parameter'; did you mean '-Wunused-parameter'? [-Wunknown-warning-option]
warning: unknown warning option '-Wunused-but-set-variable'; did you mean '-Wunused-const-variable'? [-Wunknown-warning-option]
warning: unknown warning option '-Wvector-operation-performance' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=const' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=noreturn' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=pure'; did you mean '-WNSObject-attribute'? [-Wunknown-warning-option]
warning: unknown warning option '-Wno-logical-op'; did you mean '-Wno-long-long'? [-Wunknown-warning-option]
warning: unknown warning option '-Wclobbered'; did you mean '-Wconsumed'? [-Wunknown-warning-option]
warning: unknown warning option '-Wcoverage-mismatch'; did you mean '-Wpointer-type-mismatch'? [-Wunknown-warning-option]
warning: unknown warning option '-Wcpp' [-Wunknown-warning-option]
warning: unknown warning option '-Wdouble-promotion'; did you mean '-Wdocumentation'? [-Wunknown-warning-option]
warning: unknown warning option '-Wformat-contains-nul' [-Wunknown-warning-option]
warning: unknown warning option '-Wfree-nonheap-object'; did you mean '-Wsequence-point'? [-Wunknown-warning-option]
warning: unknown warning option '-Winvalid-memory-model'; did you mean '-Winvalid-pp-token'? [-Wunknown-warning-option]
warning: unknown warning option '-Wjump-misses-init'; did you mean '-Wimplicit-int'? [-Wunknown-warning-option]
warning: unknown warning option '-Wmaybe-uninitialized'; did you mean '-Wuninitialized'? [-Wunknown-warning-option]
warning: unknown warning option '-Wmissing-parameter-type' [-Wunknown-warning-option]
warning: unknown warning option '-Wmudflap'; did you mean '-Wvla'? [-Wunknown-warning-option]
warning: unknown warning option '-Wnormalized=nfc' [-Wunknown-warning-option]
warning: unknown warning option '-Wold-style-declaration'; did you mean '-Wout-of-line-declaration'? [-Wunknown-warning-option]
warning: unknown warning option '-Woverride-init' [-Wunknown-warning-option]
warning: unknown warning option '-Wpacked-bitfield-compat'; did you mean '-Wkeyword-compat'? [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=const' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=noreturn' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=pure'; did you mean '-WNSObject-attribute'? [-Wunknown-warning-option]
warning: unknown warning option '-Wsync-nand' [-Wunknown-warning-option]
warning: unknown warning option '-Wtrampolines' [-Wunknown-warning-option]
warning: unknown warning option '-Wunused-but-set-parameter'; did you mean '-Wunused-parameter'? [-Wunknown-warning-option]
warning: unknown warning option '-Wunused-but-set-variable'; did you mean '-Wunused-const-variable'? [-Wunknown-warning-option]
warning: unknown warning option '-Wvector-operation-performance' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=const' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=noreturn' [-Wunknown-warning-option]
warning: unknown warning option '-Wsuggest-attribute=pure'; did you mean '-WNSObject-attribute'? [-Wunknown-warning-option]
warning: unknown warning option '-Wno-logical-op'; did you mean '-Wno-long-long'? [-Wunknown-warning-option]
In file included from src/cut.c:32:
In file included from src/system.h:135:
In file included from ./lib/inttypes.h:33:
/usr/include/inttypes.h:290:8: error: unknown type name 'intmax_t'
extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));
       ^
/usr/include/inttypes.h:290:26: error: unknown type name 'intmax_t'
extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));
                         ^
/usr/include/inttypes.h:293:27: error: unknown type name 'intmax_t'
extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
                          ^
/usr/include/inttypes.h:293:45: error: unknown type name 'intmax_t'
extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
                                            ^
/usr/include/inttypes.h:297:8: error: unknown type name 'intmax_t'
extern intmax_t strtoimax (const char *__restrict __nptr,
       ^
/usr/include/inttypes.h:301:8: error: unknown type name 'uintmax_t'
extern uintmax_t strtoumax (const char *__restrict __nptr,
       ^
/usr/include/inttypes.h:305:8: error: unknown type name 'intmax_t'
extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
       ^
/usr/include/inttypes.h:310:8: error: unknown type name 'uintmax_t'
extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       ^
In file included from src/cut.c:32:
In file included from src/system.h:135:
./lib/inttypes.h:49:3: error: "This file assumes that 'int' has exactly 32 bits. Please report your platform and compiler to <bug-gnulib@gnu.org>."
# error "This file assumes that 'int' has exactly 32 bits. Please report your platform and compiler to <bug-gnulib@gnu.org>."
  ^
In file included from src/cut.c:32:
src/system.h:181:16: error: unknown type name 'uintmax_t'
select_plural (uintmax_t n)
               ^
src/system.h:505:11: error: unknown type name 'uintptr_t'; did you mean 'intptr_t'?
  typedef uintptr_t word;
          ^~~~~~~~~
          intptr_t
/usr/include/unistd.h:267:20: note: 'intptr_t' declared here
typedef __intptr_t intptr_t;
                   ^
In file included from src/cut.c:32:
src/system.h:508:14: warning: cast from 'const char *' to 'word *' (aka 'long *') increases required alignment from 1 to 8 [-Wcast-align]
  word *wp = (word *) buf;
             ^~~~~~~~~~~~
In file included from src/cut.c:32:
In file included from src/system.h:599:
./lib/inttostr.h:42:28: error: expected identifier
char *imaxtostr (intmax_t, char *) __attribute_warn_unused_result__;
                           ^
./lib/inttostr.h:46:29: error: expected identifier
char *umaxtostr (uintmax_t, char *) __attribute_warn_unused_result__;
                            ^
Skipping nonlast addifexit:Priority 4942
At location src/cut.c:247
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(i, range_start_ht)))
    return;
void *ent_from_table = hash_insert(range_start_ht, (void *)i);

....
Skipping nonlast addifexit:Priority 11193
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(ent_from_table, range_start_ht, i)))
    return;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}

....
Skipping nonlast addifexit:Priority 4938
At location src/cut.c:259
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(i, printable_field)))
    return;
size_t n = i / 8;

....
Skipping only addifexit:Priority 12439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(i, n, printable_field)))
    return;
printable_field[n] |= (1 << (i % 8));

....
Skipping returnreturn addifexit:Priority 12476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(tablesize, y, x)))
    return 0;
return y % tablesize;

....
IsErr:priority 4912
at location src/cut.c:363
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(fieldstr, in_digits, dash_found, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (*fieldstr == '-') {
        in_digits = 0;
        if (dash_found)
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
        dash_found = 1;
        fieldstr++;
        if (lhs_specified && !value)
            do {
                error(0, 0, (gettext("fields and positions are numbered from 1")));
                usage(1);
            } while (0);
        initial = (lhs_specified ? value : 1);
        value = 0;
    } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_isblank) || *fieldstr == '\x00') {
        in_digits = 0;
        if (dash_found) {
            dash_found = 0;
            if (!lhs_specified && !rhs_specified)
                do {
                    error(0, 0, (gettext("invalid range with no endpoint: -")));
                    usage(1);
                } while (0);
            if (!rhs_specified) {
                if (eol_range_start == 0 || initial < eol_range_start)
                    eol_range_start = initial;
                field_found = 1;
            } else {
                if (value < initial)
                    do {
                        error(0, 0, (gettext("invalid decreasing range")));
                        usage(1);
                    } while (0);
                if (eol_range_start != 0) {
                    if (initial < eol_range_start) {
                        if (eol_range_start <= value) {
                            eol_range_start = initial;
                        } else {
                            do {
                                if (initial == 0 || value == 0)
                                    do {
                                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                                        usage(1);
                                    } while (0);
                                if (n_rp >= n_rp_allocated) {
                                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                }
                                rp[n_rp].lo = (initial);
                                rp[n_rp].hi = (value);
                                ++n_rp;
                            } while (0);
                        }
                        field_found = 1;
                    }
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                    field_found = 1;
                }
                value = 0;
            }
        } else {
            do {
                if (value == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (value);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            value = 0;
            field_found = 1;
        }
        if (*fieldstr == '\x00') {
            break;
        }
        fieldstr++;
        lhs_specified = 0;
        rhs_specified = 0;
    } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);

....
Skipping error ifguard:Priority 4912
At location src/cut.c:363
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(fieldstr, in_digits, dash_found, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (*fieldstr == '-') {
        in_digits = 0;
        if (dash_found)
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
        dash_found = 1;
        fieldstr++;
        if (lhs_specified && !value)
            do {
                error(0, 0, (gettext("fields and positions are numbered from 1")));
                usage(1);
            } while (0);
        initial = (lhs_specified ? value : 1);
        value = 0;
    } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
        in_digits = 0;
        if (dash_found) {
            dash_found = 0;
            if (!lhs_specified && !rhs_specified)
                do {
                    error(0, 0, (gettext("invalid range with no endpoint: -")));
                    usage(1);
                } while (0);
            if (!rhs_specified) {
                if (eol_range_start == 0 || initial < eol_range_start)
                    eol_range_start = initial;
                field_found = 1;
            } else {
                if (value < initial)
                    do {
                        error(0, 0, (gettext("invalid decreasing range")));
                        usage(1);
                    } while (0);
                if (eol_range_start != 0) {
                    if (initial < eol_range_start) {
                        if (eol_range_start <= value) {
                            eol_range_start = initial;
                        } else {
                            do {
                                if (initial == 0 || value == 0)
                                    do {
                                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                                        usage(1);
                                    } while (0);
                                if (n_rp >= n_rp_allocated) {
                                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                }
                                rp[n_rp].lo = (initial);
                                rp[n_rp].hi = (value);
                                ++n_rp;
                            } while (0);
                        }
                        field_found = 1;
                    }
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                    field_found = 1;
                }
                value = 0;
            }
        } else {
            do {
                if (value == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (value);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            value = 0;
            field_found = 1;
        }
        if (*fieldstr == '\x00') {
            break;
        }
        fieldstr++;
        lhs_specified = 0;
        rhs_specified = 0;
    } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);

....
Skipping nonlast addifexit:Priority 9905
At location src/cut.c:365
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(in_digits, fieldstr, dash_found, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
in_digits = 0;

....
IsErr:priority 4906
at location src/cut.c:367
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(dash_found, in_digits, fieldstr, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (dash_found)
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);

....
Skipping error ifguard:Priority 4906
At location src/cut.c:367
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(dash_found, in_digits, fieldstr, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (dash_found)
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);

....
Skipping nonlast addifexit:Priority 3656
At location src/cut.c:367
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(dash_found, in_digits, fieldstr, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
if (dash_found)
    do {
        error(0, 0, (gettext("invalid byte, character or field list")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 4907
At location src/cut.c:369
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(dash_found, fieldstr, value, lhs_specified, in_digits, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
dash_found = 1;

....
Skipping nonlast addifexit:Priority 4908
At location src/cut.c:370
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(fieldstr, dash_found, value, lhs_specified, initial, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
fieldstr++;

....
IsErr:priority 4909
at location src/cut.c:372
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(value, lhs_specified, fieldstr, initial, dash_found, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (lhs_specified && !value)
        do {
            error(0, 0, (gettext("fields and positions are numbered from 1")));
            usage(1);
        } while (0);

....
Skipping error ifguard:Priority 4909
At location src/cut.c:372
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(value, lhs_specified, fieldstr, initial, dash_found, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (lhs_specified && !value)
        do {
            error(0, 0, (gettext("fields and positions are numbered from 1")));
            usage(1);
        } while (0);

....
Skipping nonlast addifexit:Priority 3659
At location src/cut.c:372
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(value, lhs_specified, fieldstr, initial, dash_found, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
if (lhs_specified && !value)
    do {
        error(0, 0, (gettext("fields and positions are numbered from 1")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 4910
At location src/cut.c:375
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(initial, value, lhs_specified, fieldstr, dash_found, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
initial = (lhs_specified ? value : 1);

....
IsErr:priority 4913
at location src/cut.c:378
--src file: src/cut.c
fragment 0:
{
    if (!(__abst_hole(fieldstr, value, initial, lhs_specified, in_digits, dash_found, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
        if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_isblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
}

....
Skipping error ifguard:Priority 4913
At location src/cut.c:378
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(fieldstr, value, initial, lhs_specified, in_digits, dash_found, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
        if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
}

....
Skipping nonlast addifexit:Priority 3663
At location src/cut.c:378
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(fieldstr, value, initial, lhs_specified, in_digits, dash_found, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
        break;
    if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
        in_digits = 0;
        if (dash_found) {
            dash_found = 0;
            if (!lhs_specified && !rhs_specified)
                do {
                    error(0, 0, (gettext("invalid range with no endpoint: -")));
                    usage(1);
                } while (0);
            if (!rhs_specified) {
                if (eol_range_start == 0 || initial < eol_range_start)
                    eol_range_start = initial;
                field_found = 1;
            } else {
                if (value < initial)
                    do {
                        error(0, 0, (gettext("invalid decreasing range")));
                        usage(1);
                    } while (0);
                if (eol_range_start != 0) {
                    if (initial < eol_range_start) {
                        if (eol_range_start <= value) {
                            eol_range_start = initial;
                        } else {
                            do {
                                if (initial == 0 || value == 0)
                                    do {
                                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                                        usage(1);
                                    } while (0);
                                if (n_rp >= n_rp_allocated) {
                                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                }
                                rp[n_rp].lo = (initial);
                                rp[n_rp].hi = (value);
                                ++n_rp;
                            } while (0);
                        }
                        field_found = 1;
                    }
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                    field_found = 1;
                }
                value = 0;
            }
        } else {
            do {
                if (value == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (value);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            value = 0;
            field_found = 1;
        }
        if (*fieldstr == '\x00') {
            break;
        }
        fieldstr++;
        lhs_specified = 0;
        rhs_specified = 0;
    } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 9914
At location src/cut.c:381
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(in_digits, fieldstr, dash_found, value, initial, lhs_specified, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
in_digits = 0;

....
IsErr:priority 4915
at location src/cut.c:383
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(dash_found, in_digits, fieldstr, lhs_specified, rhs_specified, value, initial, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (dash_found) {
        dash_found = 0;
        if (!lhs_specified && !rhs_specified)
            do {
                error(0, 0, (gettext("invalid range with no endpoint: -")));
                usage(1);
            } while (0);
        if (!rhs_specified) {
            if (eol_range_start == 0 || initial < eol_range_start)
                eol_range_start = initial;
            field_found = 1;
        } else {
            if (value < initial)
                do {
                    error(0, 0, (gettext("invalid decreasing range")));
                    usage(1);
                } while (0);
            if (eol_range_start != 0) {
                if (initial < eol_range_start) {
                    if (eol_range_start <= value) {
                        eol_range_start = initial;
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                    }
                    field_found = 1;
                }
            } else {
                do {
                    if (initial == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (initial);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                field_found = 1;
            }
            value = 0;
        }
    } else {
        do {
            if (value == 0 || value == 0)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            if (n_rp >= n_rp_allocated) {
                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
            }
            rp[n_rp].lo = (value);
            rp[n_rp].hi = (value);
            ++n_rp;
        } while (0);
        value = 0;
        field_found = 1;
    }

....
Skipping error ifguard:Priority 4915
At location src/cut.c:383
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(dash_found, in_digits, fieldstr, lhs_specified, rhs_specified, value, initial, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (dash_found) {
        dash_found = 0;
        if (!lhs_specified && !rhs_specified)
            do {
                error(0, 0, (gettext("invalid range with no endpoint: -")));
                usage(1);
            } while (0);
        if (!rhs_specified) {
            if (eol_range_start == 0 || initial < eol_range_start)
                eol_range_start = initial;
            field_found = 1;
        } else {
            if (value < initial)
                do {
                    error(0, 0, (gettext("invalid decreasing range")));
                    usage(1);
                } while (0);
            if (eol_range_start != 0) {
                if (initial < eol_range_start) {
                    if (eol_range_start <= value) {
                        eol_range_start = initial;
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                    }
                    field_found = 1;
                }
            } else {
                do {
                    if (initial == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (initial);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                field_found = 1;
            }
            value = 0;
        }
    } else {
        do {
            if (value == 0 || value == 0)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            if (n_rp >= n_rp_allocated) {
                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
            }
            rp[n_rp].lo = (value);
            rp[n_rp].hi = (value);
            ++n_rp;
        } while (0);
        value = 0;
        field_found = 1;
    }

....
Skipping nonlast addifexit:Priority 3665
At location src/cut.c:383
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(dash_found, in_digits, fieldstr, lhs_specified, rhs_specified, value, initial, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
if (dash_found) {
    dash_found = 0;
    if (!lhs_specified && !rhs_specified)
        do {
            error(0, 0, (gettext("invalid range with no endpoint: -")));
            usage(1);
        } while (0);
    if (!rhs_specified) {
        if (eol_range_start == 0 || initial < eol_range_start)
            eol_range_start = initial;
        field_found = 1;
    } else {
        if (value < initial)
            do {
                error(0, 0, (gettext("invalid decreasing range")));
                usage(1);
            } while (0);
        if (eol_range_start != 0) {
            if (initial < eol_range_start) {
                if (eol_range_start <= value) {
                    eol_range_start = initial;
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                }
                field_found = 1;
            }
        } else {
            do {
                if (initial == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (initial);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            field_found = 1;
        }
        value = 0;
    }
} else {
    do {
        if (value == 0 || value == 0)
            do {
                error(0, 0, (gettext("fields and positions are numbered from 1")));
                usage(1);
            } while (0);
        if (n_rp >= n_rp_allocated) {
            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
        }
        rp[n_rp].lo = (value);
        rp[n_rp].hi = (value);
        ++n_rp;
    } while (0);
    value = 0;
    field_found = 1;
}

....
Skipping nonlast addifexit:Priority 9916
At location src/cut.c:385
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(dash_found, lhs_specified, rhs_specified, in_digits, fieldstr, value, initial, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
dash_found = 0;

....
IsErr:priority 4917
at location src/cut.c:387
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(lhs_specified, rhs_specified, dash_found, in_digits, fieldstr, initial, eol_range_start, value, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (!lhs_specified && !rhs_specified)
        do {
            error(0, 0, (gettext("invalid range with no endpoint: -")));
            usage(1);
        } while (0);

....
Skipping error ifguard:Priority 4917
At location src/cut.c:387
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(lhs_specified, rhs_specified, dash_found, in_digits, fieldstr, initial, eol_range_start, value, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (!lhs_specified && !rhs_specified)
        do {
            error(0, 0, (gettext("invalid range with no endpoint: -")));
            usage(1);
        } while (0);

....
Skipping nonlast addifexit:Priority 3667
At location src/cut.c:387
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(lhs_specified, rhs_specified, dash_found, in_digits, fieldstr, initial, eol_range_start, value, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
if (!lhs_specified && !rhs_specified)
    do {
        error(0, 0, (gettext("invalid range with no endpoint: -")));
        usage(1);
    } while (0);

....
IsErr:priority 4918
at location src/cut.c:392
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(rhs_specified, initial, eol_range_start, lhs_specified, field_found, dash_found, value, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (!rhs_specified) {
        if (eol_range_start == 0 || initial < eol_range_start)
            eol_range_start = initial;
        field_found = 1;
    } else {
        if (value < initial)
            do {
                error(0, 0, (gettext("invalid decreasing range")));
                usage(1);
            } while (0);
        if (eol_range_start != 0) {
            if (initial < eol_range_start) {
                if (eol_range_start <= value) {
                    eol_range_start = initial;
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                }
                field_found = 1;
            }
        } else {
            do {
                if (initial == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (initial);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            field_found = 1;
        }
        value = 0;
    }

....
Skipping error ifguard:Priority 4918
At location src/cut.c:392
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(rhs_specified, initial, eol_range_start, lhs_specified, field_found, dash_found, value, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    if (!rhs_specified) {
        if (eol_range_start == 0 || initial < eol_range_start)
            eol_range_start = initial;
        field_found = 1;
    } else {
        if (value < initial)
            do {
                error(0, 0, (gettext("invalid decreasing range")));
                usage(1);
            } while (0);
        if (eol_range_start != 0) {
            if (initial < eol_range_start) {
                if (eol_range_start <= value) {
                    eol_range_start = initial;
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                }
                field_found = 1;
            }
        } else {
            do {
                if (initial == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (initial);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            field_found = 1;
        }
        value = 0;
    }

....
Skipping nonlast addifexit:Priority 8669
At location src/cut.c:396
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(initial, eol_range_start, field_found, rhs_specified, value, lhs_specified, dash_found, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
if (eol_range_start == 0 || initial < eol_range_start)
    eol_range_start = initial;

....
Skipping nonlast addifexit:Priority 4920
At location src/cut.c:397
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(initial, eol_range_start, field_found, rhs_specified, value, lhs_specified, dash_found, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
        break;
    eol_range_start = initial;
}

....
Skipping nonlast addifexit:Priority 9885
At location src/cut.c:445
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(value, rp, n_rp, n_rp_allocated, rp[n_rp].lo, rp[n_rp].hi, field_found, fieldstr, initial, lhs_specified, rhs_specified, in_digits, dash_found, eol_range_start, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
do {
    if (value == 0 || value == 0)
        do {
            error(0, 0, (gettext("fields and positions are numbered from 1")));
            usage(1);
        } while (0);
    if (n_rp >= n_rp_allocated) {
        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
    }
    rp[n_rp].lo = (value);
    rp[n_rp].hi = (value);
    ++n_rp;
} while (0);

....
Skipping nonlast addifexit:Priority 4891
At location src/cut.c:446
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(value, field_found, rp, n_rp, n_rp_allocated, rp[n_rp].lo, rp[n_rp].hi, fieldstr, initial, lhs_specified, rhs_specified, in_digits, dash_found, eol_range_start, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
value = 0;

....
Skipping nonlast addifexit:Priority 3672
At location src/cut.c:450
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(fieldstr, field_found, value, rp, n_rp, n_rp_allocated, lhs_specified, rhs_specified, initial, in_digits, dash_found, eol_range_start, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
if (*fieldstr == '\x00') {
    break;
}

....
Skipping nonlast addifexit:Priority 4893
At location src/cut.c:455
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(fieldstr, lhs_specified, rhs_specified, field_found, value, in_digits, rp, n_rp, n_rp_allocated, dash_found, initial, operating_mode, eol_range_start, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
fieldstr++;

....
Skipping nonlast addifexit:Priority 4894
At location src/cut.c:456
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(lhs_specified, fieldstr, rhs_specified, in_digits, field_found, value, rp, n_rp, n_rp_allocated, dash_found, initial, operating_mode, eol_range_start, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
lhs_specified = 0;

....
IsErr:priority 4896
at location src/cut.c:459
--src file: src/cut.c
fragment 0:
{
    if (!(__abst_hole(fieldstr, rhs_specified, lhs_specified, in_digits, dash_found, field_found, value, rp, n_rp, n_rp_allocated, operating_mode, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified)))
        if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
}

....
Skipping error ifguard:Priority 4896
At location src/cut.c:459
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(fieldstr, rhs_specified, lhs_specified, in_digits, dash_found, field_found, value, rp, n_rp, n_rp_allocated, operating_mode, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified)))
        if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
}

....
Skipping nonlast addifexit:Priority 3646
At location src/cut.c:459
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(fieldstr, rhs_specified, lhs_specified, in_digits, dash_found, field_found, value, rp, n_rp, n_rp_allocated, operating_mode, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified)))
        break;
    if (((unsigned int)(*fieldstr) - '0' <= 9)) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 4897
At location src/cut.c:463
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(in_digits, fieldstr, dash_found, rhs_specified, lhs_specified, value, field_found, rp, n_rp, n_rp_allocated, operating_mode, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified)))
    break;
static const char *num_start;

....
Skipping nonlast addifexit:Priority 8648
At location src/cut.c:464
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(in_digits, num_start, fieldstr, dash_found, rhs_specified, lhs_specified, value, field_found, operating_mode, rp, n_rp, n_rp_allocated, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified)))
    break;
if (!in_digits || !num_start)
    num_start = fieldstr;

....
Skipping nonlast addifexit:Priority 4899
At location src/cut.c:465
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(fieldstr, num_start, in_digits, dash_found, rhs_specified, lhs_specified, value, operating_mode, field_found, rp, n_rp, n_rp_allocated, initial, max_range_endpoint, i, printable_field, eol_range_start, complement, output_delimiter_specified)))
        break;
    num_start = fieldstr;
}

....
Skipping nonlast addifexit:Priority 4900
At location src/cut.c:466
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(in_digits, fieldstr, num_start, dash_found, rhs_specified, lhs_specified, value, operating_mode, field_found, rp, n_rp, n_rp_allocated, initial, max_range_endpoint, i, printable_field, eol_range_start, complement, output_delimiter_specified)))
    break;
in_digits = 1;

....
Skipping nonlast addifexit:Priority 3651
At location src/cut.c:468
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(dash_found, rhs_specified, in_digits, fieldstr, lhs_specified, num_start, value, operating_mode, field_found, rp, n_rp, n_rp_allocated, max_range_endpoint, i, initial, printable_field, eol_range_start, complement, output_delimiter_specified)))
    break;
if (dash_found)
    rhs_specified = 1;
else
    lhs_specified = 1;

....
Skipping nonlast addifexit:Priority 4902
At location src/cut.c:471
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(lhs_specified, rhs_specified, fieldstr, value, dash_found, in_digits, num_start, operating_mode, field_found, rp, n_rp, n_rp_allocated, max_range_endpoint, i, initial, printable_field, eol_range_start, complement, output_delimiter_specified)))
        break;
    lhs_specified = 1;
}

....
IsErr:priority 4903
at location src/cut.c:474
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(fieldstr, value, lhs_specified, rhs_specified, num_start, dash_found, operating_mode, in_digits, max_range_endpoint, n_rp, i, rp, field_found, n_rp_allocated, printable_field, initial, eol_range_start, complement, output_delimiter_specified)))
    if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
        size_t len = strspn(num_start, "0123456789");
        char *bad_num = xstrndup(num_start, len);
        if (operating_mode == byte_mode)
            error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
        else
            error(0, 0, gettext("field number %s is too large"), quote(bad_num));
        free(bad_num);
        exit(1);
    }

....
Skipping error ifguard:Priority 4903
At location src/cut.c:474
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(fieldstr, value, lhs_specified, rhs_specified, num_start, dash_found, operating_mode, in_digits, max_range_endpoint, n_rp, i, rp, field_found, n_rp_allocated, printable_field, initial, eol_range_start, complement, output_delimiter_specified)))
    if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
        size_t len = strspn(num_start, "0123456789");
        char *bad_num = xstrndup(num_start, len);
        if (operating_mode == byte_mode)
            error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
        else
            error(0, 0, gettext("field number %s is too large"), quote(bad_num));
        free(bad_num);
        exit(1);
    }

....
Skipping nonlast addifexit:Priority 3653
At location src/cut.c:474
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(fieldstr, value, lhs_specified, rhs_specified, num_start, dash_found, operating_mode, in_digits, max_range_endpoint, n_rp, i, rp, field_found, n_rp_allocated, printable_field, initial, eol_range_start, complement, output_delimiter_specified)))
    break;
if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
    size_t len = strspn(num_start, "0123456789");
    char *bad_num = xstrndup(num_start, len);
    if (operating_mode == byte_mode)
        error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
    else
        error(0, 0, gettext("field number %s is too large"), quote(bad_num));
    free(bad_num);
    exit(1);
}

....
Skipping nonlast addifexit:Priority 4927
At location src/cut.c:501
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(rp, i, max_range_endpoint, rp[i].hi, n_rp, printable_field, fieldstr, eol_range_start, rp[i].lo, operating_mode, complement, output_delimiter_specified, value, lhs_specified, rhs_specified, dash_found, in_digits, field_found, n_rp_allocated, initial)))
        break;
    max_range_endpoint = rp[i].hi;
}

....
Skipping nonlast addifexit:Priority 8683
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(rp, i, eol_range_start, rp[i].lo, n_rp, complement, rp[i].hi, output_delimiter_specified, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    break;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;

....
Skipping nonlast addifexit:Priority 4934
At location src/cut.c:522
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(rp, i, complement, rp[i].lo, rp[i].hi, output_delimiter_specified, eol_range_start, n_rp, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    break;
size_t rsi_candidate = complement ? rp[i].hi + 1 : rp[i].lo;

....
Skipping nonlast addifexit:Priority 3685
At location src/cut.c:523
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, rp, i, rsi_candidate, complement, rp[i].lo, rp[i].hi, eol_range_start, n_rp, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    break;
if (output_delimiter_specified && !is_printable_field(rsi_candidate))
    mark_range_start(rsi_candidate);

....
Skipping nonlast addifexit:Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(rsi_candidate, rp, i, output_delimiter_specified, complement, eol_range_start, max_range_endpoint, n_rp, field_found, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
        break;
    mark_range_start(rsi_candidate);
}

....
Skipping nonlast addifexit:Priority 4960
At location src/cut.c:547
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
size_t byte_idx;

....
Skipping nonlast addifexit:Priority 4961
At location src/cut.c:550
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
bool print_delimiter;

....
Skipping nonlast addifexit:Priority 12462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
byte_idx = 0;

....
Skipping nonlast addifexit:Priority 4963
At location src/cut.c:553
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, byte_idx, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
print_delimiter = 0;

....
Skipping isstmt addifexit:Priority 4964
At location src/cut.c:554
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, byte_idx, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
while (1)
    {
        int c;
        c = getc_unlocked(stream);
        if (c == '\n') {
            putchar_unlocked('\n');
            byte_idx = 0;
            print_delimiter = 0;
        } else if (c == (-1)) {
            if (byte_idx > 0)
                putchar_unlocked('\n');
            break;
        } else {
            bool range_start;
            bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
            if (print_kth(++byte_idx, rs)) {
                if (rs && *rs && print_delimiter) {
                    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
                }
                print_delimiter = 1;
                putchar_unlocked(c);
            }
        }
    }

....
Skipping nonlast addifexit:Priority 4987
At location src/cut.c:556
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(stream, print_delimiter, byte_idx, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
int c;

....
Skipping nonlast addifexit:Priority 4987
At location src/cut.c:556
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(stream, print_delimiter, byte_idx, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    break;
int c;

....
Skipping nonlast addifexit:Priority 9988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(stream, c, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
c = getc_unlocked(stream);

....
Skipping nonlast addifexit:Priority 9988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(stream, c, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    break;
c = getc_unlocked(stream);

....
Skipping isstmt addifexit:Priority 3739
At location src/cut.c:560
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(c, stream, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
if (c == '\n') {
    putchar_unlocked('\n');
    byte_idx = 0;
    print_delimiter = 0;
} else if (c == (-1)) {
    if (byte_idx > 0)
        putchar_unlocked('\n');
    break;
} else {
    bool range_start;
    bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
    if (print_kth(++byte_idx, rs)) {
        if (rs && *rs && print_delimiter) {
            fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
        }
        print_delimiter = 1;
        putchar_unlocked(c);
    }
}

....
Skipping isstmt addifexit:Priority 3739
At location src/cut.c:560
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(c, stream, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    break;
if (c == '\n') {
    putchar_unlocked('\n');
    byte_idx = 0;
    print_delimiter = 0;
} else if (c == (-1)) {
    if (byte_idx > 0)
        putchar_unlocked('\n');
    break;
} else {
    bool range_start;
    bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
    if (print_kth(++byte_idx, rs)) {
        if (rs && *rs && print_delimiter) {
            fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
        }
        print_delimiter = 1;
        putchar_unlocked(c);
    }
}

....
Skipping nonlast addifexit:Priority 9984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, print_delimiter, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
putchar_unlocked('\n');

....
Skipping nonlast addifexit:Priority 9984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, print_delimiter, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    break;
putchar_unlocked('\n');

....
Skipping nonlast addifexit:Priority 4985
At location src/cut.c:563
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, print_delimiter, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
byte_idx = 0;

....
Skipping nonlast addifexit:Priority 4985
At location src/cut.c:563
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, print_delimiter, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    break;
byte_idx = 0;

....
Skipping nonlast addifexit:Priority 3740
At location src/cut.c:566
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(c, byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
        return;
    if (c == (-1)) {
        if (byte_idx > 0)
            putchar_unlocked('\n');
        break;
    } else {
        bool range_start;
        bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
        if (print_kth(++byte_idx, rs)) {
            if (rs && *rs && print_delimiter) {
                fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
            }
            print_delimiter = 1;
            putchar_unlocked(c);
        }
    }
}

....
Skipping nonlast addifexit:Priority 3740
At location src/cut.c:566
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(c, byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
        break;
    if (c == (-1)) {
        if (byte_idx > 0)
            putchar_unlocked('\n');
        break;
    } else {
        bool range_start;
        bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
        if (print_kth(++byte_idx, rs)) {
            if (rs && *rs && print_delimiter) {
                fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
            }
            print_delimiter = 1;
            putchar_unlocked(c);
        }
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, c, print_delimiter, output_delimiter_specified, stream, output_delimiter_length, output_delimiter_string)))
    return;
if (byte_idx > 0)
    putchar_unlocked('\n');

....
Skipping nonlast addifexit:Priority 8741
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, c, print_delimiter, output_delimiter_specified, stream, output_delimiter_length, output_delimiter_string)))
    break;
if (byte_idx > 0)
    putchar_unlocked('\n');

....
Skipping nonlast addifexit:Priority 4967
At location src/cut.c:574
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, byte_idx, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)))
    return;
bool range_start;

....
Skipping nonlast addifexit:Priority 4967
At location src/cut.c:574
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, byte_idx, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)))
    break;
bool range_start;

....
Skipping nonlast addifexit:Priority 4968
At location src/cut.c:575
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start, output_delimiter_specified, byte_idx, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)))
    return;
bool *rs = output_delimiter_specified ? &range_start : ((void *)0);

....
Skipping nonlast addifexit:Priority 4968
At location src/cut.c:575
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start, output_delimiter_specified, byte_idx, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)))
    break;
bool *rs = output_delimiter_specified ? &range_start : ((void *)0);

....
Skipping isstmt addifexit:Priority 8719
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, rs, range_start, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)))
    return;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}

....
Skipping isstmt addifexit:Priority 8719
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, rs, range_start, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)))
    break;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}

....
Skipping nonlast addifexit:Priority 8730
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, rs, byte_idx, output_delimiter_length, output_delimiter_string, range_start, output_delimiter_specified, c, stream)))
    return;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}

....
Skipping nonlast addifexit:Priority 8730
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, rs, byte_idx, output_delimiter_length, output_delimiter_string, range_start, output_delimiter_specified, c, stream)))
    break;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}

....
Skipping only addifexit:Priority 9981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, print_delimiter, rs, byte_idx, c, range_start, output_delimiter_specified, stream)))
    return;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);

....
Skipping only addifexit:Priority 9981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, print_delimiter, rs, byte_idx, c, range_start, output_delimiter_specified, stream)))
    break;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);

....
Skipping nonlast addifexit:Priority 4982
At location src/cut.c:583
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, c, output_delimiter_length, output_delimiter_string, rs, byte_idx, range_start, output_delimiter_specified, stream)))
    return;
print_delimiter = 1;

....
Skipping nonlast addifexit:Priority 4982
At location src/cut.c:583
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, c, output_delimiter_length, output_delimiter_string, rs, byte_idx, range_start, output_delimiter_specified, stream)))
    break;
print_delimiter = 1;

....
Skipping isstmt addifexit:Priority 11208
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, stream)))
    return;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);

....
Skipping nonlast addifexit:Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(stream, operating_mode)))
        return;
    cut_bytes(stream);
}

....
IsErr:priority 4953
at location src/cut.c:728
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(file, have_read_stdin, stream)))
    if ((strcmp(file, "-") == 0)) {
        have_read_stdin = 1;
        stream = stdin;
    } else {
        stream = fopen(file, "r");
        if (stream == ((void *)0)) {
            error(0, (*__errno_location()), "%s", file);
            return 0;
        }
    }

....
Skipping error ifguard:Priority 4953
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(file, have_read_stdin, stream)))
    if ((strcmp(file, "-") == 0)) {
        have_read_stdin = 1;
        stream = stdin;
    } else {
        stream = fopen(file, "r");
        if (stream == ((void *)0)) {
            error(0, (*__errno_location()), "%s", file);
            return 0;
        }
    }

....
Skipping nonlast:Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}

....
Skipping nonlast:Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}

....
Skipping nonlast:Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}

....
Skipping nonlast:Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
have_read_stdin = 1;

....
Skipping nonlast:Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
have_read_stdin = 1;

....
Skipping nonlast:Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
have_read_stdin = 1;

....
Skipping nonlast:Priority -44
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
fadvise(stream, FADVISE_SEQUENTIAL);

....
Skipping nonlast:Priority -44
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
fadvise(stream, FADVISE_SEQUENTIAL);

....
Skipping nonlast:Priority -44
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
fadvise(stream, FADVISE_SEQUENTIAL);

....
Skipping nonlast:Priority -43
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
cut_stream(stream);

....
Skipping nonlast:Priority -43
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
cut_stream(stream);

....
Skipping nonlast:Priority -43
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
cut_stream(stream);

....
IsErr:priority 4993
at location src/cut.c:747
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(stream, file, have_read_stdin)))
    if (ferror_unlocked(stream)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }

....
Skipping error ifguard:Priority 4993
At location src/cut.c:747
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(stream, file, have_read_stdin)))
    if (ferror_unlocked(stream)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }

....
Skipping nonlast:Priority -7
At location src/cut.c:747
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}

....
Skipping nonlast:Priority -7
At location src/cut.c:747
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}

....
Skipping nonlast:Priority -7
At location src/cut.c:747
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}

....
IsErr:priority 4994
at location src/cut.c:752
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(file, stream, have_read_stdin)))
    if ((strcmp(file, "-") == 0))
        clearerr_unlocked(stream);
    else if (rpl_fclose(stream) == (-1)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }

....
Skipping error ifguard:Priority 4994
At location src/cut.c:752
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(file, stream, have_read_stdin)))
    if ((strcmp(file, "-") == 0))
        clearerr_unlocked(stream);
    else if (rpl_fclose(stream) == (-1)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }

....
Skipping nonlast:Priority -6
At location src/cut.c:752
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0))
    clearerr_unlocked(stream);
else if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}

....
Skipping nonlast:Priority -6
At location src/cut.c:752
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0))
    clearerr_unlocked(stream);
else if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}

....
Skipping nonlast:Priority -6
At location src/cut.c:752
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0))
    clearerr_unlocked(stream);
else if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}

....
Skipping nonlast:Priority -5
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    if (ferror_unlocked(stream)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
    clearerr_unlocked(stream);
}

....
Skipping nonlast:Priority -5
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    if (rpl_fclose(stream) == (-1)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
    clearerr_unlocked(stream);
}

....
Skipping nonlast:Priority -5
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
    clearerr_unlocked(stream);
}

....
Skipping nonlast addifexit:Priority 4844
At location src/cut.c:765
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return -1;
int optc;

....
Skipping nonlast addifexit:Priority 4844
At location src/cut.c:765
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 0;
int optc;

....
Skipping nonlast addifexit:Priority 4844
At location src/cut.c:765
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 1;
int optc;

....
Skipping nonlast addifexit:Priority 4844
At location src/cut.c:765
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 2;
int optc;

....
Skipping nonlast addifexit:Priority 4844
At location src/cut.c:765
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 6;
int optc;

....
Skipping nonlast addifexit:Priority 4844
At location src/cut.c:765
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 31;
int optc;

....
Skipping nonlast addifexit:Priority 4845
At location src/cut.c:766
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return -1;
bool ok;

....
Skipping nonlast addifexit:Priority 4845
At location src/cut.c:766
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 0;
bool ok;

....
Skipping nonlast addifexit:Priority 4845
At location src/cut.c:766
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 1;
bool ok;

....
Skipping nonlast addifexit:Priority 4845
At location src/cut.c:766
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 2;
bool ok;

....
Skipping nonlast addifexit:Priority 4845
At location src/cut.c:766
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 6;
bool ok;

....
Skipping nonlast addifexit:Priority 4845
At location src/cut.c:766
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht)))
    return 31;
bool ok;

....
Skipping nonlast addifexit:Priority 4846
At location src/cut.c:767
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
bool delim_specified = 0;

....
Skipping nonlast addifexit:Priority 4846
At location src/cut.c:767
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
bool delim_specified = 0;

....
Skipping nonlast addifexit:Priority 4846
At location src/cut.c:767
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
bool delim_specified = 0;

....
Skipping nonlast addifexit:Priority 4846
At location src/cut.c:767
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
bool delim_specified = 0;

....
Skipping nonlast addifexit:Priority 4846
At location src/cut.c:767
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
bool delim_specified = 0;

....
Skipping nonlast addifexit:Priority 4846
At location src/cut.c:767
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
bool delim_specified = 0;

....
Skipping nonlast addifexit:Priority 4847
At location src/cut.c:768
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
char *spec_list_string = ((void *)0);

....
Skipping nonlast addifexit:Priority 4847
At location src/cut.c:768
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
char *spec_list_string = ((void *)0);

....
Skipping nonlast addifexit:Priority 4847
At location src/cut.c:768
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
char *spec_list_string = ((void *)0);

....
Skipping nonlast addifexit:Priority 4847
At location src/cut.c:768
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
char *spec_list_string = ((void *)0);

....
Skipping nonlast addifexit:Priority 4847
At location src/cut.c:768
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
char *spec_list_string = ((void *)0);

....
Skipping nonlast addifexit:Priority 4847
At location src/cut.c:768
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
char *spec_list_string = ((void *)0);

....
Skipping nonlast addifexit:Priority 4849
At location src/cut.c:771
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4849
At location src/cut.c:771
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4849
At location src/cut.c:771
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4849
At location src/cut.c:771
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4849
At location src/cut.c:771
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4849
At location src/cut.c:771
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4850
At location src/cut.c:772
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4850
At location src/cut.c:772
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4850
At location src/cut.c:772
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4850
At location src/cut.c:772
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4850
At location src/cut.c:772
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4850
At location src/cut.c:772
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4851
At location src/cut.c:773
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4851
At location src/cut.c:773
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4851
At location src/cut.c:773
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4851
At location src/cut.c:773
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4851
At location src/cut.c:773
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4851
At location src/cut.c:773
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4852
At location src/cut.c:774
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4852
At location src/cut.c:774
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4852
At location src/cut.c:774
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4852
At location src/cut.c:774
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4852
At location src/cut.c:774
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4852
At location src/cut.c:774
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argv, operating_mode, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4853
At location src/cut.c:776
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, argv, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4853
At location src/cut.c:776
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, argv, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4853
At location src/cut.c:776
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, argv, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4853
At location src/cut.c:776
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, argv, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4853
At location src/cut.c:776
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, argv, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4853
At location src/cut.c:776
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, argv, suppress_non_delimited, delim, have_read_stdin, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4854
At location src/cut.c:778
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim, have_read_stdin, argv, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
operating_mode = undefined_mode;

....
Skipping nonlast addifexit:Priority 4854
At location src/cut.c:778
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim, have_read_stdin, argv, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
operating_mode = undefined_mode;

....
Skipping nonlast addifexit:Priority 4854
At location src/cut.c:778
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim, have_read_stdin, argv, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
operating_mode = undefined_mode;

....
Skipping nonlast addifexit:Priority 4854
At location src/cut.c:778
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim, have_read_stdin, argv, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
operating_mode = undefined_mode;

....
Skipping nonlast addifexit:Priority 4854
At location src/cut.c:778
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim, have_read_stdin, argv, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
operating_mode = undefined_mode;

....
Skipping nonlast addifexit:Priority 4854
At location src/cut.c:778
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim, have_read_stdin, argv, argc, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
operating_mode = undefined_mode;

....
Skipping nonlast addifexit:Priority 4855
At location src/cut.c:781
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(suppress_non_delimited, delim, operating_mode, have_read_stdin, argc, argv, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
suppress_non_delimited = 0;

....
Skipping nonlast addifexit:Priority 4855
At location src/cut.c:781
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(suppress_non_delimited, delim, operating_mode, have_read_stdin, argc, argv, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
suppress_non_delimited = 0;

....
Skipping nonlast addifexit:Priority 4855
At location src/cut.c:781
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(suppress_non_delimited, delim, operating_mode, have_read_stdin, argc, argv, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
suppress_non_delimited = 0;

....
Skipping nonlast addifexit:Priority 4855
At location src/cut.c:781
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(suppress_non_delimited, delim, operating_mode, have_read_stdin, argc, argv, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
suppress_non_delimited = 0;

....
Skipping nonlast addifexit:Priority 4855
At location src/cut.c:781
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(suppress_non_delimited, delim, operating_mode, have_read_stdin, argc, argv, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
suppress_non_delimited = 0;

....
Skipping nonlast addifexit:Priority 4855
At location src/cut.c:781
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(suppress_non_delimited, delim, operating_mode, have_read_stdin, argc, argv, optc, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
suppress_non_delimited = 0;

....
Skipping nonlast addifexit:Priority 4856
At location src/cut.c:783
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim, have_read_stdin, suppress_non_delimited, argc, argv, optc, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
delim = '\x00';

....
Skipping nonlast addifexit:Priority 4856
At location src/cut.c:783
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim, have_read_stdin, suppress_non_delimited, argc, argv, optc, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
delim = '\x00';

....
Skipping nonlast addifexit:Priority 4856
At location src/cut.c:783
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim, have_read_stdin, suppress_non_delimited, argc, argv, optc, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
delim = '\x00';

....
Skipping nonlast addifexit:Priority 4856
At location src/cut.c:783
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim, have_read_stdin, suppress_non_delimited, argc, argv, optc, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
delim = '\x00';

....
Skipping nonlast addifexit:Priority 4856
At location src/cut.c:783
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim, have_read_stdin, suppress_non_delimited, argc, argv, optc, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
delim = '\x00';

....
Skipping nonlast addifexit:Priority 4856
At location src/cut.c:783
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim, have_read_stdin, suppress_non_delimited, argc, argv, optc, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
delim = '\x00';

....
Skipping nonlast addifexit:Priority 4857
At location src/cut.c:784
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, delim, argc, argv, optc, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
have_read_stdin = 0;

....
Skipping nonlast addifexit:Priority 4857
At location src/cut.c:784
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, delim, argc, argv, optc, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
have_read_stdin = 0;

....
Skipping nonlast addifexit:Priority 4857
At location src/cut.c:784
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, delim, argc, argv, optc, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
have_read_stdin = 0;

....
Skipping nonlast addifexit:Priority 4857
At location src/cut.c:784
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, delim, argc, argv, optc, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
have_read_stdin = 0;

....
Skipping nonlast addifexit:Priority 4857
At location src/cut.c:784
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, delim, argc, argv, optc, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
have_read_stdin = 0;

....
Skipping nonlast addifexit:Priority 4857
At location src/cut.c:784
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, delim, argc, argv, optc, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
have_read_stdin = 0;

....
Skipping nonlast addifexit:Priority 4858
At location src/cut.c:786
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, argv, optc, have_read_stdin, delim, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
while ((optc = getopt_long(argc, argv, "b:c:d:f:ns", longopts, ((void *)0))) != -1)
    {
        switch (optc) {
          case 'b':
          case 'c':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = byte_mode;
            spec_list_string = optarg;
            break;
          case 'f':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = field_mode;
            spec_list_string = optarg;
            break;
          case 'd':
            if (optarg[0] != '\x00' && optarg[1] != '\x00')
                do {
                    error(0, 0, (gettext("the delimiter must be a single character")));
                    usage(1);
                } while (0);
            delim = optarg[0];
            delim_specified = 1;
            break;
          case OUTPUT_DELIMITER_OPTION:
            output_delimiter_specified = 1;
            output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
            output_delimiter_string = xstrdup(optarg);
            break;
          case 'n':
            break;
          case 's':
            suppress_non_delimited = 1;
            break;
          case COMPLEMENT_OPTION:
            complement = 1;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            usage(1);
        }
    }

....
Skipping nonlast addifexit:Priority 4858
At location src/cut.c:786
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, argv, optc, have_read_stdin, delim, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
while ((optc = getopt_long(argc, argv, "b:c:d:f:ns", longopts, ((void *)0))) != -1)
    {
        switch (optc) {
          case 'b':
          case 'c':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = byte_mode;
            spec_list_string = optarg;
            break;
          case 'f':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = field_mode;
            spec_list_string = optarg;
            break;
          case 'd':
            if (optarg[0] != '\x00' && optarg[1] != '\x00')
                do {
                    error(0, 0, (gettext("the delimiter must be a single character")));
                    usage(1);
                } while (0);
            delim = optarg[0];
            delim_specified = 1;
            break;
          case OUTPUT_DELIMITER_OPTION:
            output_delimiter_specified = 1;
            output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
            output_delimiter_string = xstrdup(optarg);
            break;
          case 'n':
            break;
          case 's':
            suppress_non_delimited = 1;
            break;
          case COMPLEMENT_OPTION:
            complement = 1;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            usage(1);
        }
    }

....
Skipping nonlast addifexit:Priority 4858
At location src/cut.c:786
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, argv, optc, have_read_stdin, delim, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
while ((optc = getopt_long(argc, argv, "b:c:d:f:ns", longopts, ((void *)0))) != -1)
    {
        switch (optc) {
          case 'b':
          case 'c':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = byte_mode;
            spec_list_string = optarg;
            break;
          case 'f':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = field_mode;
            spec_list_string = optarg;
            break;
          case 'd':
            if (optarg[0] != '\x00' && optarg[1] != '\x00')
                do {
                    error(0, 0, (gettext("the delimiter must be a single character")));
                    usage(1);
                } while (0);
            delim = optarg[0];
            delim_specified = 1;
            break;
          case OUTPUT_DELIMITER_OPTION:
            output_delimiter_specified = 1;
            output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
            output_delimiter_string = xstrdup(optarg);
            break;
          case 'n':
            break;
          case 's':
            suppress_non_delimited = 1;
            break;
          case COMPLEMENT_OPTION:
            complement = 1;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            usage(1);
        }
    }

....
Skipping nonlast addifexit:Priority 4858
At location src/cut.c:786
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, argv, optc, have_read_stdin, delim, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
while ((optc = getopt_long(argc, argv, "b:c:d:f:ns", longopts, ((void *)0))) != -1)
    {
        switch (optc) {
          case 'b':
          case 'c':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = byte_mode;
            spec_list_string = optarg;
            break;
          case 'f':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = field_mode;
            spec_list_string = optarg;
            break;
          case 'd':
            if (optarg[0] != '\x00' && optarg[1] != '\x00')
                do {
                    error(0, 0, (gettext("the delimiter must be a single character")));
                    usage(1);
                } while (0);
            delim = optarg[0];
            delim_specified = 1;
            break;
          case OUTPUT_DELIMITER_OPTION:
            output_delimiter_specified = 1;
            output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
            output_delimiter_string = xstrdup(optarg);
            break;
          case 'n':
            break;
          case 's':
            suppress_non_delimited = 1;
            break;
          case COMPLEMENT_OPTION:
            complement = 1;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            usage(1);
        }
    }

....
Skipping nonlast addifexit:Priority 4858
At location src/cut.c:786
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, argv, optc, have_read_stdin, delim, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
while ((optc = getopt_long(argc, argv, "b:c:d:f:ns", longopts, ((void *)0))) != -1)
    {
        switch (optc) {
          case 'b':
          case 'c':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = byte_mode;
            spec_list_string = optarg;
            break;
          case 'f':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = field_mode;
            spec_list_string = optarg;
            break;
          case 'd':
            if (optarg[0] != '\x00' && optarg[1] != '\x00')
                do {
                    error(0, 0, (gettext("the delimiter must be a single character")));
                    usage(1);
                } while (0);
            delim = optarg[0];
            delim_specified = 1;
            break;
          case OUTPUT_DELIMITER_OPTION:
            output_delimiter_specified = 1;
            output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
            output_delimiter_string = xstrdup(optarg);
            break;
          case 'n':
            break;
          case 's':
            suppress_non_delimited = 1;
            break;
          case COMPLEMENT_OPTION:
            complement = 1;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            usage(1);
        }
    }

....
Skipping nonlast addifexit:Priority 4858
At location src/cut.c:786
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, argv, optc, have_read_stdin, delim, suppress_non_delimited, operating_mode, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
while ((optc = getopt_long(argc, argv, "b:c:d:f:ns", longopts, ((void *)0))) != -1)
    {
        switch (optc) {
          case 'b':
          case 'c':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = byte_mode;
            spec_list_string = optarg;
            break;
          case 'f':
            if (operating_mode != undefined_mode)
                do {
                    error(0, 0, (gettext("only one type of list may be specified")));
                    usage(1);
                } while (0);
            operating_mode = field_mode;
            spec_list_string = optarg;
            break;
          case 'd':
            if (optarg[0] != '\x00' && optarg[1] != '\x00')
                do {
                    error(0, 0, (gettext("the delimiter must be a single character")));
                    usage(1);
                } while (0);
            delim = optarg[0];
            delim_specified = 1;
            break;
          case OUTPUT_DELIMITER_OPTION:
            output_delimiter_specified = 1;
            output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
            output_delimiter_string = xstrdup(optarg);
            break;
          case 'n':
            break;
          case 's':
            suppress_non_delimited = 1;
            break;
          case COMPLEMENT_OPTION:
            complement = 1;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            usage(1);
        }
    }

....
Skipping isstmt addifexit:Priority 9862
At location src/cut.c:788
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(optc, argc, argv, have_read_stdin, operating_mode, delim, suppress_non_delimited, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
switch (optc) {
  case 'b':
  case 'c':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = byte_mode;
    spec_list_string = optarg;
    break;
  case 'f':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = field_mode;
    spec_list_string = optarg;
    break;
  case 'd':
    if (optarg[0] != '\x00' && optarg[1] != '\x00')
        do {
            error(0, 0, (gettext("the delimiter must be a single character")));
            usage(1);
        } while (0);
    delim = optarg[0];
    delim_specified = 1;
    break;
  case OUTPUT_DELIMITER_OPTION:
    output_delimiter_specified = 1;
    output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
    output_delimiter_string = xstrdup(optarg);
    break;
  case 'n':
    break;
  case 's':
    suppress_non_delimited = 1;
    break;
  case COMPLEMENT_OPTION:
    complement = 1;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    usage(1);
}

....
Skipping isstmt addifexit:Priority 9862
At location src/cut.c:788
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(optc, argc, argv, have_read_stdin, operating_mode, delim, suppress_non_delimited, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
switch (optc) {
  case 'b':
  case 'c':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = byte_mode;
    spec_list_string = optarg;
    break;
  case 'f':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = field_mode;
    spec_list_string = optarg;
    break;
  case 'd':
    if (optarg[0] != '\x00' && optarg[1] != '\x00')
        do {
            error(0, 0, (gettext("the delimiter must be a single character")));
            usage(1);
        } while (0);
    delim = optarg[0];
    delim_specified = 1;
    break;
  case OUTPUT_DELIMITER_OPTION:
    output_delimiter_specified = 1;
    output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
    output_delimiter_string = xstrdup(optarg);
    break;
  case 'n':
    break;
  case 's':
    suppress_non_delimited = 1;
    break;
  case COMPLEMENT_OPTION:
    complement = 1;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    usage(1);
}

....
Skipping isstmt addifexit:Priority 9862
At location src/cut.c:788
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(optc, argc, argv, have_read_stdin, operating_mode, delim, suppress_non_delimited, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
switch (optc) {
  case 'b':
  case 'c':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = byte_mode;
    spec_list_string = optarg;
    break;
  case 'f':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = field_mode;
    spec_list_string = optarg;
    break;
  case 'd':
    if (optarg[0] != '\x00' && optarg[1] != '\x00')
        do {
            error(0, 0, (gettext("the delimiter must be a single character")));
            usage(1);
        } while (0);
    delim = optarg[0];
    delim_specified = 1;
    break;
  case OUTPUT_DELIMITER_OPTION:
    output_delimiter_specified = 1;
    output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
    output_delimiter_string = xstrdup(optarg);
    break;
  case 'n':
    break;
  case 's':
    suppress_non_delimited = 1;
    break;
  case COMPLEMENT_OPTION:
    complement = 1;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    usage(1);
}

....
Skipping isstmt addifexit:Priority 9862
At location src/cut.c:788
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(optc, argc, argv, have_read_stdin, operating_mode, delim, suppress_non_delimited, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
switch (optc) {
  case 'b':
  case 'c':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = byte_mode;
    spec_list_string = optarg;
    break;
  case 'f':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = field_mode;
    spec_list_string = optarg;
    break;
  case 'd':
    if (optarg[0] != '\x00' && optarg[1] != '\x00')
        do {
            error(0, 0, (gettext("the delimiter must be a single character")));
            usage(1);
        } while (0);
    delim = optarg[0];
    delim_specified = 1;
    break;
  case OUTPUT_DELIMITER_OPTION:
    output_delimiter_specified = 1;
    output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
    output_delimiter_string = xstrdup(optarg);
    break;
  case 'n':
    break;
  case 's':
    suppress_non_delimited = 1;
    break;
  case COMPLEMENT_OPTION:
    complement = 1;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    usage(1);
}

....
Skipping isstmt addifexit:Priority 9862
At location src/cut.c:788
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(optc, argc, argv, have_read_stdin, operating_mode, delim, suppress_non_delimited, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
switch (optc) {
  case 'b':
  case 'c':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = byte_mode;
    spec_list_string = optarg;
    break;
  case 'f':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = field_mode;
    spec_list_string = optarg;
    break;
  case 'd':
    if (optarg[0] != '\x00' && optarg[1] != '\x00')
        do {
            error(0, 0, (gettext("the delimiter must be a single character")));
            usage(1);
        } while (0);
    delim = optarg[0];
    delim_specified = 1;
    break;
  case OUTPUT_DELIMITER_OPTION:
    output_delimiter_specified = 1;
    output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
    output_delimiter_string = xstrdup(optarg);
    break;
  case 'n':
    break;
  case 's':
    suppress_non_delimited = 1;
    break;
  case COMPLEMENT_OPTION:
    complement = 1;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    usage(1);
}

....
Skipping isstmt addifexit:Priority 9862
At location src/cut.c:788
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(optc, argc, argv, have_read_stdin, operating_mode, delim, suppress_non_delimited, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
switch (optc) {
  case 'b':
  case 'c':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = byte_mode;
    spec_list_string = optarg;
    break;
  case 'f':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = field_mode;
    spec_list_string = optarg;
    break;
  case 'd':
    if (optarg[0] != '\x00' && optarg[1] != '\x00')
        do {
            error(0, 0, (gettext("the delimiter must be a single character")));
            usage(1);
        } while (0);
    delim = optarg[0];
    delim_specified = 1;
    break;
  case OUTPUT_DELIMITER_OPTION:
    output_delimiter_specified = 1;
    output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
    output_delimiter_string = xstrdup(optarg);
    break;
  case 'n':
    break;
  case 's':
    suppress_non_delimited = 1;
    break;
  case COMPLEMENT_OPTION:
    complement = 1;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    usage(1);
}

....
Skipping isstmt addifexit:Priority 9862
At location src/cut.c:788
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(optc, argc, argv, have_read_stdin, operating_mode, delim, suppress_non_delimited, spec_list_string, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    break;
switch (optc) {
  case 'b':
  case 'c':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = byte_mode;
    spec_list_string = optarg;
    break;
  case 'f':
    if (operating_mode != undefined_mode)
        do {
            error(0, 0, (gettext("only one type of list may be specified")));
            usage(1);
        } while (0);
    operating_mode = field_mode;
    spec_list_string = optarg;
    break;
  case 'd':
    if (optarg[0] != '\x00' && optarg[1] != '\x00')
        do {
            error(0, 0, (gettext("the delimiter must be a single character")));
            usage(1);
        } while (0);
    delim = optarg[0];
    delim_specified = 1;
    break;
  case OUTPUT_DELIMITER_OPTION:
    output_delimiter_specified = 1;
    output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
    output_delimiter_string = xstrdup(optarg);
    break;
  case 'n':
    break;
  case 's':
    suppress_non_delimited = 1;
    break;
  case COMPLEMENT_OPTION:
    complement = 1;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "cut", "GNU coreutils", Version, ("David M. Ihnat"), ("David MacKenzie"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    usage(1);
}

....
Skipping nonlast addifexit:Priority 4863
At location src/cut.c:795
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, spec_list_string, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
operating_mode = byte_mode;

....
Skipping nonlast addifexit:Priority 4863
At location src/cut.c:795
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, spec_list_string, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
operating_mode = byte_mode;

....
Skipping nonlast addifexit:Priority 4863
At location src/cut.c:795
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, spec_list_string, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
operating_mode = byte_mode;

....
Skipping nonlast addifexit:Priority 4863
At location src/cut.c:795
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, spec_list_string, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
operating_mode = byte_mode;

....
Skipping nonlast addifexit:Priority 4863
At location src/cut.c:795
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, spec_list_string, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
operating_mode = byte_mode;

....
Skipping nonlast addifexit:Priority 4863
At location src/cut.c:795
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, spec_list_string, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
operating_mode = byte_mode;

....
Skipping nonlast addifexit:Priority 4863
At location src/cut.c:795
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, spec_list_string, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    break;
operating_mode = byte_mode;

....
Skipping nonlast addifexit:Priority 4864
At location src/cut.c:796
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
spec_list_string = optarg;

....
Skipping nonlast addifexit:Priority 4864
At location src/cut.c:796
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
spec_list_string = optarg;

....
Skipping nonlast addifexit:Priority 4864
At location src/cut.c:796
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
spec_list_string = optarg;

....
Skipping nonlast addifexit:Priority 4864
At location src/cut.c:796
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
spec_list_string = optarg;

....
Skipping nonlast addifexit:Priority 4864
At location src/cut.c:796
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
spec_list_string = optarg;

....
Skipping nonlast addifexit:Priority 4864
At location src/cut.c:796
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
spec_list_string = optarg;

....
Skipping nonlast addifexit:Priority 4864
At location src/cut.c:796
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, suppress_non_delimited, delim_specified, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    break;
spec_list_string = optarg;

....
Skipping nonlast addifexit:Priority 4865
At location src/cut.c:797
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, delim_specified, suppress_non_delimited, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return -1;
break;

....
Skipping nonlast addifexit:Priority 4865
At location src/cut.c:797
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, delim_specified, suppress_non_delimited, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 0;
break;

....
Skipping nonlast addifexit:Priority 4865
At location src/cut.c:797
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, delim_specified, suppress_non_delimited, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 1;
break;

....
Skipping nonlast addifexit:Priority 4865
At location src/cut.c:797
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, delim_specified, suppress_non_delimited, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 2;
break;

....
Skipping nonlast addifexit:Priority 4865
At location src/cut.c:797
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, delim_specified, suppress_non_delimited, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 6;
break;

....
Skipping nonlast addifexit:Priority 4865
At location src/cut.c:797
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, delim_specified, suppress_non_delimited, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    return 31;
break;

....
Skipping nonlast addifexit:Priority 4865
At location src/cut.c:797
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, optc, argc, argv, have_read_stdin, delim, delim_specified, suppress_non_delimited, output_delimiter_specified, output_delimiter_length, output_delimiter_string, complement, Version, range_start_ht, ok)))
    break;
break;

....
Skipping nonlast addifexit:Priority 4859
At location src/cut.c:820
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, output_delimiter_specified, delim_specified, delim, suppress_non_delimited, complement, spec_list_string, operating_mode, Version, optc, argc, argv, have_read_stdin, range_start_ht, ok)))
    return -1;
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));

....
Skipping nonlast addifexit:Priority 4859
At location src/cut.c:820
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, output_delimiter_specified, delim_specified, delim, suppress_non_delimited, complement, spec_list_string, operating_mode, Version, optc, argc, argv, have_read_stdin, range_start_ht, ok)))
    return 0;
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));

....
Skipping nonlast addifexit:Priority 4859
At location src/cut.c:820
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, output_delimiter_specified, delim_specified, delim, suppress_non_delimited, complement, spec_list_string, operating_mode, Version, optc, argc, argv, have_read_stdin, range_start_ht, ok)))
    return 1;
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));

....
Skipping nonlast addifexit:Priority 4859
At location src/cut.c:820
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, output_delimiter_specified, delim_specified, delim, suppress_non_delimited, complement, spec_list_string, operating_mode, Version, optc, argc, argv, have_read_stdin, range_start_ht, ok)))
    return 2;
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));

....
Skipping nonlast addifexit:Priority 4859
At location src/cut.c:820
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, output_delimiter_specified, delim_specified, delim, suppress_non_delimited, complement, spec_list_string, operating_mode, Version, optc, argc, argv, have_read_stdin, range_start_ht, ok)))
    return 6;
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));

....
Skipping nonlast addifexit:Priority 4859
At location src/cut.c:820
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, output_delimiter_specified, delim_specified, delim, suppress_non_delimited, complement, spec_list_string, operating_mode, Version, optc, argc, argv, have_read_stdin, range_start_ht, ok)))
    return 31;
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));

....
Skipping nonlast addifexit:Priority 4859
At location src/cut.c:820
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_length, output_delimiter_string, output_delimiter_specified, delim_specified, delim, suppress_non_delimited, complement, spec_list_string, operating_mode, Version, optc, argc, argv, have_read_stdin, range_start_ht, ok)))
    break;
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));

....
Skipping nonlast addifexit:Priority 4860
At location src/cut.c:822
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, output_delimiter_specified, suppress_non_delimited, delim_specified, delim, complement, Version, spec_list_string, operating_mode, optc, argc, argv, range_start_ht, have_read_stdin, ok)))
    return -1;
output_delimiter_string = xstrdup(optarg);

....
Skipping nonlast addifexit:Priority 4860
At location src/cut.c:822
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, output_delimiter_specified, suppress_non_delimited, delim_specified, delim, complement, Version, spec_list_string, operating_mode, optc, argc, argv, range_start_ht, have_read_stdin, ok)))
    return 0;
output_delimiter_string = xstrdup(optarg);

....
Skipping nonlast addifexit:Priority 4860
At location src/cut.c:822
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, output_delimiter_specified, suppress_non_delimited, delim_specified, delim, complement, Version, spec_list_string, operating_mode, optc, argc, argv, range_start_ht, have_read_stdin, ok)))
    return 1;
output_delimiter_string = xstrdup(optarg);

....
Skipping nonlast addifexit:Priority 4860
At location src/cut.c:822
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, output_delimiter_specified, suppress_non_delimited, delim_specified, delim, complement, Version, spec_list_string, operating_mode, optc, argc, argv, range_start_ht, have_read_stdin, ok)))
    return 2;
output_delimiter_string = xstrdup(optarg);

....
Skipping nonlast addifexit:Priority 4860
At location src/cut.c:822
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, output_delimiter_specified, suppress_non_delimited, delim_specified, delim, complement, Version, spec_list_string, operating_mode, optc, argc, argv, range_start_ht, have_read_stdin, ok)))
    return 6;
output_delimiter_string = xstrdup(optarg);

....
Skipping nonlast addifexit:Priority 4860
At location src/cut.c:822
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, output_delimiter_specified, suppress_non_delimited, delim_specified, delim, complement, Version, spec_list_string, operating_mode, optc, argc, argv, range_start_ht, have_read_stdin, ok)))
    return 31;
output_delimiter_string = xstrdup(optarg);

....
Skipping nonlast addifexit:Priority 4860
At location src/cut.c:822
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, output_delimiter_specified, suppress_non_delimited, delim_specified, delim, complement, Version, spec_list_string, operating_mode, optc, argc, argv, range_start_ht, have_read_stdin, ok)))
    break;
output_delimiter_string = xstrdup(optarg);

....
Skipping nonlast addifexit:Priority 4861
At location src/cut.c:823
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, suppress_non_delimited, output_delimiter_specified, delim_specified, complement, delim, Version, spec_list_string, operating_mode, optc, range_start_ht, argc, argv, have_read_stdin, ok)))
    return -1;
break;

....
Skipping nonlast addifexit:Priority 4861
At location src/cut.c:823
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, suppress_non_delimited, output_delimiter_specified, delim_specified, complement, delim, Version, spec_list_string, operating_mode, optc, range_start_ht, argc, argv, have_read_stdin, ok)))
    return 0;
break;

....
Skipping nonlast addifexit:Priority 4861
At location src/cut.c:823
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, suppress_non_delimited, output_delimiter_specified, delim_specified, complement, delim, Version, spec_list_string, operating_mode, optc, range_start_ht, argc, argv, have_read_stdin, ok)))
    return 1;
break;

....
Skipping nonlast addifexit:Priority 4861
At location src/cut.c:823
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, suppress_non_delimited, output_delimiter_specified, delim_specified, complement, delim, Version, spec_list_string, operating_mode, optc, range_start_ht, argc, argv, have_read_stdin, ok)))
    return 2;
break;

....
Skipping nonlast addifexit:Priority 4861
At location src/cut.c:823
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, suppress_non_delimited, output_delimiter_specified, delim_specified, complement, delim, Version, spec_list_string, operating_mode, optc, range_start_ht, argc, argv, have_read_stdin, ok)))
    return 6;
break;

....
Skipping nonlast addifexit:Priority 4861
At location src/cut.c:823
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, suppress_non_delimited, output_delimiter_specified, delim_specified, complement, delim, Version, spec_list_string, operating_mode, optc, range_start_ht, argc, argv, have_read_stdin, ok)))
    return 31;
break;

....
Skipping nonlast addifexit:Priority 4861
At location src/cut.c:823
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, output_delimiter_length, suppress_non_delimited, output_delimiter_specified, delim_specified, complement, delim, Version, spec_list_string, operating_mode, optc, range_start_ht, argc, argv, have_read_stdin, ok)))
    break;
break;

....
IsErr:priority 4866
at location src/cut.c:845
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(operating_mode, delim_specified, version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    if (operating_mode == undefined_mode)
        do {
            error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
            usage(1);
        } while (0);

....
Skipping error ifguard:Priority 4866
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    if (operating_mode == undefined_mode)
        do {
            error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
            usage(1);
        } while (0);

....
Skipping nonlast addifexit:Priority 3616
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    return -1;
if (operating_mode == undefined_mode)
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3616
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    return 0;
if (operating_mode == undefined_mode)
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3616
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    return 1;
if (operating_mode == undefined_mode)
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3616
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    return 2;
if (operating_mode == undefined_mode)
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3616
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    return 6;
if (operating_mode == undefined_mode)
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3616
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    return 31;
if (operating_mode == undefined_mode)
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);

....
IsErr:priority 4867
at location src/cut.c:848
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    if (delim_specified && operating_mode != field_mode)
        do {
            error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
            usage(1);
        } while (0);

....
Skipping error ifguard:Priority 4867
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    if (delim_specified && operating_mode != field_mode)
        do {
            error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
            usage(1);
        } while (0);

....
Skipping nonlast addifexit:Priority 3617
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return -1;
if (delim_specified && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3617
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 0;
if (delim_specified && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3617
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 1;
if (delim_specified && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3617
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 2;
if (delim_specified && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3617
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 6;
if (delim_specified && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3617
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 31;
if (delim_specified && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);

....
IsErr:priority 4868
at location src/cut.c:852
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    if (suppress_non_delimited && operating_mode != field_mode)
        do {
            error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
            usage(1);
        } while (0);

....
Skipping error ifguard:Priority 4868
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    if (suppress_non_delimited && operating_mode != field_mode)
        do {
            error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
            usage(1);
        } while (0);

....
Skipping nonlast addifexit:Priority 3618
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return -1;
if (suppress_non_delimited && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3618
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 0;
if (suppress_non_delimited && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3618
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 1;
if (suppress_non_delimited && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3618
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 2;
if (suppress_non_delimited && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3618
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 6;
if (suppress_non_delimited && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3618
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 31;
if (suppress_non_delimited && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);

....
Skipping nonlast addifexit:Priority 3619
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return -1;
if (output_delimiter_specified) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}

....
Skipping nonlast addifexit:Priority 3619
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 0;
if (output_delimiter_specified) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}

....
Skipping nonlast addifexit:Priority 3619
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 1;
if (output_delimiter_specified) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}

....
Skipping nonlast addifexit:Priority 3619
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 2;
if (output_delimiter_specified) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}

....
Skipping nonlast addifexit:Priority 3619
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 6;
if (output_delimiter_specified) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}

....
Skipping nonlast addifexit:Priority 3619
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 31;
if (output_delimiter_specified) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}

....
Skipping nonlast addifexit:Priority 9870
At location src/cut.c:858
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, output_delimiter_specified, operating_mode, suppress_non_delimited, spec_list_string, delim_specified, delim, output_delimiter_string, Version, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return -1;
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));

....
Skipping nonlast addifexit:Priority 9870
At location src/cut.c:858
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, output_delimiter_specified, operating_mode, suppress_non_delimited, spec_list_string, delim_specified, delim, output_delimiter_string, Version, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 0;
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));

....
Skipping nonlast addifexit:Priority 9870
At location src/cut.c:858
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, output_delimiter_specified, operating_mode, suppress_non_delimited, spec_list_string, delim_specified, delim, output_delimiter_string, Version, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 1;
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));

....
Skipping nonlast addifexit:Priority 9870
At location src/cut.c:858
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, output_delimiter_specified, operating_mode, suppress_non_delimited, spec_list_string, delim_specified, delim, output_delimiter_string, Version, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 2;
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));

....
Skipping nonlast addifexit:Priority 9870
At location src/cut.c:858
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, output_delimiter_specified, operating_mode, suppress_non_delimited, spec_list_string, delim_specified, delim, output_delimiter_string, Version, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 6;
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));

....
Skipping nonlast addifexit:Priority 9870
At location src/cut.c:858
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, output_delimiter_specified, operating_mode, suppress_non_delimited, spec_list_string, delim_specified, delim, output_delimiter_string, Version, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    return 31;
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));

....
Skipping isstmt addifexit:Priority 3621
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    return -1;
if (range_start_ht == ((void *)0))
    xalloc_die();

....
Skipping isstmt addifexit:Priority 3621
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    return 0;
if (range_start_ht == ((void *)0))
    xalloc_die();

....
Skipping isstmt addifexit:Priority 3621
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    return 1;
if (range_start_ht == ((void *)0))
    xalloc_die();

....
Skipping isstmt addifexit:Priority 3621
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    return 2;
if (range_start_ht == ((void *)0))
    xalloc_die();

....
Skipping isstmt addifexit:Priority 3621
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    return 6;
if (range_start_ht == ((void *)0))
    xalloc_die();

....
Skipping isstmt addifexit:Priority 3621
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    return 31;
if (range_start_ht == ((void *)0))
    xalloc_die();

....
IsErr:priority 4872
at location src/cut.c:866
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, version, have_read_stdin, complement, optc)))
    if (!set_fields(spec_list_string)) {
        if (operating_mode == field_mode)
            do {
                error(0, 0, (gettext("missing list of fields")));
                usage(1);
            } while (0);
        else
            do {
                error(0, 0, (gettext("missing list of positions")));
                usage(1);
            } while (0);
    }

....
Skipping error ifguard:Priority 4872
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc)))
    if (!set_fields(spec_list_string)) {
        if (operating_mode == field_mode)
            do {
                error(0, 0, (gettext("missing list of fields")));
                usage(1);
            } while (0);
        else
            do {
                error(0, 0, (gettext("missing list of positions")));
                usage(1);
            } while (0);
    }

....
Skipping nonlast addifexit:Priority 3622
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc)))
    return -1;
if (!set_fields(spec_list_string)) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 3622
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc)))
    return 0;
if (!set_fields(spec_list_string)) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 3622
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc)))
    return 1;
if (!set_fields(spec_list_string)) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 3622
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc)))
    return 2;
if (!set_fields(spec_list_string)) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 3622
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc)))
    return 6;
if (!set_fields(spec_list_string)) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 3622
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc)))
    return 31;
if (!set_fields(spec_list_string)) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}

....
Skipping nonlast addifexit:Priority 3697
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    return -1;
if (!delim_specified)
    delim = '\t';

....
Skipping nonlast addifexit:Priority 3697
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    return 0;
if (!delim_specified)
    delim = '\t';

....
Skipping nonlast addifexit:Priority 3697
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    return 1;
if (!delim_specified)
    delim = '\t';

....
Skipping nonlast addifexit:Priority 3697
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    return 2;
if (!delim_specified)
    delim = '\t';

....
Skipping nonlast addifexit:Priority 3697
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    return 6;
if (!delim_specified)
    delim = '\t';

....
Skipping nonlast addifexit:Priority 3697
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    return 31;
if (!delim_specified)
    delim = '\t';

....
Skipping nonlast addifexit:Priority 4948
At location src/cut.c:875
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(delim, delim_specified, output_delimiter_string, operating_mode, output_delimiter_length, spec_list_string, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
        return -1;
    delim = '\t';
}

....
Skipping nonlast addifexit:Priority 4948
At location src/cut.c:875
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(delim, delim_specified, output_delimiter_string, operating_mode, output_delimiter_length, spec_list_string, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
        return 0;
    delim = '\t';
}

....
Skipping nonlast addifexit:Priority 4948
At location src/cut.c:875
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(delim, delim_specified, output_delimiter_string, operating_mode, output_delimiter_length, spec_list_string, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
        return 1;
    delim = '\t';
}

....
Skipping nonlast addifexit:Priority 4948
At location src/cut.c:875
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(delim, delim_specified, output_delimiter_string, operating_mode, output_delimiter_length, spec_list_string, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
        return 2;
    delim = '\t';
}

....
Skipping nonlast addifexit:Priority 4948
At location src/cut.c:875
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(delim, delim_specified, output_delimiter_string, operating_mode, output_delimiter_length, spec_list_string, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
        return 6;
    delim = '\t';
}

....
Skipping nonlast addifexit:Priority 4948
At location src/cut.c:875
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(delim, delim_specified, output_delimiter_string, operating_mode, output_delimiter_length, spec_list_string, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
        return 31;
    delim = '\t';
}

....
Skipping nonlast addifexit:Priority 3699
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return -1;
if (output_delimiter_string == ((void *)0)) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}

....
Skipping nonlast addifexit:Priority 3699
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 0;
if (output_delimiter_string == ((void *)0)) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}

....
Skipping nonlast addifexit:Priority 3699
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 1;
if (output_delimiter_string == ((void *)0)) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}

....
Skipping nonlast addifexit:Priority 3699
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 2;
if (output_delimiter_string == ((void *)0)) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}

....
Skipping nonlast addifexit:Priority 3699
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 6;
if (output_delimiter_string == ((void *)0)) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}

....
Skipping nonlast addifexit:Priority 3699
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 31;
if (output_delimiter_string == ((void *)0)) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}

....
Skipping nonlast addifexit:Priority 3700
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return -1;
if (optind == argc)
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);

....
Skipping nonlast addifexit:Priority 3700
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 0;
if (optind == argc)
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);

....
Skipping nonlast addifexit:Priority 3700
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 1;
if (optind == argc)
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);

....
Skipping nonlast addifexit:Priority 3700
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 2;
if (optind == argc)
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);

....
Skipping nonlast addifexit:Priority 3700
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 6;
if (optind == argc)
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);

....
Skipping nonlast addifexit:Priority 3700
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 31;
if (optind == argc)
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);

....
Skipping nonlast addifexit:Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(ok, argc, argv, output_delimiter_length, output_delimiter_string, range_start_ht, delim, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return -1;
    ok = cut_file("-");
}

....
Skipping nonlast addifexit:Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(ok, argc, argv, output_delimiter_length, output_delimiter_string, range_start_ht, delim, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 0;
    ok = cut_file("-");
}

....
Skipping nonlast addifexit:Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(ok, argc, argv, output_delimiter_length, output_delimiter_string, range_start_ht, delim, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 1;
    ok = cut_file("-");
}

....
Skipping nonlast addifexit:Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(ok, argc, argv, output_delimiter_length, output_delimiter_string, range_start_ht, delim, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 2;
    ok = cut_file("-");
}

....
Skipping nonlast addifexit:Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(ok, argc, argv, output_delimiter_length, output_delimiter_string, range_start_ht, delim, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 6;
    ok = cut_file("-");
}

....
Skipping nonlast addifexit:Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(ok, argc, argv, output_delimiter_length, output_delimiter_string, range_start_ht, delim, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 31;
    ok = cut_file("-");
}

....
Skipping nonlast addifexit:Priority 3747
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return -1;
if (range_start_ht)
    hash_free(range_start_ht);

....
Skipping nonlast addifexit:Priority 3747
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 0;
if (range_start_ht)
    hash_free(range_start_ht);

....
Skipping nonlast addifexit:Priority 3747
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 1;
if (range_start_ht)
    hash_free(range_start_ht);

....
Skipping nonlast addifexit:Priority 3747
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 2;
if (range_start_ht)
    hash_free(range_start_ht);

....
Skipping nonlast addifexit:Priority 3747
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 6;
if (range_start_ht)
    hash_free(range_start_ht);

....
Skipping nonlast addifexit:Priority 3747
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 31;
if (range_start_ht)
    hash_free(range_start_ht);

....
Skipping nonlast addifexit:Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(range_start_ht, have_read_stdin, argv, ok, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return -1;
    hash_free(range_start_ht);
}

....
Skipping nonlast addifexit:Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(range_start_ht, have_read_stdin, argv, ok, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 0;
    hash_free(range_start_ht);
}

....
Skipping nonlast addifexit:Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(range_start_ht, have_read_stdin, argv, ok, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 1;
    hash_free(range_start_ht);
}

....
Skipping nonlast addifexit:Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(range_start_ht, have_read_stdin, argv, ok, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 2;
    hash_free(range_start_ht);
}

....
Skipping nonlast addifexit:Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(range_start_ht, have_read_stdin, argv, ok, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 6;
    hash_free(range_start_ht);
}

....
Skipping nonlast addifexit:Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    if ((__abst_hole(range_start_ht, have_read_stdin, argv, ok, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        return 31;
    hash_free(range_start_ht);
}

....
IsErr:priority 4999
at location src/cut.c:895
--src file: src/cut.c
fragment 0:
if (!(__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, version, complement, optc)))
    if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
        error(0, (*__errno_location()), "-");
        ok = 0;
    }

....
Skipping error ifguard:Priority 4999
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
        error(0, (*__errno_location()), "-");
        ok = 0;
    }

....
Skipping nonlast addifexit:Priority 3749
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return -1;
if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}

....
Skipping nonlast addifexit:Priority 3749
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 0;
if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}

....
Skipping nonlast addifexit:Priority 3749
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 1;
if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}

....
Skipping nonlast addifexit:Priority 3749
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 2;
if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}

....
Skipping nonlast addifexit:Priority 3749
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 6;
if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}

....
Skipping nonlast addifexit:Priority 3749
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 31;
if (have_read_stdin && rpl_fclose(stdin) == (-1)) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}

....
Antipattern stats BEGIN: earlyret => 310
Antipattern stats BEGIN: errorexit => 47
Antipattern stats BEGIN: singlecfg => 3
Total 20642 different repair candidate templates!!!!
Total 20642 different repair candidate templates!!!!
Total 23826 different repair candidate!!!
Trying different candidates!
BasicTester pointer: 0x1ecd290
CondTester pointer: 0x338d6a0
Counter: 1
Batcher Size:0
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if ((ent_from_table == ((void *)0)) && !(__abst_hole(ent_from_table, i, range_start_ht))) {
    xalloc_die();
}


CondTester, a patch instance with id 0:
Spawn 1 instances, now Total 1
Counter: 2
Batcher Size:1
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if ((ent_from_table == ((void *)0)) || (__abst_hole(ent_from_table, i, range_start_ht))) {
    xalloc_die();
}


CondTester, a patch instance with id 1:
Spawn 1 instances, now Total 2
Counter: 3
Batcher Size:2
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:372
--Src File: src/cut.c
Fragment 0:
if ((lhs_specified && !value) && !(__abst_hole(value, lhs_specified, fieldstr, initial, dash_found, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    do {
        error(0, 0, (gettext("fields and positions are numbered from 1")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 2:
Spawn 1 instances, now Total 3
Counter: 4
Batcher Size:3
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:464
--Src File: src/cut.c
Fragment 0:
if ((!in_digits || !num_start) && !(__abst_hole(in_digits, num_start, fieldstr, dash_found, rhs_specified, lhs_specified, value, field_found, operating_mode, rp, n_rp, n_rp_allocated, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified)))
    num_start = fieldstr;


CondTester, a patch instance with id 3:
Spawn 1 instances, now Total 4
Counter: 5
Batcher Size:4
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:464
--Src File: src/cut.c
Fragment 0:
if ((!in_digits || !num_start) || (__abst_hole(in_digits, num_start, fieldstr, dash_found, rhs_specified, lhs_specified, value, field_found, operating_mode, rp, n_rp, n_rp_allocated, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified)))
    num_start = fieldstr;


CondTester, a patch instance with id 4:
Spawn 1 instances, now Total 5
Counter: 6
Batcher Size:5
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:752
--Src File: src/cut.c
Fragment 0:
if (((strcmp(file, "-") == 0)) && !(__abst_hole(file, stream, have_read_stdin)))
    clearerr_unlocked(stream);
else if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}


CondTester, a patch instance with id 5:
Spawn 1 instances, now Total 6
Counter: 7
Batcher Size:6
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:752
--Src File: src/cut.c
Fragment 0:
if (((strcmp(file, "-") == 0)) || (__abst_hole(file, stream, have_read_stdin)))
    clearerr_unlocked(stream);
else if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}


CondTester, a patch instance with id 6:
Spawn 1 instances, now Total 7
Counter: 8
Batcher Size:7
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (((strcmp(file, "-") == 0)) && !(__abst_hole(file, have_read_stdin, stream))) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


CondTester, a patch instance with id 7:
Spawn 1 instances, now Total 8
Counter: 9
Batcher Size:8
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:747
--Src File: src/cut.c
Fragment 0:
if ((ferror_unlocked(stream)) && !(__abst_hole(stream, file, have_read_stdin))) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}


CondTester, a patch instance with id 8:
Spawn 1 instances, now Total 9
Counter: 10
Batcher Size:9
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:747
--Src File: src/cut.c
Fragment 0:
if ((ferror_unlocked(stream)) || (__abst_hole(stream, file, have_read_stdin))) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}


CondTester, a patch instance with id 9:
Spawn 1 instances, now Total 10
Counter: 11
Batcher Size:10
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (((strcmp(file, "-") == 0)) || (__abst_hole(file, have_read_stdin, stream))) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


CondTester, a patch instance with id 10:
Spawn 1 instances, now Total 11
Counter: 12
Batcher Size:11
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:372
--Src File: src/cut.c
Fragment 0:
if ((lhs_specified && !value) || (__abst_hole(value, lhs_specified, fieldstr, initial, dash_found, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    do {
        error(0, 0, (gettext("fields and positions are numbered from 1")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 11:
Spawn 1 instances, now Total 12
Counter: 13
Batcher Size:12
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:372
--Src File: src/cut.c
Fragment 0:
if (((lhs_specified) || (__abst_hole(value, lhs_specified, fieldstr, initial, dash_found, in_digits, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) && !value)
    do {
        error(0, 0, (gettext("fields and positions are numbered from 1")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 12:
Spawn 1 instances, now Total 13
Counter: 14
Batcher Size:13
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if ((operating_mode == byte_mode) && !(__abst_hole(operating_mode, stream)))
    cut_bytes(stream);
else
    cut_fields(stream);


CondTester, a patch instance with id 13:
Spawn 1 instances, now Total 14
Counter: 15
Batcher Size:14
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if ((operating_mode == byte_mode) || (__abst_hole(operating_mode, stream)))
    cut_bytes(stream);
else
    cut_fields(stream);


CondTester, a patch instance with id 14:
Spawn 1 instances, now Total 15
Counter: 16
Batcher Size:15
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if ((rs && *rs && print_delimiter) && !(__abst_hole(print_delimiter, rs, byte_idx, output_delimiter_length, output_delimiter_string, range_start, output_delimiter_specified, c, stream))) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


CondTester, a patch instance with id 15:
Spawn 1 instances, now Total 16
Counter: 17
Batcher Size:16
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if ((print_kth(++byte_idx, rs)) && !(__abst_hole(byte_idx, rs, range_start, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream))) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


CondTester, a patch instance with id 16:
Spawn 1 instances, now Total 17
Counter: 18
Batcher Size:17
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if ((print_kth(++byte_idx, rs)) || (__abst_hole(byte_idx, rs, range_start, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream))) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


CondTester, a patch instance with id 17:
Spawn 1 instances, now Total 18
Counter: 19
Batcher Size:18
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:566
--Src File: src/cut.c
Fragment 0:
{
    if ((c == (-1)) && !(__abst_hole(c, byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string))) {
        if (byte_idx > 0)
            putchar_unlocked('\n');
        break;
    } else {
        bool range_start;
        bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
        if (print_kth(++byte_idx, rs)) {
            if (rs && *rs && print_delimiter) {
                fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
            }
            print_delimiter = 1;
            putchar_unlocked(c);
        }
    }
}


CondTester, a patch instance with id 18:
Spawn 1 instances, now Total 19
Counter: 20
Batcher Size:19
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:566
--Src File: src/cut.c
Fragment 0:
{
    if ((c == (-1)) || (__abst_hole(c, byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string))) {
        if (byte_idx > 0)
            putchar_unlocked('\n');
        break;
    } else {
        bool range_start;
        bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
        if (print_kth(++byte_idx, rs)) {
            if (rs && *rs && print_delimiter) {
                fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
            }
            print_delimiter = 1;
            putchar_unlocked(c);
        }
    }
}


CondTester, a patch instance with id 19:
Spawn 1 instances, now Total 20
Counter: 21
Batcher Size:20
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:560
--Src File: src/cut.c
Fragment 0:
if ((c == '\n') && !(__abst_hole(c, stream, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string))) {
    putchar_unlocked('\n');
    byte_idx = 0;
    print_delimiter = 0;
} else if (c == (-1)) {
    if (byte_idx > 0)
        putchar_unlocked('\n');
    break;
} else {
    bool range_start;
    bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
    if (print_kth(++byte_idx, rs)) {
        if (rs && *rs && print_delimiter) {
            fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
        }
        print_delimiter = 1;
        putchar_unlocked(c);
    }
}


CondTester, a patch instance with id 20:
Spawn 1 instances, now Total 21
Counter: 22
Batcher Size:21
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:560
--Src File: src/cut.c
Fragment 0:
if ((c == '\n') || (__abst_hole(c, stream, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string))) {
    putchar_unlocked('\n');
    byte_idx = 0;
    print_delimiter = 0;
} else if (c == (-1)) {
    if (byte_idx > 0)
        putchar_unlocked('\n');
    break;
} else {
    bool range_start;
    bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
    if (print_kth(++byte_idx, rs)) {
        if (rs && *rs && print_delimiter) {
            fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
        }
        print_delimiter = 1;
        putchar_unlocked(c);
    }
}


CondTester, a patch instance with id 21:
Spawn 1 instances, now Total 22
Counter: 23
Batcher Size:22
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if ((rs && *rs && print_delimiter) || (__abst_hole(print_delimiter, rs, byte_idx, output_delimiter_length, output_delimiter_string, range_start, output_delimiter_specified, c, stream))) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


CondTester, a patch instance with id 22:
Spawn 1 instances, now Total 23
Counter: 24
Batcher Size:23
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (((rs && *rs) || (__abst_hole(print_delimiter, rs, byte_idx, output_delimiter_length, output_delimiter_string, range_start, output_delimiter_specified, c, stream))) && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


CondTester, a patch instance with id 23:
Spawn 1 instances, now Total 24
Counter: 25
Batcher Size:24
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if ((range_start && is_selected) && !(__abst_hole(range_start, is_selected, k, k_selected, complement, max_range_endpoint, eol_range_start)))
    *range_start = is_range_start_index(k);


CondTester, a patch instance with id 24:
Spawn 1 instances, now Total 25
Counter: 26
Batcher Size:25
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:450
--Src File: src/cut.c
Fragment 0:
if ((*fieldstr == '\x00') && !(__abst_hole(fieldstr, field_found, value, rp, n_rp, n_rp_allocated, lhs_specified, rhs_specified, initial, in_digits, dash_found, eol_range_start, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    break;
}


CondTester, a patch instance with id 25:
Spawn 1 instances, now Total 26
Counter: 27
Batcher Size:26
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if ((byte_idx > 0) && !(__abst_hole(byte_idx, c, print_delimiter, output_delimiter_specified, stream, output_delimiter_length, output_delimiter_string)))
    putchar_unlocked('\n');


CondTester, a patch instance with id 26:
Spawn 1 instances, now Total 27
Counter: 28
Batcher Size:27
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if ((byte_idx > 0) || (__abst_hole(byte_idx, c, print_delimiter, output_delimiter_specified, stream, output_delimiter_length, output_delimiter_string)))
    putchar_unlocked('\n');


CondTester, a patch instance with id 27:
Spawn 1 instances, now Total 28
Counter: 29
Batcher Size:28
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:450
--Src File: src/cut.c
Fragment 0:
if ((*fieldstr == '\x00') || (__abst_hole(fieldstr, field_found, value, rp, n_rp, n_rp_allocated, lhs_specified, rhs_specified, initial, in_digits, dash_found, eol_range_start, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    break;
}


CondTester, a patch instance with id 28:
Spawn 1 instances, now Total 29
Counter: 30
Batcher Size:29
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if ((range_start && is_selected) || (__abst_hole(range_start, is_selected, k, k_selected, complement, max_range_endpoint, eol_range_start)))
    *range_start = is_range_start_index(k);


CondTester, a patch instance with id 29:
Spawn 1 instances, now Total 30
Counter: 31
Batcher Size:30
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (((range_start) || (__abst_hole(range_start, is_selected, k, k_selected, complement, max_range_endpoint, eol_range_start))) && is_selected)
    *range_start = is_range_start_index(k);


CondTester, a patch instance with id 30:
Spawn 1 instances, now Total 31
Counter: 32
Batcher Size:31
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:383
--Src File: src/cut.c
Fragment 0:
if ((dash_found) && !(__abst_hole(dash_found, in_digits, fieldstr, lhs_specified, rhs_specified, value, initial, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    dash_found = 0;
    if (!lhs_specified && !rhs_specified)
        do {
            error(0, 0, (gettext("invalid range with no endpoint: -")));
            usage(1);
        } while (0);
    if (!rhs_specified) {
        if (eol_range_start == 0 || initial < eol_range_start)
            eol_range_start = initial;
        field_found = 1;
    } else {
        if (value < initial)
            do {
                error(0, 0, (gettext("invalid decreasing range")));
                usage(1);
            } while (0);
        if (eol_range_start != 0) {
            if (initial < eol_range_start) {
                if (eol_range_start <= value) {
                    eol_range_start = initial;
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                }
                field_found = 1;
            }
        } else {
            do {
                if (initial == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (initial);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            field_found = 1;
        }
        value = 0;
    }
} else {
    do {
        if (value == 0 || value == 0)
            do {
                error(0, 0, (gettext("fields and positions are numbered from 1")));
                usage(1);
            } while (0);
        if (n_rp >= n_rp_allocated) {
            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
        }
        rp[n_rp].lo = (value);
        rp[n_rp].hi = (value);
        ++n_rp;
    } while (0);
    value = 0;
    field_found = 1;
}


CondTester, a patch instance with id 31:
Spawn 1 instances, now Total 32
Counter: 33
Batcher Size:32
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:383
--Src File: src/cut.c
Fragment 0:
if ((dash_found) || (__abst_hole(dash_found, in_digits, fieldstr, lhs_specified, rhs_specified, value, initial, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    dash_found = 0;
    if (!lhs_specified && !rhs_specified)
        do {
            error(0, 0, (gettext("invalid range with no endpoint: -")));
            usage(1);
        } while (0);
    if (!rhs_specified) {
        if (eol_range_start == 0 || initial < eol_range_start)
            eol_range_start = initial;
        field_found = 1;
    } else {
        if (value < initial)
            do {
                error(0, 0, (gettext("invalid decreasing range")));
                usage(1);
            } while (0);
        if (eol_range_start != 0) {
            if (initial < eol_range_start) {
                if (eol_range_start <= value) {
                    eol_range_start = initial;
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                }
                field_found = 1;
            }
        } else {
            do {
                if (initial == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (initial);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            field_found = 1;
        }
        value = 0;
    }
} else {
    do {
        if (value == 0 || value == 0)
            do {
                error(0, 0, (gettext("fields and positions are numbered from 1")));
                usage(1);
            } while (0);
        if (n_rp >= n_rp_allocated) {
            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
        }
        rp[n_rp].lo = (value);
        rp[n_rp].hi = (value);
        ++n_rp;
    } while (0);
    value = 0;
    field_found = 1;
}


CondTester, a patch instance with id 32:
Spawn 1 instances, now Total 33
Counter: 34
Batcher Size:33
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:367
--Src File: src/cut.c
Fragment 0:
if ((dash_found) && !(__abst_hole(dash_found, in_digits, fieldstr, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    do {
        error(0, 0, (gettext("invalid byte, character or field list")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 33:
Spawn 1 instances, now Total 34
Counter: 35
Batcher Size:34
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:367
--Src File: src/cut.c
Fragment 0:
if ((dash_found) || (__abst_hole(dash_found, in_digits, fieldstr, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    do {
        error(0, 0, (gettext("invalid byte, character or field list")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 34:
Spawn 1 instances, now Total 35
Counter: 36
Batcher Size:35
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:387
--Src File: src/cut.c
Fragment 0:
if ((!lhs_specified && !rhs_specified) && !(__abst_hole(lhs_specified, rhs_specified, dash_found, in_digits, fieldstr, initial, eol_range_start, value, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    do {
        error(0, 0, (gettext("invalid range with no endpoint: -")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 35:
Spawn 1 instances, now Total 36
Counter: 37
Batcher Size:36
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:396
--Src File: src/cut.c
Fragment 0:
if ((eol_range_start == 0 || initial < eol_range_start) && !(__abst_hole(initial, eol_range_start, field_found, rhs_specified, value, lhs_specified, dash_found, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    eol_range_start = initial;


CondTester, a patch instance with id 36:
Spawn 1 instances, now Total 37
Counter: 38
Batcher Size:37
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:396
--Src File: src/cut.c
Fragment 0:
if ((eol_range_start == 0 || initial < eol_range_start) || (__abst_hole(initial, eol_range_start, field_found, rhs_specified, value, lhs_specified, dash_found, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    eol_range_start = initial;


CondTester, a patch instance with id 37:
Spawn 1 instances, now Total 38
Counter: 39
Batcher Size:38
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:531
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start)) && !(__abst_hole(max_range_endpoint, eol_range_start, complement, rp, output_delimiter_specified, field_found, i, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    mark_range_start(eol_range_start);


CondTester, a patch instance with id 38:
Spawn 1 instances, now Total 39
Counter: 40
Batcher Size:39
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:531
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start)) || (__abst_hole(max_range_endpoint, eol_range_start, complement, rp, output_delimiter_specified, field_found, i, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    mark_range_start(eol_range_start);


CondTester, a patch instance with id 39:
Spawn 1 instances, now Total 40
Counter: 41
Batcher Size:40
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:531
--Src File: src/cut.c
Fragment 0:
if (((output_delimiter_specified && !complement && eol_range_start && max_range_endpoint) || (__abst_hole(max_range_endpoint, eol_range_start, complement, rp, output_delimiter_specified, field_found, i, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial))) && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);


CondTester, a patch instance with id 40:
Spawn 1 instances, now Total 41
Counter: 42
Batcher Size:41
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:392
--Src File: src/cut.c
Fragment 0:
if ((!rhs_specified) && !(__abst_hole(rhs_specified, initial, eol_range_start, lhs_specified, field_found, dash_found, value, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    if (eol_range_start == 0 || initial < eol_range_start)
        eol_range_start = initial;
    field_found = 1;
} else {
    if (value < initial)
        do {
            error(0, 0, (gettext("invalid decreasing range")));
            usage(1);
        } while (0);
    if (eol_range_start != 0) {
        if (initial < eol_range_start) {
            if (eol_range_start <= value) {
                eol_range_start = initial;
            } else {
                do {
                    if (initial == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (initial);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
            }
            field_found = 1;
        }
    } else {
        do {
            if (initial == 0 || value == 0)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            if (n_rp >= n_rp_allocated) {
                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
            }
            rp[n_rp].lo = (initial);
            rp[n_rp].hi = (value);
            ++n_rp;
        } while (0);
        field_found = 1;
    }
    value = 0;
}


CondTester, a patch instance with id 41:
Spawn 1 instances, now Total 42
Counter: 43
Batcher Size:42
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:392
--Src File: src/cut.c
Fragment 0:
if ((!rhs_specified) || (__abst_hole(rhs_specified, initial, eol_range_start, lhs_specified, field_found, dash_found, value, in_digits, fieldstr, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    if (eol_range_start == 0 || initial < eol_range_start)
        eol_range_start = initial;
    field_found = 1;
} else {
    if (value < initial)
        do {
            error(0, 0, (gettext("invalid decreasing range")));
            usage(1);
        } while (0);
    if (eol_range_start != 0) {
        if (initial < eol_range_start) {
            if (eol_range_start <= value) {
                eol_range_start = initial;
            } else {
                do {
                    if (initial == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (initial);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
            }
            field_found = 1;
        }
    } else {
        do {
            if (initial == 0 || value == 0)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            if (n_rp >= n_rp_allocated) {
                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
            }
            rp[n_rp].lo = (initial);
            rp[n_rp].hi = (value);
            ++n_rp;
        } while (0);
        field_found = 1;
    }
    value = 0;
}


CondTester, a patch instance with id 42:
Spawn 1 instances, now Total 43
Counter: 44
Batcher Size:43
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:523
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_specified && !is_printable_field(rsi_candidate)) && !(__abst_hole(rsi_candidate, output_delimiter_specified, rp, i, complement, eol_range_start, n_rp, max_range_endpoint, field_found, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    mark_range_start(rsi_candidate);


CondTester, a patch instance with id 43:
Spawn 1 instances, now Total 44
Counter: 45
Batcher Size:44
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:523
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_specified && !is_printable_field(rsi_candidate)) || (__abst_hole(rsi_candidate, output_delimiter_specified, rp, i, complement, eol_range_start, n_rp, max_range_endpoint, field_found, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    mark_range_start(rsi_candidate);


CondTester, a patch instance with id 44:
Spawn 1 instances, now Total 45
Counter: 46
Batcher Size:45
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:523
--Src File: src/cut.c
Fragment 0:
if (((output_delimiter_specified) || (__abst_hole(rsi_candidate, output_delimiter_specified, rp, i, complement, eol_range_start, n_rp, max_range_endpoint, field_found, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial))) && !is_printable_field(rsi_candidate))
    mark_range_start(rsi_candidate);


CondTester, a patch instance with id 45:
Spawn 1 instances, now Total 46
Counter: 47
Batcher Size:46
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:508
--Src File: src/cut.c
Fragment 0:
if ((max_range_endpoint) && !(__abst_hole(max_range_endpoint, printable_field, rp, n_rp, i, eol_range_start, complement, output_delimiter_specified, fieldstr, operating_mode, field_found, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    printable_field = xzalloc(max_range_endpoint / 8 + 1);


CondTester, a patch instance with id 46:
Spawn 1 instances, now Total 47
Counter: 48
Batcher Size:47
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if ((eol_range_start && eol_range_start <= rp[i].lo) && !(__abst_hole(rp, i, eol_range_start, rp[i].lo, n_rp, complement, rp[i].hi, output_delimiter_specified, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    continue;


CondTester, a patch instance with id 47:
Spawn 1 instances, now Total 48
Counter: 49
Batcher Size:48
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if ((eol_range_start && eol_range_start <= rp[i].lo) || (__abst_hole(rp, i, eol_range_start, rp[i].lo, n_rp, complement, rp[i].hi, output_delimiter_specified, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    continue;


CondTester, a patch instance with id 48:
Spawn 1 instances, now Total 49
Counter: 50
Batcher Size:49
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (((eol_range_start) || (__abst_hole(rp, i, eol_range_start, rp[i].lo, n_rp, complement, rp[i].hi, output_delimiter_specified, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial))) && eol_range_start <= rp[i].lo)
    continue;


CondTester, a patch instance with id 49:
Spawn 1 instances, now Total 50
Counter: 51
Batcher Size:50
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:508
--Src File: src/cut.c
Fragment 0:
if ((max_range_endpoint) || (__abst_hole(max_range_endpoint, printable_field, rp, n_rp, i, eol_range_start, complement, output_delimiter_specified, fieldstr, operating_mode, field_found, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    printable_field = xzalloc(max_range_endpoint / 8 + 1);


CondTester, a patch instance with id 50:
Spawn 1 instances, now Total 51
Counter: 52
Batcher Size:51
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:387
--Src File: src/cut.c
Fragment 0:
if ((!lhs_specified && !rhs_specified) || (__abst_hole(lhs_specified, rhs_specified, dash_found, in_digits, fieldstr, initial, eol_range_start, value, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    do {
        error(0, 0, (gettext("invalid range with no endpoint: -")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 51:
Spawn 1 instances, now Total 52
Counter: 53
Batcher Size:52
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:387
--Src File: src/cut.c
Fragment 0:
if (((!lhs_specified) || (__abst_hole(lhs_specified, rhs_specified, dash_found, in_digits, fieldstr, initial, eol_range_start, value, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) && !rhs_specified)
    do {
        error(0, 0, (gettext("invalid range with no endpoint: -")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 52:
Spawn 1 instances, now Total 53
Counter: 54
Batcher Size:53
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:500
--Src File: src/cut.c
Fragment 0:
if ((rp[i].hi > max_range_endpoint) && !(__abst_hole(rp, i, max_range_endpoint, rp[i].hi, n_rp, fieldstr, printable_field, eol_range_start, rp[i].lo, operating_mode, complement, output_delimiter_specified, value, lhs_specified, rhs_specified, dash_found, in_digits, field_found, n_rp_allocated, initial)))
    max_range_endpoint = rp[i].hi;


CondTester, a patch instance with id 53:
Spawn 1 instances, now Total 54
Counter: 55
Batcher Size:54
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((optind == argc) && !(__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);


CondTester, a patch instance with id 54:
Spawn 1 instances, now Total 55
Counter: 56
Batcher Size:55
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((range_start_ht) && !(__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    hash_free(range_start_ht);


CondTester, a patch instance with id 55:
Spawn 1 instances, now Total 56
Counter: 57
Batcher Size:56
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((have_read_stdin && rpl_fclose(stdin) == (-1)) && !(__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc))) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}


CondTester, a patch instance with id 56:
Spawn 1 instances, now Total 57
Counter: 58
Batcher Size:57
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if ((have_read_stdin && rpl_fclose(stdin) == (-1)) || (__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc))) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}


CondTester, a patch instance with id 57:
Spawn 1 instances, now Total 58
Counter: 59
Batcher Size:58
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:895
--Src File: src/cut.c
Fragment 0:
if (((have_read_stdin) || (__abst_hole(have_read_stdin, range_start_ht, ok, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc))) && rpl_fclose(stdin) == (-1)) {
    error(0, (*__errno_location()), "-");
    ok = 0;
}


CondTester, a patch instance with id 58:
Spawn 1 instances, now Total 59
Counter: 60
Batcher Size:59
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if ((range_start_ht) || (__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    hash_free(range_start_ht);


CondTester, a patch instance with id 59:
Spawn 1 instances, now Total 60
Counter: 61
Batcher Size:60
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if ((optind == argc) || (__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);


CondTester, a patch instance with id 60:
Spawn 1 instances, now Total 61
Counter: 62
Batcher Size:61
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:500
--Src File: src/cut.c
Fragment 0:
if ((rp[i].hi > max_range_endpoint) || (__abst_hole(rp, i, max_range_endpoint, rp[i].hi, n_rp, fieldstr, printable_field, eol_range_start, rp[i].lo, operating_mode, complement, output_delimiter_specified, value, lhs_specified, rhs_specified, dash_found, in_digits, field_found, n_rp_allocated, initial)))
    max_range_endpoint = rp[i].hi;


CondTester, a patch instance with id 61:
Spawn 1 instances, now Total 62
Counter: 63
Batcher Size:62
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((!delim_specified) && !(__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    delim = '\t';


CondTester, a patch instance with id 62:
Spawn 1 instances, now Total 63
Counter: 64
Batcher Size:63
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_string == ((void *)0)) && !(__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc))) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}


CondTester, a patch instance with id 63:
Spawn 1 instances, now Total 64
Counter: 65
Batcher Size:64
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_string == ((void *)0)) || (__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc))) {
    static char dummy[2];
    dummy[0] = delim;
    dummy[1] = '\x00';
    output_delimiter_string = dummy;
    output_delimiter_length = 1;
}


CondTester, a patch instance with id 64:
Spawn 1 instances, now Total 65
Counter: 66
Batcher Size:65
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if ((!delim_specified) || (__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    delim = '\t';


CondTester, a patch instance with id 65:
Spawn 1 instances, now Total 66
Counter: 67
Batcher Size:66
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((!set_fields(spec_list_string)) && !(__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc))) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}


CondTester, a patch instance with id 66:
Spawn 1 instances, now Total 67
Counter: 68
Batcher Size:67
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:866
--Src File: src/cut.c
Fragment 0:
if ((!set_fields(spec_list_string)) || (__abst_hole(spec_list_string, operating_mode, range_start_ht, delim_specified, delim, output_delimiter_specified, output_delimiter_string, suppress_non_delimited, output_delimiter_length, argc, ok, argv, Version, have_read_stdin, complement, optc))) {
    if (operating_mode == field_mode)
        do {
            error(0, 0, (gettext("missing list of fields")));
            usage(1);
        } while (0);
    else
        do {
            error(0, 0, (gettext("missing list of positions")));
            usage(1);
        } while (0);
}


CondTester, a patch instance with id 67:
Spawn 1 instances, now Total 68
Counter: 69
Batcher Size:68
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((operating_mode == undefined_mode) && !(__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 68:
Spawn 1 instances, now Total 69
Counter: 70
Batcher Size:69
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((delim_specified && operating_mode != field_mode) && !(__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 69:
Spawn 1 instances, now Total 70
Counter: 71
Batcher Size:70
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((range_start_ht == ((void *)0)) && !(__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    xalloc_die();


CondTester, a patch instance with id 70:
Spawn 1 instances, now Total 71
Counter: 72
Batcher Size:71
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:861
--Src File: src/cut.c
Fragment 0:
if ((range_start_ht == ((void *)0)) || (__abst_hole(range_start_ht, spec_list_string, output_delimiter_specified, operating_mode, suppress_non_delimited, delim_specified, delim, output_delimiter_string, output_delimiter_length, Version, argc, ok, complement, argv, have_read_stdin, optc)))
    xalloc_die();


CondTester, a patch instance with id 71:
Spawn 1 instances, now Total 72
Counter: 73
Batcher Size:72
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_specified) && !(__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc))) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}


CondTester, a patch instance with id 72:
Spawn 1 instances, now Total 73
Counter: 74
Batcher Size:73
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:856
--Src File: src/cut.c
Fragment 0:
if ((output_delimiter_specified) || (__abst_hole(output_delimiter_specified, range_start_ht, operating_mode, suppress_non_delimited, delim_specified, spec_list_string, Version, delim, output_delimiter_string, complement, output_delimiter_length, argc, ok, argv, have_read_stdin, optc))) {
    range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
    if (range_start_ht == ((void *)0))
        xalloc_die();
}


CondTester, a patch instance with id 73:
Spawn 1 instances, now Total 74
Counter: 75
Batcher Size:74
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if ((delim_specified && operating_mode != field_mode) || (__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 74:
Spawn 1 instances, now Total 75
Counter: 76
Batcher Size:75
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:848
--Src File: src/cut.c
Fragment 0:
if (((delim_specified) || (__abst_hole(delim_specified, operating_mode, suppress_non_delimited, output_delimiter_specified, Version, range_start_ht, complement, spec_list_string, output_delimiter_string, delim, output_delimiter_length, argc, ok, argv, have_read_stdin, optc))) && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("an input delimiter may be specified only when operating on fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 75:
Spawn 1 instances, now Total 76
Counter: 77
Batcher Size:76
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((suppress_non_delimited && operating_mode != field_mode) && !(__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 76:
Spawn 1 instances, now Total 77
Counter: 78
Batcher Size:77
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if ((suppress_non_delimited && operating_mode != field_mode) || (__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc)))
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 77:
Spawn 1 instances, now Total 78
Counter: 79
Batcher Size:78
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:852
--Src File: src/cut.c
Fragment 0:
if (((suppress_non_delimited) || (__abst_hole(operating_mode, suppress_non_delimited, delim_specified, output_delimiter_specified, range_start_ht, spec_list_string, Version, complement, delim, output_delimiter_string, output_delimiter_length, argc, ok, argv, have_read_stdin, optc))) && operating_mode != field_mode)
    do {
        error(0, 0, (gettext("suppressing non-delimited lines makes sense\n\tonly when operating on fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 78:
Spawn 1 instances, now Total 79
Counter: 80
Batcher Size:79
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:845
--Src File: src/cut.c
Fragment 0:
if ((operating_mode == undefined_mode) || (__abst_hole(operating_mode, delim_specified, Version, suppress_non_delimited, output_delimiter_specified, complement, range_start_ht, spec_list_string, output_delimiter_string, output_delimiter_length, delim, argc, ok, argv, have_read_stdin, optc)))
    do {
        error(0, 0, (gettext("you must specify a list of bytes, characters, or fields")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 79:
Spawn 1 instances, now Total 80
Counter: 81
Batcher Size:80
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:468
--Src File: src/cut.c
Fragment 0:
if ((dash_found) && !(__abst_hole(dash_found, rhs_specified, in_digits, fieldstr, lhs_specified, num_start, value, operating_mode, field_found, rp, n_rp, n_rp_allocated, max_range_endpoint, i, initial, printable_field, eol_range_start, complement, output_delimiter_specified)))
    rhs_specified = 1;
else
    lhs_specified = 1;


CondTester, a patch instance with id 80:
Spawn 1 instances, now Total 81
Counter: 82
Batcher Size:81
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:468
--Src File: src/cut.c
Fragment 0:
if ((dash_found) || (__abst_hole(dash_found, rhs_specified, in_digits, fieldstr, lhs_specified, num_start, value, operating_mode, field_found, rp, n_rp, n_rp_allocated, max_range_endpoint, i, initial, printable_field, eol_range_start, complement, output_delimiter_specified)))
    rhs_specified = 1;
else
    lhs_specified = 1;


CondTester, a patch instance with id 81:
Spawn 1 instances, now Total 82
Counter: 83
Batcher Size:82
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:459
--Src File: src/cut.c
Fragment 0:
{
    if ((((unsigned int)(*fieldstr) - '0' <= 9)) && !(__abst_hole(fieldstr, rhs_specified, lhs_specified, in_digits, dash_found, field_found, value, rp, n_rp, n_rp_allocated, operating_mode, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified))) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
}


CondTester, a patch instance with id 82:
Spawn 1 instances, now Total 83
Counter: 84
Batcher Size:83
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:459
--Src File: src/cut.c
Fragment 0:
{
    if ((((unsigned int)(*fieldstr) - '0' <= 9)) || (__abst_hole(fieldstr, rhs_specified, lhs_specified, in_digits, dash_found, field_found, value, rp, n_rp, n_rp_allocated, operating_mode, initial, max_range_endpoint, i, eol_range_start, printable_field, complement, output_delimiter_specified))) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
}


CondTester, a patch instance with id 83:
Spawn 1 instances, now Total 84
Counter: 85
Batcher Size:84
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:378
--Src File: src/cut.c
Fragment 0:
{
    if ((*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') && !(__abst_hole(fieldstr, in_digits, value, initial, lhs_specified, dash_found, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
        in_digits = 0;
        if (dash_found) {
            dash_found = 0;
            if (!lhs_specified && !rhs_specified)
                do {
                    error(0, 0, (gettext("invalid range with no endpoint: -")));
                    usage(1);
                } while (0);
            if (!rhs_specified) {
                if (eol_range_start == 0 || initial < eol_range_start)
                    eol_range_start = initial;
                field_found = 1;
            } else {
                if (value < initial)
                    do {
                        error(0, 0, (gettext("invalid decreasing range")));
                        usage(1);
                    } while (0);
                if (eol_range_start != 0) {
                    if (initial < eol_range_start) {
                        if (eol_range_start <= value) {
                            eol_range_start = initial;
                        } else {
                            do {
                                if (initial == 0 || value == 0)
                                    do {
                                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                                        usage(1);
                                    } while (0);
                                if (n_rp >= n_rp_allocated) {
                                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                }
                                rp[n_rp].lo = (initial);
                                rp[n_rp].hi = (value);
                                ++n_rp;
                            } while (0);
                        }
                        field_found = 1;
                    }
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                    field_found = 1;
                }
                value = 0;
            }
        } else {
            do {
                if (value == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (value);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            value = 0;
            field_found = 1;
        }
        if (*fieldstr == '\x00') {
            break;
        }
        fieldstr++;
        lhs_specified = 0;
        rhs_specified = 0;
    } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
}


CondTester, a patch instance with id 84:
Spawn 1 instances, now Total 85
Counter: 86
Batcher Size:85
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:378
--Src File: src/cut.c
Fragment 0:
{
    if ((*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') || (__abst_hole(fieldstr, in_digits, value, initial, lhs_specified, dash_found, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
        in_digits = 0;
        if (dash_found) {
            dash_found = 0;
            if (!lhs_specified && !rhs_specified)
                do {
                    error(0, 0, (gettext("invalid range with no endpoint: -")));
                    usage(1);
                } while (0);
            if (!rhs_specified) {
                if (eol_range_start == 0 || initial < eol_range_start)
                    eol_range_start = initial;
                field_found = 1;
            } else {
                if (value < initial)
                    do {
                        error(0, 0, (gettext("invalid decreasing range")));
                        usage(1);
                    } while (0);
                if (eol_range_start != 0) {
                    if (initial < eol_range_start) {
                        if (eol_range_start <= value) {
                            eol_range_start = initial;
                        } else {
                            do {
                                if (initial == 0 || value == 0)
                                    do {
                                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                                        usage(1);
                                    } while (0);
                                if (n_rp >= n_rp_allocated) {
                                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                }
                                rp[n_rp].lo = (initial);
                                rp[n_rp].hi = (value);
                                ++n_rp;
                            } while (0);
                        }
                        field_found = 1;
                    }
                } else {
                    do {
                        if (initial == 0 || value == 0)
                            do {
                                error(0, 0, (gettext("fields and positions are numbered from 1")));
                                usage(1);
                            } while (0);
                        if (n_rp >= n_rp_allocated) {
                            (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                        }
                        rp[n_rp].lo = (initial);
                        rp[n_rp].hi = (value);
                        ++n_rp;
                    } while (0);
                    field_found = 1;
                }
                value = 0;
            }
        } else {
            do {
                if (value == 0 || value == 0)
                    do {
                        error(0, 0, (gettext("fields and positions are numbered from 1")));
                        usage(1);
                    } while (0);
                if (n_rp >= n_rp_allocated) {
                    (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                }
                rp[n_rp].lo = (value);
                rp[n_rp].hi = (value);
                ++n_rp;
            } while (0);
            value = 0;
            field_found = 1;
        }
        if (*fieldstr == '\x00') {
            break;
        }
        fieldstr++;
        lhs_specified = 0;
        rhs_specified = 0;
    } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
        static const char *num_start;
        if (!in_digits || !num_start)
            num_start = fieldstr;
        in_digits = 1;
        if (dash_found)
            rhs_specified = 1;
        else
            lhs_specified = 1;
        if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
            size_t len = strspn(num_start, "0123456789");
            char *bad_num = xstrndup(num_start, len);
            if (operating_mode == byte_mode)
                error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
            else
                error(0, 0, gettext("field number %s is too large"), quote(bad_num));
            free(bad_num);
            exit(1);
        }
        fieldstr++;
    } else
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
}


CondTester, a patch instance with id 85:
Spawn 1 instances, now Total 86
Counter: 87
Batcher Size:86
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:363
--Src File: src/cut.c
Fragment 0:
if ((*fieldstr == '-') && !(__abst_hole(fieldstr, in_digits, dash_found, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    in_digits = 0;
    if (dash_found)
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
    dash_found = 1;
    fieldstr++;
    if (lhs_specified && !value)
        do {
            error(0, 0, (gettext("fields and positions are numbered from 1")));
            usage(1);
        } while (0);
    initial = (lhs_specified ? value : 1);
    value = 0;
} else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
    in_digits = 0;
    if (dash_found) {
        dash_found = 0;
        if (!lhs_specified && !rhs_specified)
            do {
                error(0, 0, (gettext("invalid range with no endpoint: -")));
                usage(1);
            } while (0);
        if (!rhs_specified) {
            if (eol_range_start == 0 || initial < eol_range_start)
                eol_range_start = initial;
            field_found = 1;
        } else {
            if (value < initial)
                do {
                    error(0, 0, (gettext("invalid decreasing range")));
                    usage(1);
                } while (0);
            if (eol_range_start != 0) {
                if (initial < eol_range_start) {
                    if (eol_range_start <= value) {
                        eol_range_start = initial;
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                    }
                    field_found = 1;
                }
            } else {
                do {
                    if (initial == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (initial);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                field_found = 1;
            }
            value = 0;
        }
    } else {
        do {
            if (value == 0 || value == 0)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            if (n_rp >= n_rp_allocated) {
                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
            }
            rp[n_rp].lo = (value);
            rp[n_rp].hi = (value);
            ++n_rp;
        } while (0);
        value = 0;
        field_found = 1;
    }
    if (*fieldstr == '\x00') {
        break;
    }
    fieldstr++;
    lhs_specified = 0;
    rhs_specified = 0;
} else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
    static const char *num_start;
    if (!in_digits || !num_start)
        num_start = fieldstr;
    in_digits = 1;
    if (dash_found)
        rhs_specified = 1;
    else
        lhs_specified = 1;
    if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
        size_t len = strspn(num_start, "0123456789");
        char *bad_num = xstrndup(num_start, len);
        if (operating_mode == byte_mode)
            error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
        else
            error(0, 0, gettext("field number %s is too large"), quote(bad_num));
        free(bad_num);
        exit(1);
    }
    fieldstr++;
} else
    do {
        error(0, 0, (gettext("invalid byte, character or field list")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 86:
Spawn 1 instances, now Total 87
Counter: 88
Batcher Size:87
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:363
--Src File: src/cut.c
Fragment 0:
if ((*fieldstr == '-') || (__abst_hole(fieldstr, in_digits, dash_found, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified))) {
    in_digits = 0;
    if (dash_found)
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
    dash_found = 1;
    fieldstr++;
    if (lhs_specified && !value)
        do {
            error(0, 0, (gettext("fields and positions are numbered from 1")));
            usage(1);
        } while (0);
    initial = (lhs_specified ? value : 1);
    value = 0;
} else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
    in_digits = 0;
    if (dash_found) {
        dash_found = 0;
        if (!lhs_specified && !rhs_specified)
            do {
                error(0, 0, (gettext("invalid range with no endpoint: -")));
                usage(1);
            } while (0);
        if (!rhs_specified) {
            if (eol_range_start == 0 || initial < eol_range_start)
                eol_range_start = initial;
            field_found = 1;
        } else {
            if (value < initial)
                do {
                    error(0, 0, (gettext("invalid decreasing range")));
                    usage(1);
                } while (0);
            if (eol_range_start != 0) {
                if (initial < eol_range_start) {
                    if (eol_range_start <= value) {
                        eol_range_start = initial;
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                    }
                    field_found = 1;
                }
            } else {
                do {
                    if (initial == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (initial);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                field_found = 1;
            }
            value = 0;
        }
    } else {
        do {
            if (value == 0 || value == 0)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            if (n_rp >= n_rp_allocated) {
                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
            }
            rp[n_rp].lo = (value);
            rp[n_rp].hi = (value);
            ++n_rp;
        } while (0);
        value = 0;
        field_found = 1;
    }
    if (*fieldstr == '\x00') {
        break;
    }
    fieldstr++;
    lhs_specified = 0;
    rhs_specified = 0;
} else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
    static const char *num_start;
    if (!in_digits || !num_start)
        num_start = fieldstr;
    in_digits = 1;
    if (dash_found)
        rhs_specified = 1;
    else
        lhs_specified = 1;
    if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
        size_t len = strspn(num_start, "0123456789");
        char *bad_num = xstrndup(num_start, len);
        if (operating_mode == byte_mode)
            error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
        else
            error(0, 0, gettext("field number %s is too large"), quote(bad_num));
        free(bad_num);
        exit(1);
    }
    fieldstr++;
} else
    do {
        error(0, 0, (gettext("invalid byte, character or field list")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 87:
Spawn 1 instances, now Total 88
Counter: 89
Batcher Size:88
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:474
--Src File: src/cut.c
Fragment 0:
if ((!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) && !(__abst_hole(fieldstr, value, lhs_specified, rhs_specified, num_start, dash_found, operating_mode, in_digits, max_range_endpoint, n_rp, i, rp, field_found, n_rp_allocated, printable_field, initial, eol_range_start, complement, output_delimiter_specified))) {
    size_t len = strspn(num_start, "0123456789");
    char *bad_num = xstrndup(num_start, len);
    if (operating_mode == byte_mode)
        error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
    else
        error(0, 0, gettext("field number %s is too large"), quote(bad_num));
    free(bad_num);
    exit(1);
}


CondTester, a patch instance with id 88:
Spawn 1 instances, now Total 89
Counter: 90
Batcher Size:89
Preprocess the following candidate with CondTester:
Priority 20000
At location src/cut.c:474
--Src File: src/cut.c
Fragment 0:
if ((!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) || (__abst_hole(fieldstr, value, lhs_specified, rhs_specified, num_start, dash_found, operating_mode, in_digits, max_range_endpoint, n_rp, i, rp, field_found, n_rp_allocated, printable_field, initial, eol_range_start, complement, output_delimiter_specified))) {
    size_t len = strspn(num_start, "0123456789");
    char *bad_num = xstrndup(num_start, len);
    if (operating_mode == byte_mode)
        error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
    else
        error(0, 0, gettext("field number %s is too large"), quote(bad_num));
    free(bad_num);
    exit(1);
}


CondTester, a patch instance with id 89:
Spawn 1 instances, now Total 90
Counter: 91
Batcher Size:90
Preprocess the following candidate with CondTester:
Priority 9923
At location src/cut.c:452
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(fieldstr, lhs_specified, rhs_specified, field_found, value, rp, n_rp, n_rp_allocated, in_digits, initial, dash_found, operating_mode, eol_range_start, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
break;


CondTester, a patch instance with id 90:
Spawn 1 instances, now Total 91
Counter: 92
Batcher Size:91
Preprocess the following candidate with CondTester:
Priority 8676
At location src/cut.c:500
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(rp, i, max_range_endpoint, rp[i].hi, n_rp, fieldstr, printable_field, eol_range_start, rp[i].lo, operating_mode, complement, output_delimiter_specified, value, lhs_specified, rhs_specified, dash_found, in_digits, field_found, n_rp_allocated, initial)))
    break;
if (rp[i].hi > max_range_endpoint)
    max_range_endpoint = rp[i].hi;


CondTester, a patch instance with id 91:
Spawn 1 instances, now Total 92
Counter: 93
Batcher Size:92
Preprocess the following candidate with CondTester:
Priority 8662
At location src/cut.c:363
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(fieldstr, in_digits, dash_found, value, lhs_specified, initial, rhs_specified, eol_range_start, field_found, rp, n_rp, n_rp_allocated, operating_mode, max_range_endpoint, i, printable_field, complement, output_delimiter_specified)))
    break;
if (*fieldstr == '-') {
    in_digits = 0;
    if (dash_found)
        do {
            error(0, 0, (gettext("invalid byte, character or field list")));
            usage(1);
        } while (0);
    dash_found = 1;
    fieldstr++;
    if (lhs_specified && !value)
        do {
            error(0, 0, (gettext("fields and positions are numbered from 1")));
            usage(1);
        } while (0);
    initial = (lhs_specified ? value : 1);
    value = 0;
} else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
    in_digits = 0;
    if (dash_found) {
        dash_found = 0;
        if (!lhs_specified && !rhs_specified)
            do {
                error(0, 0, (gettext("invalid range with no endpoint: -")));
                usage(1);
            } while (0);
        if (!rhs_specified) {
            if (eol_range_start == 0 || initial < eol_range_start)
                eol_range_start = initial;
            field_found = 1;
        } else {
            if (value < initial)
                do {
                    error(0, 0, (gettext("invalid decreasing range")));
                    usage(1);
                } while (0);
            if (eol_range_start != 0) {
                if (initial < eol_range_start) {
                    if (eol_range_start <= value) {
                        eol_range_start = initial;
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                    }
                    field_found = 1;
                }
            } else {
                do {
                    if (initial == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (initial);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                field_found = 1;
            }
            value = 0;
        }
    } else {
        do {
            if (value == 0 || value == 0)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            if (n_rp >= n_rp_allocated) {
                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
            }
            rp[n_rp].lo = (value);
            rp[n_rp].hi = (value);
            ++n_rp;
        } while (0);
        value = 0;
        field_found = 1;
    }
    if (*fieldstr == '\x00') {
        break;
    }
    fieldstr++;
    lhs_specified = 0;
    rhs_specified = 0;
} else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
    static const char *num_start;
    if (!in_digits || !num_start)
        num_start = fieldstr;
    in_digits = 1;
    if (dash_found)
        rhs_specified = 1;
    else
        lhs_specified = 1;
    if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
        size_t len = strspn(num_start, "0123456789");
        char *bad_num = xstrndup(num_start, len);
        if (operating_mode == byte_mode)
            error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
        else
            error(0, 0, gettext("field number %s is too large"), quote(bad_num));
        free(bad_num);
        exit(1);
    }
    fieldstr++;
} else
    do {
        error(0, 0, (gettext("invalid byte, character or field list")));
        usage(1);
    } while (0);


CondTester, a patch instance with id 92:
Spawn 1 instances, now Total 93
Counter: 94
Batcher Size:93
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
eol_range_start = (tablesize);
return y % tablesize;


BasicTester, a patch instance with id 0:
Spawn 1 instances, now Total 94
Counter: 95
Batcher Size:94
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
return y % tablesize;


BasicTester, a patch instance with id 1:
Spawn 1 instances, now Total 95
Counter: 96
Batcher Size:95
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (tablesize);
return y % tablesize;


BasicTester, a patch instance with id 2:
Spawn 1 instances, now Total 96
Counter: 97
Batcher Size:96
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (y);
return y % tablesize;


BasicTester, a patch instance with id 3:
Spawn 1 instances, now Total 97
Counter: 98
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
return y % tablesize;


BasicTester, a patch instance with id 4:
Spawn 1 instances, now Total 98
Counter: 99
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
return y % tablesize;


BasicTester, a patch instance with id 5:
Spawn 1 instances, now Total 99
Counter: 100
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
return y % tablesize;


BasicTester, a patch instance with id 6:
Spawn 1 instances, now Total 100
Counter: 101
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
return y % tablesize;


BasicTester, a patch instance with id 7:
Spawn 1 instances, now Total 101
Counter: 102
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
return y % tablesize;


BasicTester, a patch instance with id 8:
Spawn 1 instances, now Total 102
Counter: 103
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
return y % tablesize;


BasicTester, a patch instance with id 9:
Spawn 1 instances, now Total 103
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 0:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 3:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 4:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 5:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 6:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 7:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 8:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 9:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 104
Batcher Size:93
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
return y % tablesize;


BasicTester, a patch instance with id 10:
Spawn 1 instances, now Total 104
Counter: 105
Batcher Size:94
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
return y % tablesize;


BasicTester, a patch instance with id 11:
Spawn 1 instances, now Total 105
Counter: 106
Batcher Size:95
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (tablesize);
return y % tablesize;


BasicTester, a patch instance with id 12:
Spawn 1 instances, now Total 106
Counter: 107
Batcher Size:96
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
return y % tablesize;


BasicTester, a patch instance with id 13:
Spawn 1 instances, now Total 107
Counter: 108
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
return y % tablesize;


BasicTester, a patch instance with id 14:
Spawn 1 instances, now Total 108
Counter: 109
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (y);
return y % tablesize;


BasicTester, a patch instance with id 15:
Spawn 1 instances, now Total 109
Counter: 110
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
return y % tablesize;


BasicTester, a patch instance with id 16:
Spawn 1 instances, now Total 110
Counter: 111
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
return y % tablesize;


BasicTester, a patch instance with id 17:
Spawn 1 instances, now Total 111
Counter: 112
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
return y % tablesize;


BasicTester, a patch instance with id 18:
Spawn 1 instances, now Total 112
Counter: 113
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
return y % tablesize;


BasicTester, a patch instance with id 19:
Spawn 1 instances, now Total 113
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 10:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 11:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 12:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 13 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 14:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 15:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 16:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 17:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 18:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 19:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 114
Batcher Size:93
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
return y % tablesize;


BasicTester, a patch instance with id 20:
Spawn 1 instances, now Total 114
Counter: 115
Batcher Size:94
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
return y % tablesize;


BasicTester, a patch instance with id 21:
Spawn 1 instances, now Total 115
Counter: 116
Batcher Size:95
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
return y % tablesize;


BasicTester, a patch instance with id 22:
Spawn 1 instances, now Total 116
Counter: 117
Batcher Size:96
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
return y % tablesize;


BasicTester, a patch instance with id 23:
Spawn 1 instances, now Total 117
Counter: 118
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
return y % tablesize;


BasicTester, a patch instance with id 24:
Spawn 1 instances, now Total 118
Counter: 119
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
exit(1);
return y % tablesize;


BasicTester, a patch instance with id 25:
Spawn 1 instances, now Total 119
Counter: 120
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
return y % tablesize;


BasicTester, a patch instance with id 26:
Spawn 1 instances, now Total 120
Counter: 121
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
return y % tablesize;


BasicTester, a patch instance with id 27:
Spawn 1 instances, now Total 121
Counter: 122
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
return y % tablesize;


BasicTester, a patch instance with id 28:
Spawn 1 instances, now Total 122
Counter: 123
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
eol_range_start = (y);
return y % tablesize;


BasicTester, a patch instance with id 29:
Spawn 1 instances, now Total 123
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 20:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 21:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 22:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 23:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 24:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 25:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 26:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 27:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 28:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 29:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 124
Batcher Size:93
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
return y % tablesize;


BasicTester, a patch instance with id 30:
Spawn 1 instances, now Total 124
Counter: 125
Batcher Size:94
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
exit(0);
return y % tablesize;


BasicTester, a patch instance with id 31:
Spawn 1 instances, now Total 125
Counter: 126
Batcher Size:95
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
delim = '\t';
return y % tablesize;


BasicTester, a patch instance with id 32:
Spawn 1 instances, now Total 126
Counter: 127
Batcher Size:96
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
return y % tablesize;


BasicTester, a patch instance with id 33:
Spawn 1 instances, now Total 127
Counter: 128
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
emit_try_help();
return y % tablesize;


BasicTester, a patch instance with id 34:
Spawn 1 instances, now Total 128
Counter: 129
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
return y % tablesize;


BasicTester, a patch instance with id 35:
Spawn 1 instances, now Total 129
Counter: 130
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
return y % tablesize;


BasicTester, a patch instance with id 36:
Spawn 1 instances, now Total 130
Counter: 131
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
return y % tablesize;


BasicTester, a patch instance with id 37:
Spawn 1 instances, now Total 131
Counter: 132
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
delim = (0);
return y % tablesize;


BasicTester, a patch instance with id 38:
Spawn 1 instances, now Total 132
Counter: 133
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
return y % tablesize;


BasicTester, a patch instance with id 39:
Spawn 1 instances, now Total 133
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 30:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 31:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 32:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 33:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 34:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 35:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 36:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 37:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 38:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 39:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 134
Batcher Size:93
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
return y % tablesize;


BasicTester, a patch instance with id 40:
Spawn 1 instances, now Total 134
Counter: 135
Batcher Size:94
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
return y % tablesize;


BasicTester, a patch instance with id 41:
Spawn 1 instances, now Total 135
Counter: 136
Batcher Size:95
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
return y % tablesize;


BasicTester, a patch instance with id 42:
Spawn 1 instances, now Total 136
Counter: 137
Batcher Size:96
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
return y % tablesize;


BasicTester, a patch instance with id 43:
Spawn 1 instances, now Total 137
Counter: 138
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
return y % tablesize;


BasicTester, a patch instance with id 44:
Spawn 1 instances, now Total 138
Counter: 139
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
return y % tablesize;


BasicTester, a patch instance with id 45:
Spawn 1 instances, now Total 139
Counter: 140
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
return y % tablesize;


BasicTester, a patch instance with id 46:
Spawn 1 instances, now Total 140
Counter: 141
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
return y % tablesize;


BasicTester, a patch instance with id 47:
Spawn 1 instances, now Total 141
Counter: 142
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
xalloc_die();
return y % tablesize;


BasicTester, a patch instance with id 48:
Spawn 1 instances, now Total 142
Counter: 143
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
return y % tablesize;


BasicTester, a patch instance with id 49:
Spawn 1 instances, now Total 143
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 40:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 41:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 42:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 43:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 44:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 45:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 46:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 47 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 48:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 49:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 144
Batcher Size:93
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
return y % tablesize;


BasicTester, a patch instance with id 50:
Spawn 1 instances, now Total 144
Counter: 145
Batcher Size:94
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
return y % tablesize;


BasicTester, a patch instance with id 51:
Spawn 1 instances, now Total 145
Counter: 146
Batcher Size:95
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
return y % tablesize;


BasicTester, a patch instance with id 52:
Spawn 1 instances, now Total 146
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 52:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 147
Batcher Size:95
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
return y % tablesize;


BasicTester, a patch instance with id 53:
Spawn 1 instances, now Total 147
Counter: 148
Batcher Size:96
Preprocess the following candidate with BasicTester:
Priority 7476
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
return y % tablesize;


BasicTester, a patch instance with id 54:
Spawn 1 instances, now Total 148
Counter: 149
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 55:
Spawn 1 instances, now Total 149
Counter: 150
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 56:
Spawn 1 instances, now Total 150
Counter: 151
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 57:
Spawn 1 instances, now Total 151
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 57:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 152
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 58:
Spawn 1 instances, now Total 152
Counter: 153
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
xalloc_die();
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 59:
Spawn 1 instances, now Total 153
Counter: 154
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 60:
Spawn 1 instances, now Total 154
Counter: 155
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 61:
Spawn 1 instances, now Total 155
Counter: 156
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 62:
Spawn 1 instances, now Total 156
Counter: 157
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 63:
Spawn 1 instances, now Total 157
Counter: 158
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 64:
Spawn 1 instances, now Total 158
Counter: 159
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 65:
Spawn 1 instances, now Total 159
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 55:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 56:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 58:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 59:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 60:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 61:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 62:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 63:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 64:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 65:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 160
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 66:
Spawn 1 instances, now Total 160
Counter: 161
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 67:
Spawn 1 instances, now Total 161
Counter: 162
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 68:
Spawn 1 instances, now Total 162
Counter: 163
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (i);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 69:
Spawn 1 instances, now Total 163
Counter: 164
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 70:
Spawn 1 instances, now Total 164
Counter: 165
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 71:
Spawn 1 instances, now Total 165
Counter: 166
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 72:
Spawn 1 instances, now Total 166
Counter: 167
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 73:
Spawn 1 instances, now Total 167
Counter: 168
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 74:
Spawn 1 instances, now Total 168
Counter: 169
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 75:
Spawn 1 instances, now Total 169
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 66:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 67:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 68:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 69:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 70 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 71:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 72:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 73:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 74:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 75:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 170
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 76:
Spawn 1 instances, now Total 170
Counter: 171
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 77:
Spawn 1 instances, now Total 171
Counter: 172
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 78:
Spawn 1 instances, now Total 172
Counter: 173
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 79:
Spawn 1 instances, now Total 173
Counter: 174
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 80:
Spawn 1 instances, now Total 174
Counter: 175
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (i);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 81:
Spawn 1 instances, now Total 175
Counter: 176
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 82:
Spawn 1 instances, now Total 176
Counter: 177
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 83:
Spawn 1 instances, now Total 177
Counter: 178
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 84:
Spawn 1 instances, now Total 178
Counter: 179
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 85:
Spawn 1 instances, now Total 179
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 76:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 77:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 78:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 79:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 80:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 81:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 82:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 83:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 84:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 85:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 180
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 86:
Spawn 1 instances, now Total 180
Counter: 181
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 87:
Spawn 1 instances, now Total 181
Counter: 182
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 88:
Spawn 1 instances, now Total 182
Counter: 183
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 89:
Spawn 1 instances, now Total 183
Counter: 184
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 90:
Spawn 1 instances, now Total 184
Counter: 185
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 91:
Spawn 1 instances, now Total 185
Counter: 186
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 92:
Spawn 1 instances, now Total 186
Counter: 187
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 93:
Spawn 1 instances, now Total 187
Counter: 188
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 94:
Spawn 1 instances, now Total 188
Counter: 189
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 95:
Spawn 1 instances, now Total 189
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 86:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 87:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 88:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 89:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 90:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 91:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 92:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 93:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 94:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 95:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 190
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 96:
Spawn 1 instances, now Total 190
Counter: 191
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 97:
Spawn 1 instances, now Total 191
Counter: 192
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 98:
Spawn 1 instances, now Total 192
Counter: 193
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
eol_range_start = (i);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 99:
Spawn 1 instances, now Total 193
Counter: 194
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
exit(0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 100:
Spawn 1 instances, now Total 194
Counter: 195
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
exit(1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 101:
Spawn 1 instances, now Total 195
Counter: 196
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 102:
Spawn 1 instances, now Total 196
Counter: 197
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
emit_try_help();
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 103:
Spawn 1 instances, now Total 197
Counter: 198
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 104:
Spawn 1 instances, now Total 198
Counter: 199
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 105:
Spawn 1 instances, now Total 199
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 96:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 97:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 98:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 99:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 100:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 101:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 102:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 103:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 104:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 105:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 200
Batcher Size:97
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 106:
Spawn 1 instances, now Total 200
Counter: 201
Batcher Size:98
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 107:
Spawn 1 instances, now Total 201
Counter: 202
Batcher Size:99
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
delim = (1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 108:
Spawn 1 instances, now Total 202
Counter: 203
Batcher Size:100
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 109:
Spawn 1 instances, now Total 203
Counter: 204
Batcher Size:101
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
delim = (0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 110:
Spawn 1 instances, now Total 204
Counter: 205
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 111:
Spawn 1 instances, now Total 205
Counter: 206
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
delim = '\t';
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 112:
Spawn 1 instances, now Total 206
Counter: 207
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7474
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 113:
Spawn 1 instances, now Total 207
Counter: 208
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 114:
Spawn 1 instances, now Total 208
Counter: 209
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 115:
Spawn 1 instances, now Total 209
Counter: 210
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (k_selected);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 116:
Spawn 1 instances, now Total 210
Counter: 211
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 117:
Spawn 1 instances, now Total 211
Counter: 212
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 118:
Spawn 1 instances, now Total 212
Counter: 213
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 119:
Spawn 1 instances, now Total 213
Counter: 214
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 120:
Spawn 1 instances, now Total 214
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 24:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 29:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 30:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 114:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 115:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 116:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 117:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 118:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 119:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 120:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 215
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (is_selected);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 121:
Spawn 1 instances, now Total 215
Counter: 216
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 122:
Spawn 1 instances, now Total 216
Counter: 217
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 123:
Spawn 1 instances, now Total 217
Counter: 218
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 124:
Spawn 1 instances, now Total 218
Counter: 219
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 125:
Spawn 1 instances, now Total 219
Counter: 220
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 126:
Spawn 1 instances, now Total 220
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 126:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 221
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 127:
Spawn 1 instances, now Total 221
Counter: 222
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 128:
Spawn 1 instances, now Total 222
Counter: 223
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 129:
Spawn 1 instances, now Total 223
Counter: 224
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 130:
Spawn 1 instances, now Total 224
Counter: 225
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 131:
Spawn 1 instances, now Total 225
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 121:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 122:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 123:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 124:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 125:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 127:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 128:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 129:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 130:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 131:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 226
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 132:
Spawn 1 instances, now Total 226
Counter: 227
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 133:
Spawn 1 instances, now Total 227
Counter: 228
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 134:
Spawn 1 instances, now Total 228
Counter: 229
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (k);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 135:
Spawn 1 instances, now Total 229
Counter: 230
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 136:
Spawn 1 instances, now Total 230
Counter: 231
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 137:
Spawn 1 instances, now Total 231
Counter: 232
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (k);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 138:
Spawn 1 instances, now Total 232
Counter: 233
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 139:
Spawn 1 instances, now Total 233
Counter: 234
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 140:
Spawn 1 instances, now Total 234
Counter: 235
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 141:
Spawn 1 instances, now Total 235
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 132:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 133:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 134:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 135:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 136:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 137:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 138:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 139 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 140:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 141:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 236
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 142:
Spawn 1 instances, now Total 236
Counter: 237
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 143:
Spawn 1 instances, now Total 237
Counter: 238
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 144:
Spawn 1 instances, now Total 238
Counter: 239
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 145:
Spawn 1 instances, now Total 239
Counter: 240
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 146:
Spawn 1 instances, now Total 240
Counter: 241
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (is_selected);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 147:
Spawn 1 instances, now Total 241
Counter: 242
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 148:
Spawn 1 instances, now Total 242
Counter: 243
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 149:
Spawn 1 instances, now Total 243
Counter: 244
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (range_start && is_selected)
    *range_start = is_range_start_index(k);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 150:
Spawn 1 instances, now Total 244
Counter: 245
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 151:
Spawn 1 instances, now Total 245
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 142:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 143:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 144:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 145:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 146:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 147:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 148:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 149:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 150:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 151:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 246
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (k_selected);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 152:
Spawn 1 instances, now Total 246
Counter: 247
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 153:
Spawn 1 instances, now Total 247
Counter: 248
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
exit(1);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 154:
Spawn 1 instances, now Total 248
Counter: 249
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 155:
Spawn 1 instances, now Total 249
Counter: 250
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 156:
Spawn 1 instances, now Total 250
Counter: 251
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 157:
Spawn 1 instances, now Total 251
Counter: 252
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 158:
Spawn 1 instances, now Total 252
Counter: 253
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 159:
Spawn 1 instances, now Total 253
Counter: 254
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
eol_range_start = (k);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 160:
Spawn 1 instances, now Total 254
Counter: 255
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 161:
Spawn 1 instances, now Total 255
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 152:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 153:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 154:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 155:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 156:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 157:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 158:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 159:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 160:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 161:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 256
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
exit(0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 162:
Spawn 1 instances, now Total 256
Counter: 257
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 163:
Spawn 1 instances, now Total 257
Counter: 258
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
delim = (0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 164:
Spawn 1 instances, now Total 258
Counter: 259
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 165:
Spawn 1 instances, now Total 259
Counter: 260
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
emit_try_help();
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 166:
Spawn 1 instances, now Total 260
Counter: 261
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 167:
Spawn 1 instances, now Total 261
Counter: 262
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
delim = '\t';
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 168:
Spawn 1 instances, now Total 262
Counter: 263
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 169:
Spawn 1 instances, now Total 263
Counter: 264
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
*range_start = (is_selected);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 170:
Spawn 1 instances, now Total 264
Counter: 265
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
*range_start = is_range_start_index(k);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 171:
Spawn 1 instances, now Total 265
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 162:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 163:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 164:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 165:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 166:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 167:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 168:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 169:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 170:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 171:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 266
Batcher Size:102
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
*range_start = (k_selected);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 172:
Spawn 1 instances, now Total 266
Counter: 267
Batcher Size:103
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 173:
Spawn 1 instances, now Total 267
Counter: 268
Batcher Size:104
Preprocess the following candidate with BasicTester:
Priority 7472
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
if (range_start && is_selected)
    *range_start = is_range_start_index(k);


BasicTester, a patch instance with id 174:
Spawn 1 instances, now Total 268
Counter: 269
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 175:
Spawn 1 instances, now Total 269
Counter: 270
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 176:
Spawn 1 instances, now Total 270
Counter: 271
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 177:
Spawn 1 instances, now Total 271
Counter: 272
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
xalloc_die();
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 178:
Spawn 1 instances, now Total 272
Counter: 273
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 179:
Spawn 1 instances, now Total 273
Counter: 274
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 180:
Spawn 1 instances, now Total 274
Counter: 275
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 181:
Spawn 1 instances, now Total 275
Counter: 276
Batcher Size:112
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 182:
Spawn 1 instances, now Total 276
Counter: 277
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 183:
Spawn 1 instances, now Total 277
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 183:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 278
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 184:
Spawn 1 instances, now Total 278
Counter: 279
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 185:
Spawn 1 instances, now Total 279
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 175:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 176:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 177:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 178:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 179:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 180:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 181 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 182:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 184:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 185:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 280
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 186:
Spawn 1 instances, now Total 280
Counter: 281
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 187:
Spawn 1 instances, now Total 281
Counter: 282
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 188:
Spawn 1 instances, now Total 282
Counter: 283
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 189:
Spawn 1 instances, now Total 283
Counter: 284
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 190:
Spawn 1 instances, now Total 284
Counter: 285
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 191:
Spawn 1 instances, now Total 285
Counter: 286
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (8);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 192:
Spawn 1 instances, now Total 286
Counter: 287
Batcher Size:112
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (i);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 193:
Spawn 1 instances, now Total 287
Counter: 288
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (n);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 194:
Spawn 1 instances, now Total 288
Counter: 289
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 195:
Spawn 1 instances, now Total 289
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 186:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 187:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 188:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 189:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 190:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 191:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 192:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 193:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 194:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 195:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 290
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 196:
Spawn 1 instances, now Total 290
Counter: 291
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 197:
Spawn 1 instances, now Total 291
Counter: 292
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 198:
Spawn 1 instances, now Total 292
Counter: 293
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 199:
Spawn 1 instances, now Total 293
Counter: 294
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 200:
Spawn 1 instances, now Total 294
Counter: 295
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = (8);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 201:
Spawn 1 instances, now Total 295
Counter: 296
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 202:
Spawn 1 instances, now Total 296
Counter: 297
Batcher Size:112
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (i);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 203:
Spawn 1 instances, now Total 297
Counter: 298
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 204:
Spawn 1 instances, now Total 298
Counter: 299
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 205:
Spawn 1 instances, now Total 299
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 196:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 197:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 198:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 199:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 200:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 201:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 202:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 203:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 204:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 205 failed as well!
Counter: 300
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (n);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 206:
Spawn 1 instances, now Total 300
Counter: 301
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 207:
Spawn 1 instances, now Total 301
Counter: 302
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (8);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 208:
Spawn 1 instances, now Total 302
Counter: 303
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 209:
Spawn 1 instances, now Total 303
Counter: 304
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 210:
Spawn 1 instances, now Total 304
Counter: 305
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 211:
Spawn 1 instances, now Total 305
Counter: 306
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 212:
Spawn 1 instances, now Total 306
Counter: 307
Batcher Size:112
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 213:
Spawn 1 instances, now Total 307
Counter: 308
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 214:
Spawn 1 instances, now Total 308
Counter: 309
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
eol_range_start = (n);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 215:
Spawn 1 instances, now Total 309
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 206:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 207:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 208:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 209:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 210:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 211:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 212:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 213:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 214:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 215:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 310
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 216:
Spawn 1 instances, now Total 310
Counter: 311
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 217:
Spawn 1 instances, now Total 311
Counter: 312
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 218:
Spawn 1 instances, now Total 312
Counter: 313
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 219:
Spawn 1 instances, now Total 313
Counter: 314
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 220:
Spawn 1 instances, now Total 314
Counter: 315
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
exit(0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 221:
Spawn 1 instances, now Total 315
Counter: 316
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 222:
Spawn 1 instances, now Total 316
Counter: 317
Batcher Size:112
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
exit_failure = (8);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 223:
Spawn 1 instances, now Total 317
Counter: 318
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 224:
Spawn 1 instances, now Total 318
Counter: 319
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 225:
Spawn 1 instances, now Total 319
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 216:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 217:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 218:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 219:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 220:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 221:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 222:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 223:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 224:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 225:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 320
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
exit(1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 226:
Spawn 1 instances, now Total 320
Counter: 321
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 227:
Spawn 1 instances, now Total 321
Counter: 322
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (8);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 228:
Spawn 1 instances, now Total 322
Counter: 323
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
eol_range_start = (8);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 229:
Spawn 1 instances, now Total 323
Counter: 324
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
eol_range_start = (i);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 230:
Spawn 1 instances, now Total 324
Counter: 325
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 231:
Spawn 1 instances, now Total 325
Counter: 326
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
delim = (8);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 232:
Spawn 1 instances, now Total 326
Counter: 327
Batcher Size:112
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 233:
Spawn 1 instances, now Total 327
Counter: 328
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 234:
Spawn 1 instances, now Total 328
Counter: 329
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 235:
Spawn 1 instances, now Total 329
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 226:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 227:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 228:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 229:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 230:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 231:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 232:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 233:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 234:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 235:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 330
Batcher Size:105
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 236:
Spawn 1 instances, now Total 330
Counter: 331
Batcher Size:106
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
emit_try_help();
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 237:
Spawn 1 instances, now Total 331
Counter: 332
Batcher Size:107
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
delim = '\t';
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 238:
Spawn 1 instances, now Total 332
Counter: 333
Batcher Size:108
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
delim = (0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 239:
Spawn 1 instances, now Total 333
Counter: 334
Batcher Size:109
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
delim = (1);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 240:
Spawn 1 instances, now Total 334
Counter: 335
Batcher Size:110
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 241:
Spawn 1 instances, now Total 335
Counter: 336
Batcher Size:111
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 242:
Spawn 1 instances, now Total 336
Counter: 337
Batcher Size:112
Preprocess the following candidate with BasicTester:
Priority 7466
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 243:
Spawn 1 instances, now Total 337
Counter: 338
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
print_delimiter = 0;
byte_idx = 0;


BasicTester, a patch instance with id 244:
Spawn 1 instances, now Total 338
Counter: 339
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
print_delimiter = 1;
byte_idx = 0;


BasicTester, a patch instance with id 245:
Spawn 1 instances, now Total 339
Counter: 340
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
byte_idx = 0;


BasicTester, a patch instance with id 246:
Spawn 1 instances, now Total 340
Counter: 341
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
byte_idx = 0;


BasicTester, a patch instance with id 247:
Spawn 1 instances, now Total 341
Counter: 342
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
byte_idx = 0;


BasicTester, a patch instance with id 248:
Spawn 1 instances, now Total 342
Counter: 343
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
byte_idx = 0;


BasicTester, a patch instance with id 249:
Spawn 1 instances, now Total 343
Counter: 344
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
xalloc_die();
byte_idx = 0;


BasicTester, a patch instance with id 250:
Spawn 1 instances, now Total 344
Counter: 345
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
byte_idx = 0;


BasicTester, a patch instance with id 251:
Spawn 1 instances, now Total 345
Counter: 346
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
byte_idx = 0;


BasicTester, a patch instance with id 252:
Spawn 1 instances, now Total 346
Counter: 347
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
byte_idx = 0;


BasicTester, a patch instance with id 253:
Spawn 1 instances, now Total 347
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 244:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 245:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 246:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 247:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 248:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 249:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 250:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 251:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 252:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 253:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 348
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (print_delimiter);
byte_idx = 0;


BasicTester, a patch instance with id 254:
Spawn 1 instances, now Total 348
Counter: 349
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
byte_idx = 0;


BasicTester, a patch instance with id 255:
Spawn 1 instances, now Total 349
Counter: 350
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
byte_idx = 0;


BasicTester, a patch instance with id 256:
Spawn 1 instances, now Total 350
Counter: 351
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
byte_idx = 0;


BasicTester, a patch instance with id 257:
Spawn 1 instances, now Total 351
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 257:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 352
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
byte_idx = 0;


BasicTester, a patch instance with id 258:
Spawn 1 instances, now Total 352
Counter: 353
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
byte_idx = 0;


BasicTester, a patch instance with id 259:
Spawn 1 instances, now Total 353
Counter: 354
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
delim = (0);
byte_idx = 0;


BasicTester, a patch instance with id 260:
Spawn 1 instances, now Total 354
Counter: 355
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
byte_idx = 0;


BasicTester, a patch instance with id 261:
Spawn 1 instances, now Total 355
Counter: 356
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 262:
Spawn 1 instances, now Total 356
Counter: 357
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
byte_idx = 0;


BasicTester, a patch instance with id 263:
Spawn 1 instances, now Total 357
Counter: 358
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (byte_idx);
byte_idx = 0;


BasicTester, a patch instance with id 264:
Spawn 1 instances, now Total 358
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 254:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 255:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 256:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 258:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 259:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 260:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 261:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 262:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 263:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 264:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 359
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
byte_idx = 0;


BasicTester, a patch instance with id 265:
Spawn 1 instances, now Total 359
Counter: 360
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
print_delimiter = (print_delimiter);
byte_idx = 0;


BasicTester, a patch instance with id 266:
Spawn 1 instances, now Total 360
Counter: 361
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
byte_idx = 0;


BasicTester, a patch instance with id 267:
Spawn 1 instances, now Total 361
Counter: 362
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 268:
Spawn 1 instances, now Total 362
Counter: 363
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
byte_idx = 0;


BasicTester, a patch instance with id 269:
Spawn 1 instances, now Total 363
Counter: 364
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
byte_idx = 0;


BasicTester, a patch instance with id 270:
Spawn 1 instances, now Total 364
Counter: 365
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
byte_idx = 0;


BasicTester, a patch instance with id 271:
Spawn 1 instances, now Total 365
Counter: 366
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
byte_idx = 0;


BasicTester, a patch instance with id 272:
Spawn 1 instances, now Total 366
Counter: 367
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
byte_idx = 0;


BasicTester, a patch instance with id 273:
Spawn 1 instances, now Total 367
Counter: 368
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
byte_idx = 0;


BasicTester, a patch instance with id 274:
Spawn 1 instances, now Total 368
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 265:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 266:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 267:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 268:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 269:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 270:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 271:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 272:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 273:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 274:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 369
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
byte_idx = 0;


BasicTester, a patch instance with id 275:
Spawn 1 instances, now Total 369
Counter: 370
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
byte_idx = 0;


BasicTester, a patch instance with id 276:
Spawn 1 instances, now Total 370
Counter: 371
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
byte_idx = 0;


BasicTester, a patch instance with id 277:
Spawn 1 instances, now Total 371
Counter: 372
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (print_delimiter);
byte_idx = 0;


BasicTester, a patch instance with id 278:
Spawn 1 instances, now Total 372
Counter: 373
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
byte_idx = 0;


BasicTester, a patch instance with id 279:
Spawn 1 instances, now Total 373
Counter: 374
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
byte_idx = 0;


BasicTester, a patch instance with id 280:
Spawn 1 instances, now Total 374
Counter: 375
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
byte_idx = 0;


BasicTester, a patch instance with id 281:
Spawn 1 instances, now Total 375
Counter: 376
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
byte_idx = 0;


BasicTester, a patch instance with id 282:
Spawn 1 instances, now Total 376
Counter: 377
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (byte_idx);
byte_idx = 0;


BasicTester, a patch instance with id 283:
Spawn 1 instances, now Total 377
Counter: 378
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
byte_idx = 0;


BasicTester, a patch instance with id 284:
Spawn 1 instances, now Total 378
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 275:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 276:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 277:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 278:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 279:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 280:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 281:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 282 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 283:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 284:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 379
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 285:
Spawn 1 instances, now Total 379
Counter: 380
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
byte_idx = 0;


BasicTester, a patch instance with id 286:
Spawn 1 instances, now Total 380
Counter: 381
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
byte_idx = 0;


BasicTester, a patch instance with id 287:
Spawn 1 instances, now Total 381
Counter: 382
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
if (byte_idx > 0)
    putchar_unlocked('\n');
byte_idx = 0;


BasicTester, a patch instance with id 288:
Spawn 1 instances, now Total 382
Counter: 383
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
byte_idx = 0;


BasicTester, a patch instance with id 289:
Spawn 1 instances, now Total 383
Counter: 384
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
byte_idx = 0;


BasicTester, a patch instance with id 290:
Spawn 1 instances, now Total 384
Counter: 385
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
byte_idx = 0;


BasicTester, a patch instance with id 291:
Spawn 1 instances, now Total 385
Counter: 386
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
byte_idx = 0;


BasicTester, a patch instance with id 292:
Spawn 1 instances, now Total 386
Counter: 387
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
delim = (1);
byte_idx = 0;


BasicTester, a patch instance with id 293:
Spawn 1 instances, now Total 387
Counter: 388
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
byte_idx = 0;


BasicTester, a patch instance with id 294:
Spawn 1 instances, now Total 388
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 285:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 286:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 287:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 288:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 289:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 290:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 291:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 292:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 293:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 294:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 389
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 295:
Spawn 1 instances, now Total 389
Counter: 390
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 296:
Spawn 1 instances, now Total 390
Counter: 391
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
byte_idx = 0;


BasicTester, a patch instance with id 297:
Spawn 1 instances, now Total 391
Counter: 392
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
byte_idx = 0;


BasicTester, a patch instance with id 298:
Spawn 1 instances, now Total 392
Counter: 393
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 299:
Spawn 1 instances, now Total 393
Counter: 394
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 300:
Spawn 1 instances, now Total 394
Counter: 395
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 301:
Spawn 1 instances, now Total 395
Counter: 396
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 302:
Spawn 1 instances, now Total 396
Counter: 397
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
byte_idx = 0;


BasicTester, a patch instance with id 303:
Spawn 1 instances, now Total 397
Counter: 398
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 304:
Spawn 1 instances, now Total 398
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 295:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 296:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 297:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 298:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 299:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 300:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 301:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 302:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 303:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 304:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 399
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 305:
Spawn 1 instances, now Total 399
Counter: 400
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 306:
Spawn 1 instances, now Total 400
Counter: 401
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 307:
Spawn 1 instances, now Total 401
Counter: 402
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 308:
Spawn 1 instances, now Total 402
Counter: 403
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
byte_idx = 0;


BasicTester, a patch instance with id 309:
Spawn 1 instances, now Total 403
Counter: 404
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
byte_idx = 0;


BasicTester, a patch instance with id 310:
Spawn 1 instances, now Total 404
Counter: 405
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
eol_range_start = (byte_idx);
byte_idx = 0;


BasicTester, a patch instance with id 311:
Spawn 1 instances, now Total 405
Counter: 406
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 312:
Spawn 1 instances, now Total 406
Counter: 407
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
byte_idx = 0;


BasicTester, a patch instance with id 313:
Spawn 1 instances, now Total 407
Counter: 408
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
byte_idx = 0;


BasicTester, a patch instance with id 314:
Spawn 1 instances, now Total 408
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 305:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 306:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 307:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 308:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 309:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 310:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 311:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 312:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 313:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 314:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 409
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
byte_idx = 0;


BasicTester, a patch instance with id 315:
Spawn 1 instances, now Total 409
Counter: 410
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
byte_idx = 0;


BasicTester, a patch instance with id 316:
Spawn 1 instances, now Total 410
Counter: 411
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
exit(0);
byte_idx = 0;


BasicTester, a patch instance with id 317:
Spawn 1 instances, now Total 411
Counter: 412
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
exit(1);
byte_idx = 0;


BasicTester, a patch instance with id 318:
Spawn 1 instances, now Total 412
Counter: 413
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
byte_idx = 0;


BasicTester, a patch instance with id 319:
Spawn 1 instances, now Total 413
Counter: 414
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
emit_try_help();
byte_idx = 0;


BasicTester, a patch instance with id 320:
Spawn 1 instances, now Total 414
Counter: 415
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
byte_idx = 0;


BasicTester, a patch instance with id 321:
Spawn 1 instances, now Total 415
Counter: 416
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
byte_idx = 0;


BasicTester, a patch instance with id 322:
Spawn 1 instances, now Total 416
Counter: 417
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 323:
Spawn 1 instances, now Total 417
Counter: 418
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
byte_idx = 0;


BasicTester, a patch instance with id 324:
Spawn 1 instances, now Total 418
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 315:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 316:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 317:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 318:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 319:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 320:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 321:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 322:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 323:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 324:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 419
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
byte_idx = 0;


BasicTester, a patch instance with id 325:
Spawn 1 instances, now Total 419
Counter: 420
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
byte_idx = 0;


BasicTester, a patch instance with id 326:
Spawn 1 instances, now Total 420
Counter: 421
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
byte_idx = 0;
byte_idx = 0;


BasicTester, a patch instance with id 327:
Spawn 1 instances, now Total 421
Counter: 422
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
byte_idx = 0;


BasicTester, a patch instance with id 328:
Spawn 1 instances, now Total 422
Counter: 423
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
byte_idx = 0;


BasicTester, a patch instance with id 329:
Spawn 1 instances, now Total 423
Counter: 424
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
delim = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 330:
Spawn 1 instances, now Total 424
Counter: 425
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
delim = '\t';
byte_idx = 0;


BasicTester, a patch instance with id 331:
Spawn 1 instances, now Total 425
Counter: 426
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
byte_idx = 0;


BasicTester, a patch instance with id 332:
Spawn 1 instances, now Total 426
Counter: 427
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
byte_idx = 0;


BasicTester, a patch instance with id 333:
Spawn 1 instances, now Total 427
Counter: 428
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
byte_idx = 0;


BasicTester, a patch instance with id 334:
Spawn 1 instances, now Total 428
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 325:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 326:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 327:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 328 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 329:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 330:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 331:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 332:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 333:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 334 failed as well!
Counter: 429
Batcher Size:113
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
byte_idx = 0;


BasicTester, a patch instance with id 335:
Spawn 1 instances, now Total 429
Counter: 430
Batcher Size:114
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
byte_idx = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 336:
Spawn 1 instances, now Total 430
Counter: 431
Batcher Size:115
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
byte_idx = (1);
byte_idx = 0;


BasicTester, a patch instance with id 337:
Spawn 1 instances, now Total 431
Counter: 432
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
byte_idx = (byte_idx);
byte_idx = 0;


BasicTester, a patch instance with id 338:
Spawn 1 instances, now Total 432
Counter: 433
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
byte_idx = (0);
byte_idx = 0;


BasicTester, a patch instance with id 339:
Spawn 1 instances, now Total 433
Counter: 434
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 340:
Spawn 1 instances, now Total 434
Counter: 435
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 341:
Spawn 1 instances, now Total 435
Counter: 436
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 342:
Spawn 1 instances, now Total 436
Counter: 437
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 343:
Spawn 1 instances, now Total 437
Counter: 438
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 344:
Spawn 1 instances, now Total 438
Counter: 439
Batcher Size:123
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 345:
Spawn 1 instances, now Total 439
Counter: 440
Batcher Size:124
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 346:
Spawn 1 instances, now Total 440
Counter: 441
Batcher Size:125
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 347:
Spawn 1 instances, now Total 441
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 13:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 14:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 340:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 341:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 342:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 343:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 344:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 345:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 346:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 347:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 442
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 348:
Spawn 1 instances, now Total 442
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 348:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 443
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 349:
Spawn 1 instances, now Total 443
Counter: 444
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 350:
Spawn 1 instances, now Total 444
Counter: 445
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 351:
Spawn 1 instances, now Total 445
Counter: 446
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 352:
Spawn 1 instances, now Total 446
Counter: 447
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 353:
Spawn 1 instances, now Total 447
Counter: 448
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 354:
Spawn 1 instances, now Total 448
Counter: 449
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 355:
Spawn 1 instances, now Total 449
Counter: 450
Batcher Size:123
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 356:
Spawn 1 instances, now Total 450
Counter: 451
Batcher Size:124
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 357:
Spawn 1 instances, now Total 451
Counter: 452
Batcher Size:125
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 358:
Spawn 1 instances, now Total 452
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 349:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 350:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 351:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 352:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 353:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 354:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 355:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 356:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 357:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 358:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 453
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 359:
Spawn 1 instances, now Total 453
Counter: 454
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 360:
Spawn 1 instances, now Total 454
Counter: 455
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 361:
Spawn 1 instances, now Total 455
Counter: 456
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 362:
Spawn 1 instances, now Total 456
Counter: 457
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 363:
Spawn 1 instances, now Total 457
Counter: 458
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 364:
Spawn 1 instances, now Total 458
Counter: 459
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 365:
Spawn 1 instances, now Total 459
Counter: 460
Batcher Size:123
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 366:
Spawn 1 instances, now Total 460
Counter: 461
Batcher Size:124
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 367:
Spawn 1 instances, now Total 461
Counter: 462
Batcher Size:125
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 368:
Spawn 1 instances, now Total 462
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 359:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 360:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 361:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 362:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 363:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 364:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 365:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 366 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 367:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 368:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 463
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 369:
Spawn 1 instances, now Total 463
Counter: 464
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 370:
Spawn 1 instances, now Total 464
Counter: 465
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 371:
Spawn 1 instances, now Total 465
Counter: 466
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 372:
Spawn 1 instances, now Total 466
Counter: 467
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 373:
Spawn 1 instances, now Total 467
Counter: 468
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 374:
Spawn 1 instances, now Total 468
Counter: 469
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 375:
Spawn 1 instances, now Total 469
Counter: 470
Batcher Size:123
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 376:
Spawn 1 instances, now Total 470
Counter: 471
Batcher Size:124
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 377:
Spawn 1 instances, now Total 471
Counter: 472
Batcher Size:125
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 378:
Spawn 1 instances, now Total 472
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 369:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 370:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 371:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 372:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 373:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 374:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 375:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 376:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 377:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 378:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 473
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 379:
Spawn 1 instances, now Total 473
Counter: 474
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 380:
Spawn 1 instances, now Total 474
Counter: 475
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 381:
Spawn 1 instances, now Total 475
Counter: 476
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 382:
Spawn 1 instances, now Total 476
Counter: 477
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 383:
Spawn 1 instances, now Total 477
Counter: 478
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 384:
Spawn 1 instances, now Total 478
Counter: 479
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 385:
Spawn 1 instances, now Total 479
Counter: 480
Batcher Size:123
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 386:
Spawn 1 instances, now Total 480
Counter: 481
Batcher Size:124
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 387:
Spawn 1 instances, now Total 481
Counter: 482
Batcher Size:125
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 388:
Spawn 1 instances, now Total 482
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 379:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 380:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 381:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 382:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 383:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 384:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 385:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 386:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 387:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 388:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 483
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 389:
Spawn 1 instances, now Total 483
Counter: 484
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
cut_bytes(stream);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 390:
Spawn 1 instances, now Total 484
Counter: 485
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 391:
Spawn 1 instances, now Total 485
Counter: 486
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
exit(0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 392:
Spawn 1 instances, now Total 486
Counter: 487
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 393:
Spawn 1 instances, now Total 487
Counter: 488
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 394:
Spawn 1 instances, now Total 488
Counter: 489
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
exit(1);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 395:
Spawn 1 instances, now Total 489
Counter: 490
Batcher Size:123
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
emit_try_help();
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 396:
Spawn 1 instances, now Total 490
Counter: 491
Batcher Size:124
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 397:
Spawn 1 instances, now Total 491
Counter: 492
Batcher Size:125
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 398:
Spawn 1 instances, now Total 492
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 389:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 390:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 391:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 392:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 393:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 394:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 395:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 396:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 397:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 398:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 493
Batcher Size:116
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 399:
Spawn 1 instances, now Total 493
Counter: 494
Batcher Size:117
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
delim = '\t';
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 400:
Spawn 1 instances, now Total 494
Counter: 495
Batcher Size:118
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
delim = (0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 401:
Spawn 1 instances, now Total 495
Counter: 496
Batcher Size:119
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 402:
Spawn 1 instances, now Total 496
Counter: 497
Batcher Size:120
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 403:
Spawn 1 instances, now Total 497
Counter: 498
Batcher Size:121
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
cut_fields(stream);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 404:
Spawn 1 instances, now Total 498
Counter: 499
Batcher Size:122
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 405:
Spawn 1 instances, now Total 499
Going to sync the batch tester, clear all existing tasks!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 0:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 1:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 236:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 237:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 238:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 239:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 240:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 241:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 242:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 243:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 50:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 51:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 53:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 54:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 106:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 107:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 108:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 109:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 110:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 111:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 112:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 113:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 172:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 173:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 174:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 86 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 87 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 92 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 33:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 34:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 2:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 11:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 12:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 84 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 85 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 31 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 32 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 35:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 51:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 52:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 41 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 42 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 36:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 37:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 25:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 28:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 90:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 82 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 83 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 3:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 4:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 80:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 81:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 88 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 89 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 53:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 61:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 91:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 46:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 50:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 47:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 48:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 49:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 43:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 44:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 45:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 38:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 39:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 40:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 335:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 336:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 337:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 338:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 339:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 20:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 21:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 18:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 19:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 26:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 27:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 16:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 17:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 15:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 22:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 23:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 399:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 400:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 401:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 402:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 403:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 404:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 405:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 7:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 10:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 8:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 9:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 5:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 6:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 68:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 79:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 69 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 74 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 75 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 76 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 77 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 78 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 72:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 73:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 70:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 71:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 66:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 67:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 62:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 65:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 63:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 64:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 54:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 60:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 55:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 59:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 56:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 57:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 58:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 500
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 406:
Spawn 1 instances, now Total 500
Counter: 501
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 407:
Spawn 1 instances, now Total 501
Counter: 502
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 408:
Spawn 1 instances, now Total 502
Counter: 503
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 409:
Spawn 1 instances, now Total 503
Counter: 504
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 410:
Spawn 1 instances, now Total 504
Counter: 505
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 7458
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
if (operating_mode == byte_mode)
    cut_bytes(stream);
else
    cut_fields(stream);


BasicTester, a patch instance with id 411:
Spawn 1 instances, now Total 505
Counter: 506
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 412:
Spawn 1 instances, now Total 506
Counter: 507
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 413:
Spawn 1 instances, now Total 507
Counter: 508
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
stream = (stream);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 414:
Spawn 1 instances, now Total 508
Counter: 509
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
stream = fopen(file, "r");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 415:
Spawn 1 instances, now Total 509
Counter: 510
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 416:
Spawn 1 instances, now Total 510
Counter: 511
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 417:
Spawn 1 instances, now Total 511
Counter: 512
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 418:
Spawn 1 instances, now Total 512
Counter: 513
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
stream = fopen((file), "r");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 419:
Spawn 1 instances, now Total 513
Counter: 514
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_NOREUSE));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 420:
Spawn 1 instances, now Total 514
Counter: 515
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 421:
Spawn 1 instances, now Total 515
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 412:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 413:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 414:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 415:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 416:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 417:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 418:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 419:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 420:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 421:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 516
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 422:
Spawn 1 instances, now Total 516
Counter: 517
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component((file)));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 423:
Spawn 1 instances, now Total 517
Counter: 518
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nDisplay values are in units of the first available SIZE from --block-size,\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\n"), (file));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 424:
Spawn 1 instances, now Total 518
Counter: 519
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 425:
Spawn 1 instances, now Total 519
Counter: 520
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 426:
Spawn 1 instances, now Total 520
Counter: 521
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component((file)), "bug-coreutils@gnu.org");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 427:
Spawn 1 instances, now Total 521
Counter: 522
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 428:
Spawn 1 instances, now Total 522
Counter: 523
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), (file));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 429:
Spawn 1 instances, now Total 523
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 429:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 524
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 430:
Spawn 1 instances, now Total 524
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 430:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 525
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 431:
Spawn 1 instances, now Total 525
Counter: 526
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 432:
Spawn 1 instances, now Total 526
Counter: 527
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component((file)));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 433:
Spawn 1 instances, now Total 527
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 422:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 423:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 424:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 425:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 426:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 427:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 428:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 431:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 432:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 433:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 528
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 434:
Spawn 1 instances, now Total 528
Counter: 529
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 435:
Spawn 1 instances, now Total 529
Counter: 530
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 436:
Spawn 1 instances, now Total 530
Counter: 531
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 437:
Spawn 1 instances, now Total 531
Counter: 532
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 438:
Spawn 1 instances, now Total 532
Counter: 533
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 439:
Spawn 1 instances, now Total 533
Counter: 534
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 440:
Spawn 1 instances, now Total 534
Counter: 535
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 441:
Spawn 1 instances, now Total 535
Counter: 536
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 442:
Spawn 1 instances, now Total 536
Counter: 537
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 443:
Spawn 1 instances, now Total 537
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 434:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 435:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 436:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 437:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 438:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 439:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 440:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 441:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 442:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 443:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 538
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 444:
Spawn 1 instances, now Total 538
Counter: 539
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 445:
Spawn 1 instances, now Total 539
Counter: 540
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 446:
Spawn 1 instances, now Total 540
Counter: 541
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 447:
Spawn 1 instances, now Total 541
Counter: 542
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 448:
Spawn 1 instances, now Total 542
Counter: 543
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 449:
Spawn 1 instances, now Total 543
Counter: 544
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 450:
Spawn 1 instances, now Total 544
Counter: 545
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 451:
Spawn 1 instances, now Total 545
Counter: 546
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 452:
Spawn 1 instances, now Total 546
Counter: 547
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_NORMAL));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 453:
Spawn 1 instances, now Total 547
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 444:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 445:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 446:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 447:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 448:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 449:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 450:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 451 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 452:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 453:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 548
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 454:
Spawn 1 instances, now Total 548
Counter: 549
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 455:
Spawn 1 instances, now Total 549
Counter: 550
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 456:
Spawn 1 instances, now Total 550
Counter: 551
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 457:
Spawn 1 instances, now Total 551
Counter: 552
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 458:
Spawn 1 instances, now Total 552
Counter: 553
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 459:
Spawn 1 instances, now Total 553
Counter: 554
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 460:
Spawn 1 instances, now Total 554
Counter: 555
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 461:
Spawn 1 instances, now Total 555
Counter: 556
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 462:
Spawn 1 instances, now Total 556
Counter: 557
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 463:
Spawn 1 instances, now Total 557
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 454:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 455:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 456:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 457:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 458:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 459:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 460:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 461:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 462:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 463:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 558
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 464:
Spawn 1 instances, now Total 558
Counter: 559
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 465:
Spawn 1 instances, now Total 559
Counter: 560
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 466:
Spawn 1 instances, now Total 560
Counter: 561
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 467:
Spawn 1 instances, now Total 561
Counter: 562
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 468:
Spawn 1 instances, now Total 562
Counter: 563
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 469:
Spawn 1 instances, now Total 563
Counter: 564
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_RANDOM));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 470:
Spawn 1 instances, now Total 564
Counter: 565
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 471:
Spawn 1 instances, now Total 565
Counter: 566
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 472:
Spawn 1 instances, now Total 566
Counter: 567
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 473:
Spawn 1 instances, now Total 567
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 464:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 465:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 466:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 467:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 468:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 469:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 470:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 471:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 472:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 473:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 568
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 474:
Spawn 1 instances, now Total 568
Counter: 569
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 475:
Spawn 1 instances, now Total 569
Counter: 570
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 476:
Spawn 1 instances, now Total 570
Counter: 571
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 477:
Spawn 1 instances, now Total 571
Counter: 572
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 478:
Spawn 1 instances, now Total 572
Counter: 573
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_SEQUENTIAL));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 479:
Spawn 1 instances, now Total 573
Counter: 574
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_WILLNEED));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 480:
Spawn 1 instances, now Total 574
Counter: 575
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 481:
Spawn 1 instances, now Total 575
Counter: 576
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 482:
Spawn 1 instances, now Total 576
Counter: 577
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise(stream, FADVISE_SEQUENTIAL);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 483:
Spawn 1 instances, now Total 577
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 474:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 475:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 476:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 477:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 478:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 479:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 480:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 481:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 482:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 483:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 578
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 484:
Spawn 1 instances, now Total 578
Counter: 579
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 485:
Spawn 1 instances, now Total 579
Counter: 580
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 486:
Spawn 1 instances, now Total 580
Counter: 581
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 487:
Spawn 1 instances, now Total 581
Counter: 582
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 488:
Spawn 1 instances, now Total 582
Counter: 583
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_DONTNEED));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 489:
Spawn 1 instances, now Total 583
Counter: 584
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 490:
Spawn 1 instances, now Total 584
Counter: 585
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
exit(0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 491:
Spawn 1 instances, now Total 585
Counter: 586
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
exit(1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 492:
Spawn 1 instances, now Total 586
Counter: 587
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 493:
Spawn 1 instances, now Total 587
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 484:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 485:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 486:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 487:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 488:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 489:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 490:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 491:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 492:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 493:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 588
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 494:
Spawn 1 instances, now Total 588
Counter: 589
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 495:
Spawn 1 instances, now Total 589
Counter: 590
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "%s", (file));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 496:
Spawn 1 instances, now Total 590
Counter: 591
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "%s", file);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 497:
Spawn 1 instances, now Total 591
Counter: 592
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 498:
Spawn 1 instances, now Total 592
Counter: 593
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
emit_try_help();
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 499:
Spawn 1 instances, now Total 593
Counter: 594
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 500:
Spawn 1 instances, now Total 594
Counter: 595
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 501:
Spawn 1 instances, now Total 595
Counter: 596
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 502:
Spawn 1 instances, now Total 596
Counter: 597
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 503:
Spawn 1 instances, now Total 597
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 494:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 495:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 496:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 497:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 498:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 499:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 500:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 501:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 502:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 503:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 598
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
delim = (0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 504:
Spawn 1 instances, now Total 598
Counter: 599
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
delim = (1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 505:
Spawn 1 instances, now Total 599
Counter: 600
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
delim = (-1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 506:
Spawn 1 instances, now Total 600
Counter: 601
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 507:
Spawn 1 instances, now Total 601
Counter: 602
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
cut_stream(stream);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 508:
Spawn 1 instances, now Total 602
Counter: 603
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
delim = '\t';
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 509:
Spawn 1 instances, now Total 603
Counter: 604
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
(file)++;
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 510:
Spawn 1 instances, now Total 604
Counter: 605
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 511:
Spawn 1 instances, now Total 605
Counter: 606
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked(stream);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 512:
Spawn 1 instances, now Total 606
Counter: 607
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 513:
Spawn 1 instances, now Total 607
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 504:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 505:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 506:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 507:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 508:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 509:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 510:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 511:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 512:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 513:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 608
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 514:
Spawn 1 instances, now Total 608
Counter: 609
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 515:
Spawn 1 instances, now Total 609
Counter: 610
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 516:
Spawn 1 instances, now Total 610
Counter: 611
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 7453
At location src/cut.c:728
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
if ((strcmp(file, "-") == 0)) {
    have_read_stdin = 1;
    stream = stdin;
} else {
    stream = fopen(file, "r");
    if (stream == ((void *)0)) {
        error(0, (*__errno_location()), "%s", file);
        return 0;
    }
}


BasicTester, a patch instance with id 517:
Spawn 1 instances, now Total 611
Counter: 612
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 7452
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
return y % tablesize;


BasicTester, a patch instance with id 518:
Spawn 1 instances, now Total 612
Counter: 613
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 7448
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


BasicTester, a patch instance with id 519:
Spawn 1 instances, now Total 613
Counter: 614
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 520:
Spawn 1 instances, now Total 614
Counter: 615
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 521:
Spawn 1 instances, now Total 615
Counter: 616
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 522:
Spawn 1 instances, now Total 616
Counter: 617
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 523:
Spawn 1 instances, now Total 617
Counter: 618
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 524:
Spawn 1 instances, now Total 618
Counter: 619
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (253);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 525:
Spawn 1 instances, now Total 619
Counter: 620
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 526:
Spawn 1 instances, now Total 620
Counter: 621
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 527:
Spawn 1 instances, now Total 621
Counter: 622
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 528:
Spawn 1 instances, now Total 622
Counter: 623
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 529:
Spawn 1 instances, now Total 623
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 520 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 521:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 522:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 523:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 524:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 525:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 526:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 527:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 528:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 529:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 624
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 530:
Spawn 1 instances, now Total 624
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 530:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 625
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 531:
Spawn 1 instances, now Total 625
Counter: 626
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
(((size_t)ent_from_table == i) ? (void)(0) : __assert_fail("(size_t) ent_from_table == i", "src/cut.c", 253, __PRETTY_FUNCTION__));
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 532:
Spawn 1 instances, now Total 626
Counter: 627
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 533:
Spawn 1 instances, now Total 627
Counter: 628
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 534:
Spawn 1 instances, now Total 628
Counter: 629
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 535:
Spawn 1 instances, now Total 629
Counter: 630
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (i);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 536:
Spawn 1 instances, now Total 630
Counter: 631
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 537:
Spawn 1 instances, now Total 631
Counter: 632
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (253);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 538:
Spawn 1 instances, now Total 632
Counter: 633
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 539:
Spawn 1 instances, now Total 633
Counter: 634
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 540:
Spawn 1 instances, now Total 634
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 531:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 532:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 533:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 534:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 535:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 536:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 537:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 538:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 539:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 540:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 635
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 541:
Spawn 1 instances, now Total 635
Counter: 636
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 542:
Spawn 1 instances, now Total 636
Counter: 637
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 543:
Spawn 1 instances, now Total 637
Counter: 638
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 544:
Spawn 1 instances, now Total 638
Counter: 639
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (i);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 545:
Spawn 1 instances, now Total 639
Counter: 640
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 546:
Spawn 1 instances, now Total 640
Counter: 641
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
operating_mode = (253);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 547:
Spawn 1 instances, now Total 641
Counter: 642
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 548:
Spawn 1 instances, now Total 642
Counter: 643
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 549:
Spawn 1 instances, now Total 643
Counter: 644
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 550:
Spawn 1 instances, now Total 644
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 541:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 542:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 543:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 544:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 545:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 546:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 547:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 548 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 549:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 550:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 645
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 551:
Spawn 1 instances, now Total 645
Counter: 646
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 552:
Spawn 1 instances, now Total 646
Counter: 647
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 553:
Spawn 1 instances, now Total 647
Counter: 648
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 554:
Spawn 1 instances, now Total 648
Counter: 649
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 555:
Spawn 1 instances, now Total 649
Counter: 650
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 556:
Spawn 1 instances, now Total 650
Counter: 651
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 557:
Spawn 1 instances, now Total 651
Counter: 652
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
exit(0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 558:
Spawn 1 instances, now Total 652
Counter: 653
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
exit(1);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 559:
Spawn 1 instances, now Total 653
Counter: 654
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 560:
Spawn 1 instances, now Total 654
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 551:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 552:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 553:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 554 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 555:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 556:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 557:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 558:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 559:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 560:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 655
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 561:
Spawn 1 instances, now Total 655
Counter: 656
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 562:
Spawn 1 instances, now Total 656
Counter: 657
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 563:
Spawn 1 instances, now Total 657
Counter: 658
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
exit_failure = (253);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 564:
Spawn 1 instances, now Total 658
Counter: 659
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 565:
Spawn 1 instances, now Total 659
Counter: 660
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 566:
Spawn 1 instances, now Total 660
Counter: 661
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
eol_range_start = (i);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 567:
Spawn 1 instances, now Total 661
Counter: 662
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 568:
Spawn 1 instances, now Total 662
Counter: 663
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
eol_range_start = (253);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 569:
Spawn 1 instances, now Total 663
Counter: 664
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 570:
Spawn 1 instances, now Total 664
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 561:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 562:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 563:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 564:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 565:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 566:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 567:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 568:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 569:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 570:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 665
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
emit_try_help();
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 571:
Spawn 1 instances, now Total 665
Counter: 666
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
delim = (253);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 572:
Spawn 1 instances, now Total 666
Counter: 667
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 573:
Spawn 1 instances, now Total 667
Counter: 668
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
delim = (0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 574:
Spawn 1 instances, now Total 668
Counter: 669
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 575:
Spawn 1 instances, now Total 669
Counter: 670
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 576:
Spawn 1 instances, now Total 670
Counter: 671
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
delim = '\t';
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 577:
Spawn 1 instances, now Total 671
Counter: 672
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 578:
Spawn 1 instances, now Total 672
Counter: 673
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (253);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 579:
Spawn 1 instances, now Total 673
Counter: 674
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 580:
Spawn 1 instances, now Total 674
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 571:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 572:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 573:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 574:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 575:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 576:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 577:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 578:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 579:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 580:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 675
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 7443
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
if (ent_from_table == ((void *)0)) {
    xalloc_die();
}


BasicTester, a patch instance with id 581:
Spawn 1 instances, now Total 675
Counter: 676
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 582:
Spawn 1 instances, now Total 676
Counter: 677
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
xalloc_die();
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 583:
Spawn 1 instances, now Total 677
Counter: 678
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 584:
Spawn 1 instances, now Total 678
Counter: 679
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 585:
Spawn 1 instances, now Total 679
Counter: 680
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 586:
Spawn 1 instances, now Total 680
Counter: 681
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 587:
Spawn 1 instances, now Total 681
Counter: 682
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 588:
Spawn 1 instances, now Total 682
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 588:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 683
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 589:
Spawn 1 instances, now Total 683
Counter: 684
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 590:
Spawn 1 instances, now Total 684
Counter: 685
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 591:
Spawn 1 instances, now Total 685
Counter: 686
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 592:
Spawn 1 instances, now Total 686
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 582:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 583:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 584:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 585:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 586:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 587 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 589:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 590:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 591:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 592:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 687
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 593:
Spawn 1 instances, now Total 687
Counter: 688
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 594:
Spawn 1 instances, now Total 688
Counter: 689
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 595:
Spawn 1 instances, now Total 689
Counter: 690
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (n);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 596:
Spawn 1 instances, now Total 690
Counter: 691
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 597:
Spawn 1 instances, now Total 691
Counter: 692
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (i);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 598:
Spawn 1 instances, now Total 692
Counter: 693
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (8);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 599:
Spawn 1 instances, now Total 693
Counter: 694
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 600:
Spawn 1 instances, now Total 694
Counter: 695
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 601:
Spawn 1 instances, now Total 695
Counter: 696
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 602:
Spawn 1 instances, now Total 696
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 593:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 594:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 595:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 596:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 597:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 598:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 599:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 600:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 601:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 602:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 697
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 603:
Spawn 1 instances, now Total 697
Counter: 698
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 604:
Spawn 1 instances, now Total 698
Counter: 699
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 605:
Spawn 1 instances, now Total 699
Counter: 700
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = (8);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 606:
Spawn 1 instances, now Total 700
Counter: 701
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 607:
Spawn 1 instances, now Total 701
Counter: 702
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 608:
Spawn 1 instances, now Total 702
Counter: 703
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 609:
Spawn 1 instances, now Total 703
Counter: 704
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 610:
Spawn 1 instances, now Total 704
Counter: 705
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 611:
Spawn 1 instances, now Total 705
Counter: 706
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (i);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 612:
Spawn 1 instances, now Total 706
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 603:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 604:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 605:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 606:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 607:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 608:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 609:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 610:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 611 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 612:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 707
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (n);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 613:
Spawn 1 instances, now Total 707
Counter: 708
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 614:
Spawn 1 instances, now Total 708
Counter: 709
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (8);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 615:
Spawn 1 instances, now Total 709
Counter: 710
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 616:
Spawn 1 instances, now Total 710
Counter: 711
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 617:
Spawn 1 instances, now Total 711
Counter: 712
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 618:
Spawn 1 instances, now Total 712
Counter: 713
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 619:
Spawn 1 instances, now Total 713
Counter: 714
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 620:
Spawn 1 instances, now Total 714
Counter: 715
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 621:
Spawn 1 instances, now Total 715
Counter: 716
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 622:
Spawn 1 instances, now Total 716
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 613:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 614:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 615:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 616:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 617:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 618:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 619:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 620 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 621:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 622:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 717
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 623:
Spawn 1 instances, now Total 717
Counter: 718
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 624:
Spawn 1 instances, now Total 718
Counter: 719
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 625:
Spawn 1 instances, now Total 719
Counter: 720
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 626:
Spawn 1 instances, now Total 720
Counter: 721
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
exit_failure = (8);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 627:
Spawn 1 instances, now Total 721
Counter: 722
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 628:
Spawn 1 instances, now Total 722
Counter: 723
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 629:
Spawn 1 instances, now Total 723
Counter: 724
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
exit(0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 630:
Spawn 1 instances, now Total 724
Counter: 725
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
exit(1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 631:
Spawn 1 instances, now Total 725
Counter: 726
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 632:
Spawn 1 instances, now Total 726
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 623:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 624:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 625:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 626:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 627:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 628:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 629:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 630:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 631:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 632:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 727
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
eol_range_start = (n);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 633:
Spawn 1 instances, now Total 727
Counter: 728
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
eol_range_start = (8);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 634:
Spawn 1 instances, now Total 728
Counter: 729
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
eol_range_start = (i);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 635:
Spawn 1 instances, now Total 729
Counter: 730
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 636:
Spawn 1 instances, now Total 730
Counter: 731
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 637:
Spawn 1 instances, now Total 731
Counter: 732
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 638:
Spawn 1 instances, now Total 732
Counter: 733
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
emit_try_help();
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 639:
Spawn 1 instances, now Total 733
Counter: 734
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 640:
Spawn 1 instances, now Total 734
Counter: 735
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
delim = (8);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 641:
Spawn 1 instances, now Total 735
Counter: 736
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
delim = (0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 642:
Spawn 1 instances, now Total 736
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 633:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 634:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 635:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 636:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 637:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 638:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 639:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 640:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 641:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 642:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 737
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
delim = (1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 643:
Spawn 1 instances, now Total 737
Counter: 738
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 644:
Spawn 1 instances, now Total 738
Counter: 739
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
delim = '\t';
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 645:
Spawn 1 instances, now Total 739
Counter: 740
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 646:
Spawn 1 instances, now Total 740
Counter: 741
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 647:
Spawn 1 instances, now Total 741
Counter: 742
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 648:
Spawn 1 instances, now Total 742
Counter: 743
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (8);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 649:
Spawn 1 instances, now Total 743
Counter: 744
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 7439
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 650:
Spawn 1 instances, now Total 744
Counter: 745
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 7432
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
return (printable_field[n] >> (i % 8)) & 1;


BasicTester, a patch instance with id 651:
Spawn 1 instances, now Total 745
Counter: 746
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 7424
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
byte_idx = 0;


BasicTester, a patch instance with id 652:
Spawn 1 instances, now Total 746
Counter: 747
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (n_rp_allocated);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 653:
Spawn 1 instances, now Total 747
Counter: 748
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 654:
Spawn 1 instances, now Total 748
Counter: 749
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
xalloc_die();
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 655:
Spawn 1 instances, now Total 749
Counter: 750
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (value);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 656:
Spawn 1 instances, now Total 750
Counter: 751
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 657:
Spawn 1 instances, now Total 751
Counter: 752
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 658:
Spawn 1 instances, now Total 752
Counter: 753
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (initial);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 659:
Spawn 1 instances, now Total 753
Counter: 754
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (n_rp);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 660:
Spawn 1 instances, now Total 754
Counter: 755
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (i);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 661:
Spawn 1 instances, now Total 755
Counter: 756
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 662:
Spawn 1 instances, now Total 756
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 653 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 654 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 655 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 656 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 657 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 658 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 659 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 660 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 661 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 662 failed as well!
Counter: 757
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 663:
Spawn 1 instances, now Total 757
Counter: 758
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 664:
Spawn 1 instances, now Total 758
Counter: 759
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
rhs_specified = (dash_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 665:
Spawn 1 instances, now Total 759
Counter: 760
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 666:
Spawn 1 instances, now Total 760
Counter: 761
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
value = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 667:
Spawn 1 instances, now Total 761
Counter: 762
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (dash_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 668:
Spawn 1 instances, now Total 762
Counter: 763
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (rhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 669:
Spawn 1 instances, now Total 763
Counter: 764
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 670:
Spawn 1 instances, now Total 764
Counter: 765
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (field_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 671:
Spawn 1 instances, now Total 765
Counter: 766
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (in_digits);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 672:
Spawn 1 instances, now Total 766
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 663 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 664 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 665 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 666 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 667 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 668 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 669 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 670 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 671 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 672 failed as well!
Counter: 767
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (lhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 673:
Spawn 1 instances, now Total 767
Counter: 768
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
rhs_specified = (field_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 674:
Spawn 1 instances, now Total 768
Counter: 769
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
rhs_specified = (rhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 675:
Spawn 1 instances, now Total 769
Counter: 770
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
rhs_specified = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 676:
Spawn 1 instances, now Total 770
Counter: 771
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 677:
Spawn 1 instances, now Total 771
Counter: 772
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
rhs_specified = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 678:
Spawn 1 instances, now Total 772
Counter: 773
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
rhs_specified = (in_digits);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 679:
Spawn 1 instances, now Total 773
Counter: 774
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
rhs_specified = (lhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 680:
Spawn 1 instances, now Total 774
Counter: 775
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
qsort(rp, n_rp, sizeof (rp[0]), compare_ranges);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 681:
Spawn 1 instances, now Total 775
Counter: 776
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 682:
Spawn 1 instances, now Total 776
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 673 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 674 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 675 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 676 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 677 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 678 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 679 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 680 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 681 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 682 failed as well!
Counter: 777
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 683:
Spawn 1 instances, now Total 777
Counter: 778
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
qsort((rp), n_rp, sizeof (rp[0]), compare_ranges);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 684:
Spawn 1 instances, now Total 778
Counter: 779
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 685:
Spawn 1 instances, now Total 779
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 685 failed as well!
Counter: 780
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component((fieldstr)), "bug-coreutils@gnu.org");
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 686:
Spawn 1 instances, now Total 780
Counter: 781
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 687:
Spawn 1 instances, now Total 781
Counter: 782
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nDisplay values are in units of the first available SIZE from --block-size,\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\n"), (fieldstr));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 688:
Spawn 1 instances, now Total 782
Counter: 783
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 689:
Spawn 1 instances, now Total 783
Counter: 784
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 690:
Spawn 1 instances, now Total 784
Counter: 785
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 691:
Spawn 1 instances, now Total 785
Counter: 786
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), (fieldstr));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 692:
Spawn 1 instances, now Total 786
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 692 failed as well!
Counter: 787
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component((fieldstr)));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 693:
Spawn 1 instances, now Total 787
Counter: 788
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 694:
Spawn 1 instances, now Total 788
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 683 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 684 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 686 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 687 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 688 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 689 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 690 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 691 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 693 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 694 failed as well!
Counter: 789
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 695:
Spawn 1 instances, now Total 789
Counter: 790
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component((fieldstr)));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 696:
Spawn 1 instances, now Total 790
Counter: 791
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (value);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 697:
Spawn 1 instances, now Total 791
Counter: 792
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (n_rp);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 698:
Spawn 1 instances, now Total 792
Counter: 793
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 699:
Spawn 1 instances, now Total 793
Counter: 794
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (n_rp_allocated);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 700:
Spawn 1 instances, now Total 794
Counter: 795
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 701:
Spawn 1 instances, now Total 795
Counter: 796
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (i);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 702:
Spawn 1 instances, now Total 796
Counter: 797
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (initial);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 703:
Spawn 1 instances, now Total 797
Counter: 798
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 704:
Spawn 1 instances, now Total 798
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 695 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 696 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 697 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 698 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 699 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 700 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 701 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 702 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 703 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 704 failed as well!
Counter: 799
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 705:
Spawn 1 instances, now Total 799
Counter: 800
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 706:
Spawn 1 instances, now Total 800
Counter: 801
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 707:
Spawn 1 instances, now Total 801
Counter: 802
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 708:
Spawn 1 instances, now Total 802
Counter: 803
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 709:
Spawn 1 instances, now Total 803
Counter: 804
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 710:
Spawn 1 instances, now Total 804
Counter: 805
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 711:
Spawn 1 instances, now Total 805
Counter: 806
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 712:
Spawn 1 instances, now Total 806
Counter: 807
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 713:
Spawn 1 instances, now Total 807
Counter: 808
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 714:
Spawn 1 instances, now Total 808
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 705 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 706 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 707 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 708 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 709 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 710 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 711 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 712 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 713 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 714 failed as well!
Counter: 809
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 715:
Spawn 1 instances, now Total 809
Counter: 810
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 716:
Spawn 1 instances, now Total 810
Counter: 811
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 717:
Spawn 1 instances, now Total 811
Counter: 812
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 718:
Spawn 1 instances, now Total 812
Counter: 813
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 719:
Spawn 1 instances, now Total 813
Counter: 814
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 720:
Spawn 1 instances, now Total 814
Counter: 815
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (rp)[i].hi;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 721:
Spawn 1 instances, now Total 815
Counter: 816
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 722:
Spawn 1 instances, now Total 816
Counter: 817
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 723:
Spawn 1 instances, now Total 817
Counter: 818
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (value);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 724:
Spawn 1 instances, now Total 818
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 715 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 716 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 717 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 718 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 719 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 720 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 721 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 722 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 723 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 724 failed as well!
Counter: 819
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (n_rp);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 725:
Spawn 1 instances, now Total 819
Counter: 820
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (n_rp_allocated);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 726:
Spawn 1 instances, now Total 820
Counter: 821
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (i);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 727:
Spawn 1 instances, now Total 821
Counter: 822
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (initial);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 728:
Spawn 1 instances, now Total 822
Counter: 823
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
lhs_specified = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 729:
Spawn 1 instances, now Total 823
Counter: 824
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 730:
Spawn 1 instances, now Total 824
Counter: 825
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 731:
Spawn 1 instances, now Total 825
Counter: 826
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 732:
Spawn 1 instances, now Total 826
Counter: 827
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 733:
Spawn 1 instances, now Total 827
Counter: 828
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 734:
Spawn 1 instances, now Total 828
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 725 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 726 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 727 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 728 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 729 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 730 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 731 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 732 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 733 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 734 failed as well!
Counter: 829
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 735:
Spawn 1 instances, now Total 829
Counter: 830
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 736:
Spawn 1 instances, now Total 830
Counter: 831
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (n_rp_allocated);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 737:
Spawn 1 instances, now Total 831
Counter: 832
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
lhs_specified = (in_digits);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 738:
Spawn 1 instances, now Total 832
Counter: 833
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
lhs_specified = (rhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 739:
Spawn 1 instances, now Total 833
Counter: 834
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
lhs_specified = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 740:
Spawn 1 instances, now Total 834
Counter: 835
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
lhs_specified = (lhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 741:
Spawn 1 instances, now Total 835
Counter: 836
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (value);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 742:
Spawn 1 instances, now Total 836
Counter: 837
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
lhs_specified = (dash_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 743:
Spawn 1 instances, now Total 837
Counter: 838
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
lhs_specified = (field_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 744:
Spawn 1 instances, now Total 838
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 735 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 736 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 737 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 738 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 739 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 740 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 741 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 742 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 743 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 744 failed as well!
Counter: 839
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (i);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 745:
Spawn 1 instances, now Total 839
Counter: 840
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (lhs_specified ? value : 1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 746:
Spawn 1 instances, now Total 840
Counter: 841
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (n_rp);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 747:
Spawn 1 instances, now Total 841
Counter: 842
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (initial);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 748:
Spawn 1 instances, now Total 842
Counter: 843
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 749:
Spawn 1 instances, now Total 843
Counter: 844
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 750:
Spawn 1 instances, now Total 844
Counter: 845
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 751:
Spawn 1 instances, now Total 845
Counter: 846
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 752:
Spawn 1 instances, now Total 846
Counter: 847
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 753:
Spawn 1 instances, now Total 847
Counter: 848
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
initial = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 754:
Spawn 1 instances, now Total 848
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 745 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 746 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 747 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 748 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 749 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 750 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 751 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 752 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 753 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 754 failed as well!
Counter: 849
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
in_digits = (field_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 755:
Spawn 1 instances, now Total 849
Counter: 850
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
in_digits = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 756:
Spawn 1 instances, now Total 850
Counter: 851
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
in_digits = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 757:
Spawn 1 instances, now Total 851
Counter: 852
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
in_digits = (in_digits);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 758:
Spawn 1 instances, now Total 852
Counter: 853
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
in_digits = (lhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 759:
Spawn 1 instances, now Total 853
Counter: 854
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
in_digits = (rhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 760:
Spawn 1 instances, now Total 854
Counter: 855
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
if (dash_found)
    rhs_specified = 1;
else
    lhs_specified = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 761:
Spawn 1 instances, now Total 855
Counter: 856
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
in_digits = (dash_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 762:
Spawn 1 instances, now Total 856
Counter: 857
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
if (rp[i].hi > max_range_endpoint)
    max_range_endpoint = rp[i].hi;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 763:
Spawn 1 instances, now Total 857
Counter: 858
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 764:
Spawn 1 instances, now Total 858
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 755 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 756 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 757 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 758 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 759 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 760 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 761 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 762 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 763 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 764 failed as well!
Counter: 859
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 765:
Spawn 1 instances, now Total 859
Counter: 860
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
if (eol_range_start == 0 || initial < eol_range_start)
    eol_range_start = initial;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 766:
Spawn 1 instances, now Total 860
Counter: 861
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 767:
Spawn 1 instances, now Total 861
Counter: 862
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 768:
Spawn 1 instances, now Total 862
Counter: 863
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 769:
Spawn 1 instances, now Total 863
Counter: 864
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 770:
Spawn 1 instances, now Total 864
Counter: 865
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (lhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 771:
Spawn 1 instances, now Total 865
Counter: 866
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 772:
Spawn 1 instances, now Total 866
Counter: 867
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (rhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 773:
Spawn 1 instances, now Total 867
Counter: 868
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (dash_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 774:
Spawn 1 instances, now Total 868
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 765 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 766 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 767 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 768 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 769 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 770 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 771 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 772 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 773 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 774 failed as well!
Counter: 869
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (field_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 775:
Spawn 1 instances, now Total 869
Counter: 870
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (in_digits);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 776:
Spawn 1 instances, now Total 870
Counter: 871
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
fieldstr++;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 777:
Spawn 1 instances, now Total 871
Counter: 872
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 778:
Spawn 1 instances, now Total 872
Counter: 873
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
free(rp);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 779:
Spawn 1 instances, now Total 873
Counter: 874
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
free((rp));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 780:
Spawn 1 instances, now Total 874
Counter: 875
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
field_found = (in_digits);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 781:
Spawn 1 instances, now Total 875
Counter: 876
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
field_found = (rhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 782:
Spawn 1 instances, now Total 876
Counter: 877
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
field_found = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 783:
Spawn 1 instances, now Total 877
Counter: 878
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
field_found = (lhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 784:
Spawn 1 instances, now Total 878
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 775 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 776 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 777 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 778 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 779 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 780 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 781 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 782 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 783 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 784 failed as well!
Counter: 879
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 785:
Spawn 1 instances, now Total 879
Counter: 880
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit_failure = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 786:
Spawn 1 instances, now Total 880
Counter: 881
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
field_found = (dash_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 787:
Spawn 1 instances, now Total 881
Counter: 882
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
field_found = (field_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 788:
Spawn 1 instances, now Total 882
Counter: 883
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 789:
Spawn 1 instances, now Total 883
Counter: 884
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 790:
Spawn 1 instances, now Total 884
Counter: 885
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit_failure = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 791:
Spawn 1 instances, now Total 885
Counter: 886
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit_failure = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 792:
Spawn 1 instances, now Total 886
Counter: 887
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 793:
Spawn 1 instances, now Total 887
Counter: 888
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit(1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 794:
Spawn 1 instances, now Total 888
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 785 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 786 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 787 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 788 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 789 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 790 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 791 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 792 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 793 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 794 failed as well!
Counter: 889
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 795:
Spawn 1 instances, now Total 889
Counter: 890
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
exit(0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 796:
Spawn 1 instances, now Total 890
Counter: 891
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = initial;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 797:
Spawn 1 instances, now Total 891
Counter: 892
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "%s", (fieldstr));
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 798:
Spawn 1 instances, now Total 892
Counter: 893
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (n_rp_allocated);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 799:
Spawn 1 instances, now Total 893
Counter: 894
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (value);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 800:
Spawn 1 instances, now Total 894
Counter: 895
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 801:
Spawn 1 instances, now Total 895
Counter: 896
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 802:
Spawn 1 instances, now Total 896
Counter: 897
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (initial);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 803:
Spawn 1 instances, now Total 897
Counter: 898
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (n_rp);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 804:
Spawn 1 instances, now Total 898
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 795 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 796 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 797 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 798 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 799 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 800 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 801 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 802 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 803 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 804 failed as well!
Counter: 899
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (i);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 805:
Spawn 1 instances, now Total 899
Counter: 900
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 806:
Spawn 1 instances, now Total 900
Counter: 901
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 807:
Spawn 1 instances, now Total 901
Counter: 902
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 808:
Spawn 1 instances, now Total 902
Counter: 903
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 809:
Spawn 1 instances, now Total 903
Counter: 904
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
emit_try_help();
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 810:
Spawn 1 instances, now Total 904
Counter: 905
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 811:
Spawn 1 instances, now Total 905
Counter: 906
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 812:
Spawn 1 instances, now Total 906
Counter: 907
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 813:
Spawn 1 instances, now Total 907
Counter: 908
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 814:
Spawn 1 instances, now Total 908
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 805 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 806 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 807 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 808 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 809 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 810 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 811 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 812 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 813 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 814 failed as well!
Counter: 909
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 815:
Spawn 1 instances, now Total 909
Counter: 910
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 816:
Spawn 1 instances, now Total 910
Counter: 911
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
dash_found = (lhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 817:
Spawn 1 instances, now Total 911
Counter: 912
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = '\t';
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 818:
Spawn 1 instances, now Total 912
Counter: 913
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 819:
Spawn 1 instances, now Total 913
Counter: 914
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 820:
Spawn 1 instances, now Total 914
Counter: 915
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 821:
Spawn 1 instances, now Total 915
Counter: 916
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
dash_found = (rhs_specified);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 822:
Spawn 1 instances, now Total 916
Counter: 917
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
dash_found = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 823:
Spawn 1 instances, now Total 917
Counter: 918
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
dash_found = 1;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 824:
Spawn 1 instances, now Total 918
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 815 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 816 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 817 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 818 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 819 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 820 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 821 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 822 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 823 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 824 failed as well!
Counter: 919
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 825:
Spawn 1 instances, now Total 919
Counter: 920
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
dash_found = (field_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 826:
Spawn 1 instances, now Total 920
Counter: 921
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
dash_found = (in_digits);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 827:
Spawn 1 instances, now Total 921
Counter: 922
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
dash_found = (dash_found);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 828:
Spawn 1 instances, now Total 922
Counter: 923
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (9);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 829:
Spawn 1 instances, now Total 923
Counter: 924
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(fieldstr)++;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 830:
Spawn 1 instances, now Total 924
Counter: 925
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 831:
Spawn 1 instances, now Total 925
Counter: 926
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 832:
Spawn 1 instances, now Total 926
Counter: 927
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 833:
Spawn 1 instances, now Total 927
Counter: 928
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 834:
Spawn 1 instances, now Total 928
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 825 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 826 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 827 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 828 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 829 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 830 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 831 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 832 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 833 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 834 failed as well!
Counter: 929
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (10);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 835:
Spawn 1 instances, now Total 929
Counter: 930
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 7384
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (8);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 836:
Spawn 1 instances, now Total 930
Counter: 931
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 7378
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
printable_field[n] |= (1 << (i % 8));


BasicTester, a patch instance with id 837:
Spawn 1 instances, now Total 931
Counter: 932
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 7268
At location src/cut.c:361
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
while (1)
    {
        if (*fieldstr == '-') {
            in_digits = 0;
            if (dash_found)
                do {
                    error(0, 0, (gettext("invalid byte, character or field list")));
                    usage(1);
                } while (0);
            dash_found = 1;
            fieldstr++;
            if (lhs_specified && !value)
                do {
                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                    usage(1);
                } while (0);
            initial = (lhs_specified ? value : 1);
            value = 0;
        } else if (*fieldstr == ',' || ((*__ctype_b_loc())[(int)((to_uchar(*fieldstr)))] & (unsigned short)_ISblank) || *fieldstr == '\x00') {
            in_digits = 0;
            if (dash_found) {
                dash_found = 0;
                if (!lhs_specified && !rhs_specified)
                    do {
                        error(0, 0, (gettext("invalid range with no endpoint: -")));
                        usage(1);
                    } while (0);
                if (!rhs_specified) {
                    if (eol_range_start == 0 || initial < eol_range_start)
                        eol_range_start = initial;
                    field_found = 1;
                } else {
                    if (value < initial)
                        do {
                            error(0, 0, (gettext("invalid decreasing range")));
                            usage(1);
                        } while (0);
                    if (eol_range_start != 0) {
                        if (initial < eol_range_start) {
                            if (eol_range_start <= value) {
                                eol_range_start = initial;
                            } else {
                                do {
                                    if (initial == 0 || value == 0)
                                        do {
                                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                                            usage(1);
                                        } while (0);
                                    if (n_rp >= n_rp_allocated) {
                                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:426:31))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                                    }
                                    rp[n_rp].lo = (initial);
                                    rp[n_rp].hi = (value);
                                    ++n_rp;
                                } while (0);
                            }
                            field_found = 1;
                        }
                    } else {
                        do {
                            if (initial == 0 || value == 0)
                                do {
                                    error(0, 0, (gettext("fields and positions are numbered from 1")));
                                    usage(1);
                                } while (0);
                            if (n_rp >= n_rp_allocated) {
                                (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:436:23))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                            }
                            rp[n_rp].lo = (initial);
                            rp[n_rp].hi = (value);
                            ++n_rp;
                        } while (0);
                        field_found = 1;
                    }
                    value = 0;
                }
            } else {
                do {
                    if (value == 0 || value == 0)
                        do {
                            error(0, 0, (gettext("fields and positions are numbered from 1")));
                            usage(1);
                        } while (0);
                    if (n_rp >= n_rp_allocated) {
                        (rp) = ((void)(!!sizeof(struct (anonymous struct at src/cut.c:445:15))) , x2nrealloc(rp, &n_rp_allocated, sizeof *(rp)));
                    }
                    rp[n_rp].lo = (value);
                    rp[n_rp].hi = (value);
                    ++n_rp;
                } while (0);
                value = 0;
                field_found = 1;
            }
            if (*fieldstr == '\x00') {
                break;
            }
            fieldstr++;
            lhs_specified = 0;
            rhs_specified = 0;
        } else if (((unsigned int)(*fieldstr) - '0' <= 9)) {
            static const char *num_start;
            if (!in_digits || !num_start)
                num_start = fieldstr;
            in_digits = 1;
            if (dash_found)
                rhs_specified = 1;
            else
                lhs_specified = 1;
            if (!((void)(&(value) == (size_t *)((void *)0)) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (void)(!!sizeof(struct (anonymous struct at src/cut.c:474:16))) , (((size_t)-1 / 10 < (value) || (size_t)((value) * 10 + (*fieldstr - '0')) < (value)) ? 0 : (((value) = (value) * 10 + (*fieldstr - '0')) , 1)))) {
                size_t len = strspn(num_start, "0123456789");
                char *bad_num = xstrndup(num_start, len);
                if (operating_mode == byte_mode)
                    error(0, 0, gettext("byte offset %s is too large"), quote(bad_num));
                else
                    error(0, 0, gettext("field number %s is too large"), quote(bad_num));
                free(bad_num);
                exit(1);
            }
            fieldstr++;
        } else
            do {
                error(0, 0, (gettext("invalid byte, character or field list")));
                usage(1);
            } while (0);
    }


BasicTester, a patch instance with id 838:
Spawn 1 instances, now Total 932
Counter: 933
Batcher Size:27
Preprocess the following candidate with CondTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(ok, have_read_stdin, range_start_ht, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 1;
exit(ok ? 0 : 1);


CondTester, a patch instance with id 93:
Spawn 1 instances, now Total 933
Counter: 934
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
usage(ok ? 0 : 1);


BasicTester, a patch instance with id 839:
Spawn 1 instances, now Total 934
Counter: 935
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
select_plural(ok ? 0 : 1);


BasicTester, a patch instance with id 840:
Spawn 1 instances, now Total 935
Counter: 936
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isxdigit(ok ? 0 : 1);


BasicTester, a patch instance with id 841:
Spawn 1 instances, now Total 936
Counter: 937
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isascii(ok ? 0 : 1);


BasicTester, a patch instance with id 842:
Spawn 1 instances, now Total 937
Counter: 938
Batcher Size:32
Preprocess the following candidate with CondTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(ok, have_read_stdin, range_start_ht, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 2;
exit(ok ? 0 : 1);


CondTester, a patch instance with id 94:
Spawn 1 instances, now Total 938
Counter: 939
Batcher Size:33
Preprocess the following candidate with CondTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(ok, have_read_stdin, range_start_ht, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 6;
exit(ok ? 0 : 1);


CondTester, a patch instance with id 95:
Spawn 1 instances, now Total 939
Counter: 940
Batcher Size:34
Preprocess the following candidate with CondTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(ok, have_read_stdin, range_start_ht, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 31;
exit(ok ? 0 : 1);


CondTester, a patch instance with id 96:
Spawn 1 instances, now Total 940
Counter: 941
Batcher Size:35
Preprocess the following candidate with CondTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(ok, have_read_stdin, range_start_ht, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return -1;
exit(ok ? 0 : 1);


CondTester, a patch instance with id 97:
Spawn 1 instances, now Total 941
Counter: 942
Batcher Size:36
Preprocess the following candidate with CondTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(ok, have_read_stdin, range_start_ht, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    return 0;
exit(ok ? 0 : 1);


CondTester, a patch instance with id 98:
Spawn 1 instances, now Total 942
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 93:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 839:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 840:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 841:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 842:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 94:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 95:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 96:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 97:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 98:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 943
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
openat_restore_fail(ok ? 0 : 1);


BasicTester, a patch instance with id 843:
Spawn 1 instances, now Total 943
Counter: 944
Batcher Size:28
Preprocess the following candidate with CondTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(ok, have_read_stdin, range_start_ht, argv, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    exit(ok ? 0 : 1);


CondTester, a patch instance with id 99:
Spawn 1 instances, now Total 944
Counter: 945
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
openat_save_fail(ok ? 0 : 1);


BasicTester, a patch instance with id 844:
Spawn 1 instances, now Total 945
Counter: 946
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
usage(ok ? 0 : 1);


BasicTester, a patch instance with id 845:
Spawn 1 instances, now Total 946
Counter: 947
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
tolower(ok ? 0 : 1);


BasicTester, a patch instance with id 846:
Spawn 1 instances, now Total 947
Counter: 948
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
toascii(ok ? 0 : 1);


BasicTester, a patch instance with id 847:
Spawn 1 instances, now Total 948
Counter: 949
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
_tolower(ok ? 0 : 1);


BasicTester, a patch instance with id 848:
Spawn 1 instances, now Total 949
Counter: 950
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
_toupper(ok ? 0 : 1);


BasicTester, a patch instance with id 849:
Spawn 1 instances, now Total 950
Counter: 951
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
toupper(ok ? 0 : 1);


BasicTester, a patch instance with id 850:
Spawn 1 instances, now Total 951
Counter: 952
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isblank(ok ? 0 : 1);


BasicTester, a patch instance with id 851:
Spawn 1 instances, now Total 952
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 843:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 99:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 844:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 845:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 846:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 847:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 848:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 849:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 850:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 851:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 953
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isdigit(ok ? 0 : 1);


BasicTester, a patch instance with id 852:
Spawn 1 instances, now Total 953
Counter: 954
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
ispunct(ok ? 0 : 1);


BasicTester, a patch instance with id 853:
Spawn 1 instances, now Total 954
Counter: 955
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isupper(ok ? 0 : 1);


BasicTester, a patch instance with id 854:
Spawn 1 instances, now Total 955
Counter: 956
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isspace(ok ? 0 : 1);


BasicTester, a patch instance with id 855:
Spawn 1 instances, now Total 956
Counter: 957
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
islower(ok ? 0 : 1);


BasicTester, a patch instance with id 856:
Spawn 1 instances, now Total 957
Counter: 958
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isgraph(ok ? 0 : 1);


BasicTester, a patch instance with id 857:
Spawn 1 instances, now Total 958
Counter: 959
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
grantpt(ok ? 0 : 1);


BasicTester, a patch instance with id 858:
Spawn 1 instances, now Total 959
Counter: 960
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
fdopendir(ok ? 0 : 1);


BasicTester, a patch instance with id 859:
Spawn 1 instances, now Total 960
Counter: 961
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isalpha(ok ? 0 : 1);


BasicTester, a patch instance with id 860:
Spawn 1 instances, now Total 961
Counter: 962
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isalnum(ok ? 0 : 1);


BasicTester, a patch instance with id 861:
Spawn 1 instances, now Total 962
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 852:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 853:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 854:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 855:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 856:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 857:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 858:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 859:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 860:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 861:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 963
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
unlockpt(ok ? 0 : 1);


BasicTester, a patch instance with id 862:
Spawn 1 instances, now Total 963
Counter: 964
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
ptsname(ok ? 0 : 1);


BasicTester, a patch instance with id 863:
Spawn 1 instances, now Total 964
Counter: 965
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isatty(ok ? 0 : 1);


BasicTester, a patch instance with id 864:
Spawn 1 instances, now Total 965
Counter: 966
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
strsignal(ok ? 0 : 1);


BasicTester, a patch instance with id 865:
Spawn 1 instances, now Total 966
Counter: 967
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
_Exit(ok ? 0 : 1);


BasicTester, a patch instance with id 866:
Spawn 1 instances, now Total 967
Counter: 968
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
abs(ok ? 0 : 1);


BasicTester, a patch instance with id 867:
Spawn 1 instances, now Total 968
Counter: 969
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
abs(ok ? 0 : 1);


BasicTester, a patch instance with id 868:
Spawn 1 instances, now Total 969
Counter: 970
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
exit(ok ? 0 : 1);


BasicTester, a patch instance with id 869:
Spawn 1 instances, now Total 970
Counter: 971
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
quick_exit(ok ? 0 : 1);


BasicTester, a patch instance with id 870:
Spawn 1 instances, now Total 971
Counter: 972
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
tcgetpgrp(ok ? 0 : 1);


BasicTester, a patch instance with id 871:
Spawn 1 instances, now Total 972
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 862:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 863:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 864:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 865:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 866:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 867:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 868:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 869:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 870:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 871:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 973
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
fdatasync(ok ? 0 : 1);


BasicTester, a patch instance with id 872:
Spawn 1 instances, now Total 973
Counter: 974
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
strerror(ok ? 0 : 1);


BasicTester, a patch instance with id 873:
Spawn 1 instances, now Total 974
Counter: 975
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
strerror(ok ? 0 : 1);


BasicTester, a patch instance with id 874:
Spawn 1 instances, now Total 975
Counter: 976
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
fsync(ok ? 0 : 1);


BasicTester, a patch instance with id 875:
Spawn 1 instances, now Total 976
Counter: 977
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
syncfs(ok ? 0 : 1);


BasicTester, a patch instance with id 876:
Spawn 1 instances, now Total 977
Counter: 978
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
__getpgid(ok ? 0 : 1);


BasicTester, a patch instance with id 877:
Spawn 1 instances, now Total 978
Counter: 979
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
getsid(ok ? 0 : 1);


BasicTester, a patch instance with id 878:
Spawn 1 instances, now Total 979
Counter: 980
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
ttyname(ok ? 0 : 1);


BasicTester, a patch instance with id 879:
Spawn 1 instances, now Total 980
Counter: 981
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
getpgid(ok ? 0 : 1);


BasicTester, a patch instance with id 880:
Spawn 1 instances, now Total 981
Counter: 982
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
nice(ok ? 0 : 1);


BasicTester, a patch instance with id 881:
Spawn 1 instances, now Total 982
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 872:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 873:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 874:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 875:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 876:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 877:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 878:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 879:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 880:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 881:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 983
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
_exit(ok ? 0 : 1);


BasicTester, a patch instance with id 882:
Spawn 1 instances, now Total 983
Counter: 984
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
_exit(ok ? 0 : 1);


BasicTester, a patch instance with id 883:
Spawn 1 instances, now Total 984
Counter: 985
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
sigblock(ok ? 0 : 1);


BasicTester, a patch instance with id 884:
Spawn 1 instances, now Total 985
Counter: 986
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
sigignore(ok ? 0 : 1);


BasicTester, a patch instance with id 885:
Spawn 1 instances, now Total 986
Counter: 987
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
fchdir(ok ? 0 : 1);


BasicTester, a patch instance with id 886:
Spawn 1 instances, now Total 987
Counter: 988
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
close(ok ? 0 : 1);


BasicTester, a patch instance with id 887:
Spawn 1 instances, now Total 988
Counter: 989
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
sigsetmask(ok ? 0 : 1);


BasicTester, a patch instance with id 888:
Spawn 1 instances, now Total 989
Counter: 990
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
sighold(ok ? 0 : 1);


BasicTester, a patch instance with id 889:
Spawn 1 instances, now Total 990
Counter: 991
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
imaxabs(ok ? 0 : 1);


BasicTester, a patch instance with id 890:
Spawn 1 instances, now Total 991
Counter: 992
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
dysize(ok ? 0 : 1);


BasicTester, a patch instance with id 891:
Spawn 1 instances, now Total 992
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 882:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 883:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 884:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 885:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 886:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 887:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 888:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 889:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 890:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 891:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 993
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
gsignal(ok ? 0 : 1);


BasicTester, a patch instance with id 892:
Spawn 1 instances, now Total 993
Counter: 994
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
raise(ok ? 0 : 1);


BasicTester, a patch instance with id 893:
Spawn 1 instances, now Total 994
Counter: 995
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
__is_neg(ok ? 0 : 1);


BasicTester, a patch instance with id 894:
Spawn 1 instances, now Total 995
Counter: 996
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
putchar(ok ? 0 : 1);


BasicTester, a patch instance with id 895:
Spawn 1 instances, now Total 996
Counter: 997
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
posix_openpt(ok ? 0 : 1);


BasicTester, a patch instance with id 896:
Spawn 1 instances, now Total 997
Counter: 998
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
_Exit(ok ? 0 : 1);


BasicTester, a patch instance with id 897:
Spawn 1 instances, now Total 998
Counter: 999
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
ffs(ok ? 0 : 1);


BasicTester, a patch instance with id 898:
Spawn 1 instances, now Total 999
Going to sync the batch tester, clear all existing tasks!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 581:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 643:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 644:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 645:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 646:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 647:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 648:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 649:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 650:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 837:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 651:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 518:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 519:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 835 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 836 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 838 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 652:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 406:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 407:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 408:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 409:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 410:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 411:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 514:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 515:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 516:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 517:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 892:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 893:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 894:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 895:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 896:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 897:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 898:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1000
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
sysconf(ok ? 0 : 1);


BasicTester, a patch instance with id 899:
Spawn 1 instances, now Total 1000
Counter: 1001
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
dup(ok ? 0 : 1);


BasicTester, a patch instance with id 900:
Spawn 1 instances, now Total 1001
Counter: 1002
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
sigrelse(ok ? 0 : 1);


BasicTester, a patch instance with id 901:
Spawn 1 instances, now Total 1002
Counter: 1003
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
sigpause(ok ? 0 : 1);


BasicTester, a patch instance with id 902:
Spawn 1 instances, now Total 1003
Counter: 1004
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
putchar_unlocked(ok ? 0 : 1);


BasicTester, a patch instance with id 903:
Spawn 1 instances, now Total 1004
Counter: 1005
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
initialize_exit_failure(ok ? 0 : 1);


BasicTester, a patch instance with id 904:
Spawn 1 instances, now Total 1005
Counter: 1006
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
isprint(ok ? 0 : 1);


BasicTester, a patch instance with id 905:
Spawn 1 instances, now Total 1006
Counter: 1007
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 5000
At location src/cut.c:901
--Src File: src/cut.c
Fragment 0:
iscntrl(ok ? 0 : 1);


BasicTester, a patch instance with id 906:
Spawn 1 instances, now Total 1007
Counter: 1008
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    hash_clear(range_start_ht);
}


BasicTester, a patch instance with id 907:
Spawn 1 instances, now Total 1008
Counter: 1009
Batcher Size:9
Preprocess the following candidate with CondTester:
Priority 4998
At location src/cut.c:893
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(range_start_ht, have_read_stdin, argv, ok, argc, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        hash_free(range_start_ht);
}


CondTester, a patch instance with id 100:
Spawn 1 instances, now Total 1009
Counter: 1010
Batcher Size:10
Preprocess the following candidate with CondTester:
Priority 4997
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)) && (range_start_ht))
    hash_free(range_start_ht);


CondTester, a patch instance with id 101:
Spawn 1 instances, now Total 1010
Counter: 1011
Batcher Size:11
Preprocess the following candidate with CondTester:
Priority 4997
At location src/cut.c:892
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(range_start_ht, argv, ok, argc, have_read_stdin, output_delimiter_length, output_delimiter_string, delim, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    if (range_start_ht)
        hash_free(range_start_ht);


CondTester, a patch instance with id 102:
Spawn 1 instances, now Total 1011
Counter: 1012
Batcher Size:12
Preprocess the following candidate with CondTester:
Priority 4996
At location src/cut.c:759
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(file, stream, have_read_stdin)))
    return 1;


CondTester, a patch instance with id 103:
Spawn 1 instances, now Total 1012
Counter: 1013
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fileno_unlocked(stream);
}


BasicTester, a patch instance with id 908:
Spawn 1 instances, now Total 1013
Counter: 1014
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    pclose(stream);
}


BasicTester, a patch instance with id 909:
Spawn 1 instances, now Total 1014
Counter: 1015
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    cut_bytes(stream);
}


BasicTester, a patch instance with id 910:
Spawn 1 instances, now Total 1015
Counter: 1016
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    cut_fields(stream);
}


BasicTester, a patch instance with id 911:
Spawn 1 instances, now Total 1016
Counter: 1017
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    cut_stream(stream);
}


BasicTester, a patch instance with id 912:
Spawn 1 instances, now Total 1017
Counter: 1018
Batcher Size:18
Preprocess the following candidate with CondTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(stream, file, have_read_stdin)))
        clearerr_unlocked(stream);
}


CondTester, a patch instance with id 104:
Spawn 1 instances, now Total 1018
Counter: 1019
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    flockfile(stream);
}


BasicTester, a patch instance with id 913:
Spawn 1 instances, now Total 1019
Counter: 1020
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    funlockfile(stream);
}


BasicTester, a patch instance with id 914:
Spawn 1 instances, now Total 1020
Counter: 1021
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    rpl_fflush(stream);
}


BasicTester, a patch instance with id 915:
Spawn 1 instances, now Total 1021
Counter: 1022
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fpurge(stream);
}


BasicTester, a patch instance with id 916:
Spawn 1 instances, now Total 1022
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 908:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 909:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 910:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 911:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 912:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 104:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 913:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 914:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 915:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 916:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1023
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    rpl_fclose(stream);
}


BasicTester, a patch instance with id 917:
Spawn 1 instances, now Total 1023
Counter: 1024
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    ftrylockfile(stream);
}


BasicTester, a patch instance with id 918:
Spawn 1 instances, now Total 1024
Counter: 1025
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    __underflow(stream);
}


BasicTester, a patch instance with id 919:
Spawn 1 instances, now Total 1025
Counter: 1026
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    setlinebuf(stream);
}


BasicTester, a patch instance with id 920:
Spawn 1 instances, now Total 1026
Counter: 1027
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    ftello(stream);
}


BasicTester, a patch instance with id 921:
Spawn 1 instances, now Total 1027
Counter: 1028
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    ferror(stream);
}


BasicTester, a patch instance with id 922:
Spawn 1 instances, now Total 1028
Counter: 1029
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    ferror_unlocked(stream);
}


BasicTester, a patch instance with id 923:
Spawn 1 instances, now Total 1029
Counter: 1030
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fileno(stream);
}


BasicTester, a patch instance with id 924:
Spawn 1 instances, now Total 1030
Counter: 1031
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    feof_unlocked(stream);
}


BasicTester, a patch instance with id 925:
Spawn 1 instances, now Total 1031
Counter: 1032
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    ftello64(stream);
}


BasicTester, a patch instance with id 926:
Spawn 1 instances, now Total 1032
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 917:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 918:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 919:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 920:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 921:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 922:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 923:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 924:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 925:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 926:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1033
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    clearerr(stream);
}


BasicTester, a patch instance with id 927:
Spawn 1 instances, now Total 1033
Counter: 1034
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    feof(stream);
}


BasicTester, a patch instance with id 928:
Spawn 1 instances, now Total 1034
Counter: 1035
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fgetc(stream);
}


BasicTester, a patch instance with id 929:
Spawn 1 instances, now Total 1035
Counter: 1036
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fgetc_unlocked(stream);
}


BasicTester, a patch instance with id 930:
Spawn 1 instances, now Total 1036
Counter: 1037
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    ftell(stream);
}


BasicTester, a patch instance with id 931:
Spawn 1 instances, now Total 1037
Counter: 1038
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    rewind(stream);
}


BasicTester, a patch instance with id 932:
Spawn 1 instances, now Total 1038
Counter: 1039
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    getw(stream);
}


BasicTester, a patch instance with id 933:
Spawn 1 instances, now Total 1039
Counter: 1040
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    getc(stream);
}


BasicTester, a patch instance with id 934:
Spawn 1 instances, now Total 1040
Counter: 1041
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    getc_unlocked(stream);
}


BasicTester, a patch instance with id 935:
Spawn 1 instances, now Total 1041
Counter: 1042
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    __uflow(stream);
}


BasicTester, a patch instance with id 936:
Spawn 1 instances, now Total 1042
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 927:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 928:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 929:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 930:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 931:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 932:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 933:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 934:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 935:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 936:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1043
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_peekc_locked(stream);
}


BasicTester, a patch instance with id 937:
Spawn 1 instances, now Total 1043
Counter: 1044
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_free_backup_area(stream);
}


BasicTester, a patch instance with id 938:
Spawn 1 instances, now Total 1044
Counter: 1045
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fflush(stream);
}


BasicTester, a patch instance with id 939:
Spawn 1 instances, now Total 1045
Counter: 1046
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fflush_unlocked(stream);
}


BasicTester, a patch instance with id 940:
Spawn 1 instances, now Total 1046
Counter: 1047
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    fclose(stream);
}


BasicTester, a patch instance with id 941:
Spawn 1 instances, now Total 1047
Counter: 1048
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_flockfile(stream);
}


BasicTester, a patch instance with id 942:
Spawn 1 instances, now Total 1048
Counter: 1049
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_funlockfile(stream);
}


BasicTester, a patch instance with id 943:
Spawn 1 instances, now Total 1049
Counter: 1050
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_ftrylockfile(stream);
}


BasicTester, a patch instance with id 944:
Spawn 1 instances, now Total 1050
Counter: 1051
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_getc(stream);
}


BasicTester, a patch instance with id 945:
Spawn 1 instances, now Total 1051
Counter: 1052
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_feof(stream);
}


BasicTester, a patch instance with id 946:
Spawn 1 instances, now Total 1052
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 937:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 938:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 939:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 940:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 941:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 942:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 943:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 944:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 945:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 946:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1053
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4995
At location src/cut.c:753
--Src File: src/cut.c
Fragment 0:
{
    _IO_ferror(stream);
}


BasicTester, a patch instance with id 947:
Spawn 1 instances, now Total 1053
Counter: 1054
Batcher Size:14
Preprocess the following candidate with CondTester:
Priority 4992
At location src/cut.c:570
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, c, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, stream)))
    return;
break;


CondTester, a patch instance with id 105:
Spawn 1 instances, now Total 1054
Counter: 1055
Batcher Size:15
Preprocess the following candidate with CondTester:
Priority 4992
At location src/cut.c:570
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(byte_idx, c, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, stream)))
    break;
break;


CondTester, a patch instance with id 106:
Spawn 1 instances, now Total 1055
Counter: 1056
Batcher Size:16
Preprocess the following candidate with CondTester:
Priority 4992
At location src/cut.c:570
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, c, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, stream)))
    break;


CondTester, a patch instance with id 107:
Spawn 1 instances, now Total 1056
Counter: 1057
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
print_delimiter = (print_delimiter);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 948:
Spawn 1 instances, now Total 1057
Counter: 1058
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 949:
Spawn 1 instances, now Total 1058
Counter: 1059
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
print_delimiter = 0;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 950:
Spawn 1 instances, now Total 1059
Counter: 1060
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 951:
Spawn 1 instances, now Total 1060
Counter: 1061
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 952:
Spawn 1 instances, now Total 1061
Counter: 1062
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 953:
Spawn 1 instances, now Total 1062
Counter: 1063
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 954:
Spawn 1 instances, now Total 1063
Counter: 1064
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (print_delimiter);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 955:
Spawn 1 instances, now Total 1064
Counter: 1065
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 956:
Spawn 1 instances, now Total 1065
Counter: 1066
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
putchar_unlocked(c);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 957:
Spawn 1 instances, now Total 1066
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 948:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 949:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 950:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 951:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 952:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 953:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 954:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 955:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 956:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 957:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1067
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 958:
Spawn 1 instances, now Total 1067
Counter: 1068
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
print_delimiter = 1;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 959:
Spawn 1 instances, now Total 1068
Counter: 1069
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 960:
Spawn 1 instances, now Total 1069
Counter: 1070
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 961:
Spawn 1 instances, now Total 1070
Counter: 1071
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 962:
Spawn 1 instances, now Total 1071
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 962:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1072
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 963:
Spawn 1 instances, now Total 1072
Counter: 1073
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 964:
Spawn 1 instances, now Total 1073
Counter: 1074
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 965:
Spawn 1 instances, now Total 1074
Counter: 1075
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 966:
Spawn 1 instances, now Total 1075
Counter: 1076
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 967:
Spawn 1 instances, now Total 1076
Counter: 1077
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 968:
Spawn 1 instances, now Total 1077
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 958:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 959:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 960:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 961:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 963:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 964:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 965 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 966:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 967:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 968:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1078
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 969:
Spawn 1 instances, now Total 1078
Counter: 1079
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (byte_idx);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 970:
Spawn 1 instances, now Total 1079
Counter: 1080
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 971:
Spawn 1 instances, now Total 1080
Counter: 1081
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 972:
Spawn 1 instances, now Total 1081
Counter: 1082
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 973:
Spawn 1 instances, now Total 1082
Counter: 1083
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 974:
Spawn 1 instances, now Total 1083
Counter: 1084
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 975:
Spawn 1 instances, now Total 1084
Counter: 1085
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 976:
Spawn 1 instances, now Total 1085
Counter: 1086
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 977:
Spawn 1 instances, now Total 1086
Counter: 1087
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 978:
Spawn 1 instances, now Total 1087
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 969:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 970:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 971:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 972:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 973:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 974:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 975:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 976:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 977:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 978:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1088
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 979:
Spawn 1 instances, now Total 1088
Counter: 1089
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 980:
Spawn 1 instances, now Total 1089
Counter: 1090
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 981:
Spawn 1 instances, now Total 1090
Counter: 1091
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 982:
Spawn 1 instances, now Total 1091
Counter: 1092
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 983:
Spawn 1 instances, now Total 1092
Counter: 1093
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (byte_idx);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 984:
Spawn 1 instances, now Total 1093
Counter: 1094
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 985:
Spawn 1 instances, now Total 1094
Counter: 1095
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 986:
Spawn 1 instances, now Total 1095
Counter: 1096
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 987:
Spawn 1 instances, now Total 1096
Counter: 1097
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 988:
Spawn 1 instances, now Total 1097
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 979:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 980:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 981:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 982:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 983:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 984:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 985:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 986:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 987:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 988:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1098
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 989:
Spawn 1 instances, now Total 1098
Counter: 1099
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 990:
Spawn 1 instances, now Total 1099
Counter: 1100
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 991:
Spawn 1 instances, now Total 1100
Counter: 1101
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 992:
Spawn 1 instances, now Total 1101
Counter: 1102
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 993:
Spawn 1 instances, now Total 1102
Counter: 1103
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if (byte_idx > 0)
    putchar_unlocked('\n');
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 994:
Spawn 1 instances, now Total 1103
Counter: 1104
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (print_delimiter);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 995:
Spawn 1 instances, now Total 1104
Counter: 1105
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 996:
Spawn 1 instances, now Total 1105
Counter: 1106
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
delim = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 997:
Spawn 1 instances, now Total 1106
Counter: 1107
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 998:
Spawn 1 instances, now Total 1107
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 989:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 990:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 991:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 992:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 993:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 994:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 995:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 996:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 997:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 998:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1108
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 999:
Spawn 1 instances, now Total 1108
Counter: 1109
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1000:
Spawn 1 instances, now Total 1109
Counter: 1110
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1001:
Spawn 1 instances, now Total 1110
Counter: 1111
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1002:
Spawn 1 instances, now Total 1111
Counter: 1112
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1003:
Spawn 1 instances, now Total 1112
Counter: 1113
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1004:
Spawn 1 instances, now Total 1113
Counter: 1114
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1005:
Spawn 1 instances, now Total 1114
Counter: 1115
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1006:
Spawn 1 instances, now Total 1115
Counter: 1116
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1007:
Spawn 1 instances, now Total 1116
Counter: 1117
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1008:
Spawn 1 instances, now Total 1117
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 999:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1000:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1001:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1002:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1003:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1004:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1005:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1006:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1007:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1008:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1118
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1009:
Spawn 1 instances, now Total 1118
Counter: 1119
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1010:
Spawn 1 instances, now Total 1119
Counter: 1120
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1011:
Spawn 1 instances, now Total 1120
Counter: 1121
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1012:
Spawn 1 instances, now Total 1121
Counter: 1122
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1013:
Spawn 1 instances, now Total 1122
Counter: 1123
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
delim = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1014:
Spawn 1 instances, now Total 1123
Counter: 1124
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
eol_range_start = (byte_idx);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1015:
Spawn 1 instances, now Total 1124
Counter: 1125
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1016:
Spawn 1 instances, now Total 1125
Counter: 1126
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1017:
Spawn 1 instances, now Total 1126
Counter: 1127
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
exit_failure = (c);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1018:
Spawn 1 instances, now Total 1127
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1009:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1010:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1011:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1012:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1013:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1014:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1015:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1016:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1017:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1018:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1128
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1019:
Spawn 1 instances, now Total 1128
Counter: 1129
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1020:
Spawn 1 instances, now Total 1129
Counter: 1130
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
exit(0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1021:
Spawn 1 instances, now Total 1130
Counter: 1131
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
exit(1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1022:
Spawn 1 instances, now Total 1131
Counter: 1132
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1023:
Spawn 1 instances, now Total 1132
Counter: 1133
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
emit_try_help();
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1024:
Spawn 1 instances, now Total 1133
Counter: 1134
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1025:
Spawn 1 instances, now Total 1134
Counter: 1135
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1026:
Spawn 1 instances, now Total 1135
Counter: 1136
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1027:
Spawn 1 instances, now Total 1136
Counter: 1137
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1028:
Spawn 1 instances, now Total 1137
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1019:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1020:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1021:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1022:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1023:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1024:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1025:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1026:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1027:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1028:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1138
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
byte_idx = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1029:
Spawn 1 instances, now Total 1138
Counter: 1139
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked(stream);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1030:
Spawn 1 instances, now Total 1139
Counter: 1140
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1031:
Spawn 1 instances, now Total 1140
Counter: 1141
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1032:
Spawn 1 instances, now Total 1141
Counter: 1142
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
delim = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1033:
Spawn 1 instances, now Total 1142
Counter: 1143
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
delim = '\t';
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1034:
Spawn 1 instances, now Total 1143
Counter: 1144
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1035:
Spawn 1 instances, now Total 1144
Counter: 1145
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1036:
Spawn 1 instances, now Total 1145
Counter: 1146
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1037:
Spawn 1 instances, now Total 1146
Counter: 1147
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
byte_idx = (byte_idx);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1038:
Spawn 1 instances, now Total 1147
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1029:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1030:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1031 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1032:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1033:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1034:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1035:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1036:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1037 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1038:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1148
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
c = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1039:
Spawn 1 instances, now Total 1148
Counter: 1149
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
c = (c);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1040:
Spawn 1 instances, now Total 1149
Counter: 1150
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked((stream));
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1041:
Spawn 1 instances, now Total 1150
Counter: 1151
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
c = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1042:
Spawn 1 instances, now Total 1151
Counter: 1152
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
byte_idx = 0;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1043:
Spawn 1 instances, now Total 1152
Counter: 1153
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
c = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1044:
Spawn 1 instances, now Total 1153
Counter: 1154
Batcher Size:23
Preprocess the following candidate with CondTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, c, print_delimiter, output_delimiter_specified, stream, output_delimiter_length, output_delimiter_string)))
    if (byte_idx > 0)
        putchar_unlocked('\n');


CondTester, a patch instance with id 108:
Spawn 1 instances, now Total 1154
Counter: 1155
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1045:
Spawn 1 instances, now Total 1155
Counter: 1156
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1046:
Spawn 1 instances, now Total 1156
Counter: 1157
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
byte_idx = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1047:
Spawn 1 instances, now Total 1157
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1039:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1040:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1041:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1042:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1043:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1044:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 108:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1045:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1046:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1047:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1158
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
byte_idx = (0);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1048:
Spawn 1 instances, now Total 1158
Counter: 1159
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1049:
Spawn 1 instances, now Total 1159
Counter: 1160
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1050:
Spawn 1 instances, now Total 1160
Counter: 1161
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (c);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1051:
Spawn 1 instances, now Total 1161
Counter: 1162
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1052:
Spawn 1 instances, now Total 1162
Counter: 1163
Batcher Size:22
Preprocess the following candidate with CondTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, c, print_delimiter, output_delimiter_specified, stream, output_delimiter_length, output_delimiter_string)) && (byte_idx > 0))
    putchar_unlocked('\n');


CondTester, a patch instance with id 109:
Spawn 1 instances, now Total 1163
Counter: 1164
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4991
At location src/cut.c:568
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
if (byte_idx > 0)
    putchar_unlocked('\n');


BasicTester, a patch instance with id 1053:
Spawn 1 instances, now Total 1164
Counter: 1165
Batcher Size:24
Preprocess the following candidate with CondTester:
Priority 4990
At location src/cut.c:566
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(c, byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
        if (c == (-1)) {
            if (byte_idx > 0)
                putchar_unlocked('\n');
            break;
        } else {
            bool range_start;
            bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
            if (print_kth(++byte_idx, rs)) {
                if (rs && *rs && print_delimiter) {
                    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
                }
                print_delimiter = 1;
                putchar_unlocked(c);
            }
        }
}


CondTester, a patch instance with id 110:
Spawn 1 instances, now Total 1165
Counter: 1166
Batcher Size:25
Preprocess the following candidate with CondTester:
Priority 4990
At location src/cut.c:566
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(c, byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)) && (c == (-1))) {
        if (byte_idx > 0)
            putchar_unlocked('\n');
        break;
    } else {
        bool range_start;
        bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
        if (print_kth(++byte_idx, rs)) {
            if (rs && *rs && print_delimiter) {
                fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
            }
            print_delimiter = 1;
            putchar_unlocked(c);
        }
    }
}


CondTester, a patch instance with id 111:
Spawn 1 instances, now Total 1166
Counter: 1167
Batcher Size:26
Preprocess the following candidate with CondTester:
Priority 4989
At location src/cut.c:560
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(c, stream, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    if (c == '\n') {
        putchar_unlocked('\n');
        byte_idx = 0;
        print_delimiter = 0;
    } else if (c == (-1)) {
        if (byte_idx > 0)
            putchar_unlocked('\n');
        break;
    } else {
        bool range_start;
        bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
        if (print_kth(++byte_idx, rs)) {
            if (rs && *rs && print_delimiter) {
                fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
            }
            print_delimiter = 1;
            putchar_unlocked(c);
        }
    }


CondTester, a patch instance with id 112:
Spawn 1 instances, now Total 1167
Counter: 1168
Batcher Size:27
Preprocess the following candidate with CondTester:
Priority 4989
At location src/cut.c:560
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(c, stream, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string)) && (c == '\n')) {
    putchar_unlocked('\n');
    byte_idx = 0;
    print_delimiter = 0;
} else if (c == (-1)) {
    if (byte_idx > 0)
        putchar_unlocked('\n');
    break;
} else {
    bool range_start;
    bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
    if (print_kth(++byte_idx, rs)) {
        if (rs && *rs && print_delimiter) {
            fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
        }
        print_delimiter = 1;
        putchar_unlocked(c);
    }
}


CondTester, a patch instance with id 113:
Spawn 1 instances, now Total 1168
Counter: 1169
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1054:
Spawn 1 instances, now Total 1169
Counter: 1170
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1055:
Spawn 1 instances, now Total 1170
Counter: 1171
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1056:
Spawn 1 instances, now Total 1171
Counter: 1172
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1057:
Spawn 1 instances, now Total 1172
Counter: 1173
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
xalloc_die();
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1058:
Spawn 1 instances, now Total 1173
Counter: 1174
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1059:
Spawn 1 instances, now Total 1174
Counter: 1175
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (print_delimiter);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1060:
Spawn 1 instances, now Total 1175
Counter: 1176
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1061:
Spawn 1 instances, now Total 1176
Counter: 1177
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1062:
Spawn 1 instances, now Total 1177
Counter: 1178
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1063:
Spawn 1 instances, now Total 1178
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1063:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1179
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1064:
Spawn 1 instances, now Total 1179
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1054:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1055:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1056:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1057:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1058:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1059:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1060:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1061:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1062:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1064:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1180
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
putchar_unlocked(c);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1065:
Spawn 1 instances, now Total 1180
Counter: 1181
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1066:
Spawn 1 instances, now Total 1181
Counter: 1182
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1067:
Spawn 1 instances, now Total 1182
Counter: 1183
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1068:
Spawn 1 instances, now Total 1183
Counter: 1184
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1069:
Spawn 1 instances, now Total 1184
Counter: 1185
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1070:
Spawn 1 instances, now Total 1185
Counter: 1186
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1071:
Spawn 1 instances, now Total 1186
Counter: 1187
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
print_delimiter = 0;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1072:
Spawn 1 instances, now Total 1187
Counter: 1188
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
print_delimiter = 1;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1073:
Spawn 1 instances, now Total 1188
Counter: 1189
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
print_delimiter = (print_delimiter);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1074:
Spawn 1 instances, now Total 1189
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1065:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1066:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1067:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1068:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1069:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1070:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1071:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1072:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1073:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1074:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1190
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1075:
Spawn 1 instances, now Total 1190
Counter: 1191
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (byte_idx);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1076:
Spawn 1 instances, now Total 1191
Counter: 1192
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1077:
Spawn 1 instances, now Total 1192
Counter: 1193
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1078:
Spawn 1 instances, now Total 1193
Counter: 1194
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1079:
Spawn 1 instances, now Total 1194
Counter: 1195
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1080:
Spawn 1 instances, now Total 1195
Counter: 1196
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1081:
Spawn 1 instances, now Total 1196
Counter: 1197
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1082:
Spawn 1 instances, now Total 1197
Counter: 1198
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1083:
Spawn 1 instances, now Total 1198
Counter: 1199
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1084:
Spawn 1 instances, now Total 1199
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1075:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1076:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1077:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1078:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1079:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1080:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1081:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1082:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1083:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1084:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1200
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1085:
Spawn 1 instances, now Total 1200
Counter: 1201
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1086:
Spawn 1 instances, now Total 1201
Counter: 1202
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1087:
Spawn 1 instances, now Total 1202
Counter: 1203
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1088:
Spawn 1 instances, now Total 1203
Counter: 1204
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1089:
Spawn 1 instances, now Total 1204
Counter: 1205
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1090:
Spawn 1 instances, now Total 1205
Counter: 1206
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1091:
Spawn 1 instances, now Total 1206
Counter: 1207
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1092:
Spawn 1 instances, now Total 1207
Counter: 1208
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (byte_idx);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1093:
Spawn 1 instances, now Total 1208
Counter: 1209
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1094:
Spawn 1 instances, now Total 1209
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1085:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1086:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1087:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1088:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1089:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1090 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1091:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1092:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1093:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1094:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1210
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1095:
Spawn 1 instances, now Total 1210
Counter: 1211
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1096:
Spawn 1 instances, now Total 1211
Counter: 1212
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1097:
Spawn 1 instances, now Total 1212
Counter: 1213
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1098:
Spawn 1 instances, now Total 1213
Counter: 1214
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if (byte_idx > 0)
    putchar_unlocked('\n');
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1099:
Spawn 1 instances, now Total 1214
Counter: 1215
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1100:
Spawn 1 instances, now Total 1215
Counter: 1216
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1101:
Spawn 1 instances, now Total 1216
Counter: 1217
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1102:
Spawn 1 instances, now Total 1217
Counter: 1218
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1103:
Spawn 1 instances, now Total 1218
Counter: 1219
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1104:
Spawn 1 instances, now Total 1219
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1095:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1096:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1097:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1098:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1099:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1100:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1101:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1102:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1103:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1104:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1220
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (print_delimiter);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1105:
Spawn 1 instances, now Total 1220
Counter: 1221
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1106:
Spawn 1 instances, now Total 1221
Counter: 1222
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1107:
Spawn 1 instances, now Total 1222
Counter: 1223
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1108:
Spawn 1 instances, now Total 1223
Counter: 1224
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1109:
Spawn 1 instances, now Total 1224
Counter: 1225
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1110:
Spawn 1 instances, now Total 1225
Counter: 1226
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1111:
Spawn 1 instances, now Total 1226
Counter: 1227
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1112:
Spawn 1 instances, now Total 1227
Counter: 1228
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1113:
Spawn 1 instances, now Total 1228
Counter: 1229
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1114:
Spawn 1 instances, now Total 1229
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1105:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1106:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1107:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1108:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1109:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1110:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1111:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1112:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1113:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1114:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1230
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1115:
Spawn 1 instances, now Total 1230
Counter: 1231
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1116:
Spawn 1 instances, now Total 1231
Counter: 1232
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
exit(1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1117:
Spawn 1 instances, now Total 1232
Counter: 1233
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
exit_failure = (c);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1118:
Spawn 1 instances, now Total 1233
Counter: 1234
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1119:
Spawn 1 instances, now Total 1234
Counter: 1235
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1120:
Spawn 1 instances, now Total 1235
Counter: 1236
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1121:
Spawn 1 instances, now Total 1236
Counter: 1237
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1122:
Spawn 1 instances, now Total 1237
Counter: 1238
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1123:
Spawn 1 instances, now Total 1238
Counter: 1239
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1124:
Spawn 1 instances, now Total 1239
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1115:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1116:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1117:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1118:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1119:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1120:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1121:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1122:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1123:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1124:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1240
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
emit_try_help();
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1125:
Spawn 1 instances, now Total 1240
Counter: 1241
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1126:
Spawn 1 instances, now Total 1241
Counter: 1242
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1127:
Spawn 1 instances, now Total 1242
Counter: 1243
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
exit(0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1128:
Spawn 1 instances, now Total 1243
Counter: 1244
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
eol_range_start = (byte_idx);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1129:
Spawn 1 instances, now Total 1244
Counter: 1245
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1130:
Spawn 1 instances, now Total 1245
Counter: 1246
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1131:
Spawn 1 instances, now Total 1246
Counter: 1247
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1132:
Spawn 1 instances, now Total 1247
Counter: 1248
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1133:
Spawn 1 instances, now Total 1248
Counter: 1249
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
delim = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1134:
Spawn 1 instances, now Total 1249
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1125:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1126:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1127:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1128:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1129:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1130:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1131:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1132:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1133 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1134:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1250
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
delim = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1135:
Spawn 1 instances, now Total 1250
Counter: 1251
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1136:
Spawn 1 instances, now Total 1251
Counter: 1252
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
delim = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1137:
Spawn 1 instances, now Total 1252
Counter: 1253
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1138:
Spawn 1 instances, now Total 1253
Counter: 1254
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
delim = '\t';
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1139:
Spawn 1 instances, now Total 1254
Counter: 1255
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1140:
Spawn 1 instances, now Total 1255
Counter: 1256
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1141:
Spawn 1 instances, now Total 1256
Counter: 1257
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked((stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1142:
Spawn 1 instances, now Total 1257
Counter: 1258
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1143:
Spawn 1 instances, now Total 1258
Counter: 1259
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1144:
Spawn 1 instances, now Total 1259
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1135:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1136:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1137:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1138 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1139:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1140:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1141:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1142:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1143:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1144:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1260
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked(stream);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1145:
Spawn 1 instances, now Total 1260
Counter: 1261
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1146:
Spawn 1 instances, now Total 1261
Counter: 1262
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = (c);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1147:
Spawn 1 instances, now Total 1262
Counter: 1263
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = _IO_ftrylockfile(stream);


BasicTester, a patch instance with id 1148:
Spawn 1 instances, now Total 1263
Counter: 1264
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = rpl_fclose(stream);


BasicTester, a patch instance with id 1149:
Spawn 1 instances, now Total 1264
Counter: 1265
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1150:
Spawn 1 instances, now Total 1265
Counter: 1266
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
byte_idx = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1151:
Spawn 1 instances, now Total 1266
Counter: 1267
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
byte_idx = (byte_idx);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1152:
Spawn 1 instances, now Total 1267
Counter: 1268
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
byte_idx = 0;
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1153:
Spawn 1 instances, now Total 1268
Counter: 1269
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
byte_idx = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1154:
Spawn 1 instances, now Total 1269
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1145:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1146:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1147:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1148 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1149:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1150:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1151:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1152:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1153:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1154:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1270
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1155:
Spawn 1 instances, now Total 1270
Counter: 1271
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1156:
Spawn 1 instances, now Total 1271
Counter: 1272
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
byte_idx = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1157:
Spawn 1 instances, now Total 1272
Counter: 1273
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = rpl_fflush(stream);


BasicTester, a patch instance with id 1158:
Spawn 1 instances, now Total 1273
Counter: 1274
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1159:
Spawn 1 instances, now Total 1274
Counter: 1275
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1160:
Spawn 1 instances, now Total 1275
Counter: 1276
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (c);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1161:
Spawn 1 instances, now Total 1276
Counter: 1277
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
c = getc_unlocked(stream);


BasicTester, a patch instance with id 1162:
Spawn 1 instances, now Total 1277
Counter: 1278
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fpurge(stream);


BasicTester, a patch instance with id 1163:
Spawn 1 instances, now Total 1278
Counter: 1279
Batcher Size:37
Preprocess the following candidate with CondTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(stream, c, byte_idx, print_delimiter, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    c = getc_unlocked(stream);


CondTester, a patch instance with id 114:
Spawn 1 instances, now Total 1279
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1155:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1156:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1157:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1158:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1159:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1160:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1161:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1162:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1163:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 114:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1280
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fclose(stream);


BasicTester, a patch instance with id 1164:
Spawn 1 instances, now Total 1280
Counter: 1281
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = feof(stream);


BasicTester, a patch instance with id 1165:
Spawn 1 instances, now Total 1281
Counter: 1282
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fileno(stream);


BasicTester, a patch instance with id 1166:
Spawn 1 instances, now Total 1282
Counter: 1283
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = pclose(stream);


BasicTester, a patch instance with id 1167:
Spawn 1 instances, now Total 1283
Counter: 1284
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = ftrylockfile(stream);


BasicTester, a patch instance with id 1168:
Spawn 1 instances, now Total 1284
Counter: 1285
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fileno_unlocked(stream);


BasicTester, a patch instance with id 1169:
Spawn 1 instances, now Total 1285
Counter: 1286
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = ferror(stream);


BasicTester, a patch instance with id 1170:
Spawn 1 instances, now Total 1286
Counter: 1287
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = feof_unlocked(stream);


BasicTester, a patch instance with id 1171:
Spawn 1 instances, now Total 1287
Counter: 1288
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = ferror_unlocked(stream);


BasicTester, a patch instance with id 1172:
Spawn 1 instances, now Total 1288
Counter: 1289
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fflush(stream);


BasicTester, a patch instance with id 1173:
Spawn 1 instances, now Total 1289
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1164:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1165:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1166:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1167:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1168:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1169:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1170:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1171:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1172:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1173:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1290
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fgetc(stream);


BasicTester, a patch instance with id 1174:
Spawn 1 instances, now Total 1290
Counter: 1291
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fgetc_unlocked(stream);


BasicTester, a patch instance with id 1175:
Spawn 1 instances, now Total 1291
Counter: 1292
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = getw(stream);


BasicTester, a patch instance with id 1176:
Spawn 1 instances, now Total 1292
Counter: 1293
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = getc(stream);


BasicTester, a patch instance with id 1177:
Spawn 1 instances, now Total 1293
Counter: 1294
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = fflush_unlocked(stream);


BasicTester, a patch instance with id 1178:
Spawn 1 instances, now Total 1294
Counter: 1295
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = __underflow(stream);


BasicTester, a patch instance with id 1179:
Spawn 1 instances, now Total 1295
Counter: 1296
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = __uflow(stream);


BasicTester, a patch instance with id 1180:
Spawn 1 instances, now Total 1296
Counter: 1297
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = _IO_getc(stream);


BasicTester, a patch instance with id 1181:
Spawn 1 instances, now Total 1297
Counter: 1298
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = _IO_feof(stream);


BasicTester, a patch instance with id 1182:
Spawn 1 instances, now Total 1298
Counter: 1299
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = _IO_ferror(stream);


BasicTester, a patch instance with id 1183:
Spawn 1 instances, now Total 1299
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1174:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1175:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1176:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1177:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1178:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1179:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1180:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1181:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1182:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1183:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1300
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4988
At location src/cut.c:558
--Src File: src/cut.c
Fragment 0:
c = _IO_peekc_locked(stream);


BasicTester, a patch instance with id 1184:
Spawn 1 instances, now Total 1300
Counter: 1301
Batcher Size:29
Preprocess the following candidate with CondTester:
Priority 4986
At location src/cut.c:564
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, byte_idx, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    return;
print_delimiter = 0;


CondTester, a patch instance with id 115:
Spawn 1 instances, now Total 1301
Counter: 1302
Batcher Size:30
Preprocess the following candidate with CondTester:
Priority 4986
At location src/cut.c:564
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(print_delimiter, byte_idx, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    break;
print_delimiter = 0;


CondTester, a patch instance with id 116:
Spawn 1 instances, now Total 1302
Counter: 1303
Batcher Size:31
Preprocess the following candidate with CondTester:
Priority 4986
At location src/cut.c:564
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(print_delimiter, byte_idx, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    print_delimiter = 0;


CondTester, a patch instance with id 117:
Spawn 1 instances, now Total 1303
Counter: 1304
Batcher Size:32
Preprocess the following candidate with CondTester:
Priority 4985
At location src/cut.c:563
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, print_delimiter, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    byte_idx = 0;


CondTester, a patch instance with id 118:
Spawn 1 instances, now Total 1304
Counter: 1305
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1185:
Spawn 1 instances, now Total 1305
Counter: 1306
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
putchar_unlocked('\n');


BasicTester, a patch instance with id 1186:
Spawn 1 instances, now Total 1306
Counter: 1307
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
xalloc_die();
putchar_unlocked('\n');


BasicTester, a patch instance with id 1187:
Spawn 1 instances, now Total 1307
Counter: 1308
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
putchar_unlocked('\n');


BasicTester, a patch instance with id 1188:
Spawn 1 instances, now Total 1308
Counter: 1309
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
putchar_unlocked('\n');


BasicTester, a patch instance with id 1189:
Spawn 1 instances, now Total 1309
Counter: 1310
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1190:
Spawn 1 instances, now Total 1310
Counter: 1311
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
putchar_unlocked('\n');


BasicTester, a patch instance with id 1191:
Spawn 1 instances, now Total 1311
Counter: 1312
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (print_delimiter);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1192:
Spawn 1 instances, now Total 1312
Counter: 1313
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
putchar_unlocked(c);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1193:
Spawn 1 instances, now Total 1313
Counter: 1314
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1194:
Spawn 1 instances, now Total 1314
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1185:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1186:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1187:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1188:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1189:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1190:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1191:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1192:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1193:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1194:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1315
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1195:
Spawn 1 instances, now Total 1315
Counter: 1316
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
print_delimiter = (print_delimiter);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1196:
Spawn 1 instances, now Total 1316
Counter: 1317
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
putchar_unlocked('\n');


BasicTester, a patch instance with id 1197:
Spawn 1 instances, now Total 1317
Counter: 1318
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1198:
Spawn 1 instances, now Total 1318
Counter: 1319
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1199:
Spawn 1 instances, now Total 1319
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1199:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1320
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1200:
Spawn 1 instances, now Total 1320
Counter: 1321
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
print_delimiter = 0;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1201:
Spawn 1 instances, now Total 1321
Counter: 1322
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
print_delimiter = 1;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1202:
Spawn 1 instances, now Total 1322
Counter: 1323
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1203:
Spawn 1 instances, now Total 1323
Counter: 1324
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1204:
Spawn 1 instances, now Total 1324
Counter: 1325
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1205:
Spawn 1 instances, now Total 1325
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1195:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1196:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1197:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1198:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1200:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1201:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1202:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1203:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1204:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1205:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1326
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1206:
Spawn 1 instances, now Total 1326
Counter: 1327
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1207:
Spawn 1 instances, now Total 1327
Counter: 1328
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (byte_idx);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1208:
Spawn 1 instances, now Total 1328
Counter: 1329
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1209:
Spawn 1 instances, now Total 1329
Counter: 1330
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked(stream);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1210:
Spawn 1 instances, now Total 1330
Counter: 1331
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1211:
Spawn 1 instances, now Total 1331
Counter: 1332
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
putchar_unlocked('\n');


BasicTester, a patch instance with id 1212:
Spawn 1 instances, now Total 1332
Counter: 1333
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1213:
Spawn 1 instances, now Total 1333
Counter: 1334
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1214:
Spawn 1 instances, now Total 1334
Counter: 1335
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1215:
Spawn 1 instances, now Total 1335
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1206:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1207:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1208:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1209:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1210:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1211:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1212:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1213 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1214:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1215:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1336
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1216:
Spawn 1 instances, now Total 1336
Counter: 1337
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1217:
Spawn 1 instances, now Total 1337
Counter: 1338
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1218:
Spawn 1 instances, now Total 1338
Counter: 1339
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1219:
Spawn 1 instances, now Total 1339
Counter: 1340
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1220:
Spawn 1 instances, now Total 1340
Counter: 1341
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1221:
Spawn 1 instances, now Total 1341
Counter: 1342
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1222:
Spawn 1 instances, now Total 1342
Counter: 1343
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (byte_idx);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1223:
Spawn 1 instances, now Total 1343
Counter: 1344
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1224:
Spawn 1 instances, now Total 1344
Counter: 1345
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1225:
Spawn 1 instances, now Total 1345
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1216:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1217:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1218:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1219:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1220:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1221:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1222:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1223:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1224:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1225:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1346
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1226:
Spawn 1 instances, now Total 1346
Counter: 1347
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1227:
Spawn 1 instances, now Total 1347
Counter: 1348
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1228:
Spawn 1 instances, now Total 1348
Counter: 1349
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1229:
Spawn 1 instances, now Total 1349
Counter: 1350
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1230:
Spawn 1 instances, now Total 1350
Counter: 1351
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1231:
Spawn 1 instances, now Total 1351
Counter: 1352
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1232:
Spawn 1 instances, now Total 1352
Counter: 1353
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if (byte_idx > 0)
    putchar_unlocked('\n');
putchar_unlocked('\n');


BasicTester, a patch instance with id 1233:
Spawn 1 instances, now Total 1353
Counter: 1354
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1234:
Spawn 1 instances, now Total 1354
Counter: 1355
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (print_delimiter);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1235:
Spawn 1 instances, now Total 1355
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1226:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1227:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1228:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1229:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1230:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1231:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1232:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1233:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1234:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1235:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1356
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1236:
Spawn 1 instances, now Total 1356
Counter: 1357
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1237:
Spawn 1 instances, now Total 1357
Counter: 1358
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1238:
Spawn 1 instances, now Total 1358
Counter: 1359
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1239:
Spawn 1 instances, now Total 1359
Counter: 1360
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1240:
Spawn 1 instances, now Total 1360
Counter: 1361
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1241:
Spawn 1 instances, now Total 1361
Counter: 1362
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1242:
Spawn 1 instances, now Total 1362
Counter: 1363
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1243:
Spawn 1 instances, now Total 1363
Counter: 1364
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
eol_range_start = (byte_idx);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1244:
Spawn 1 instances, now Total 1364
Counter: 1365
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1245:
Spawn 1 instances, now Total 1365
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1236:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1237:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1238:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1239:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1240:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1241:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1242:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1243:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1244:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1245:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1366
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1246:
Spawn 1 instances, now Total 1366
Counter: 1367
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1247:
Spawn 1 instances, now Total 1367
Counter: 1368
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1248:
Spawn 1 instances, now Total 1368
Counter: 1369
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1249:
Spawn 1 instances, now Total 1369
Counter: 1370
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1250:
Spawn 1 instances, now Total 1370
Counter: 1371
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1251:
Spawn 1 instances, now Total 1371
Counter: 1372
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1252:
Spawn 1 instances, now Total 1372
Counter: 1373
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
putchar_unlocked('\n');


BasicTester, a patch instance with id 1253:
Spawn 1 instances, now Total 1373
Counter: 1374
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1254:
Spawn 1 instances, now Total 1374
Counter: 1375
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1255:
Spawn 1 instances, now Total 1375
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1246:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1247:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1248:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1249:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1250:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1251:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1252:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1253:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1254:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1255:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1376
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit_failure = (c);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1256:
Spawn 1 instances, now Total 1376
Counter: 1377
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1257:
Spawn 1 instances, now Total 1377
Counter: 1378
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit(0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1258:
Spawn 1 instances, now Total 1378
Counter: 1379
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit(1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1259:
Spawn 1 instances, now Total 1379
Counter: 1380
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1260:
Spawn 1 instances, now Total 1380
Counter: 1381
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
delim = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1261:
Spawn 1 instances, now Total 1381
Counter: 1382
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
emit_try_help();
putchar_unlocked('\n');


BasicTester, a patch instance with id 1262:
Spawn 1 instances, now Total 1382
Counter: 1383
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1263:
Spawn 1 instances, now Total 1383
Counter: 1384
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1264:
Spawn 1 instances, now Total 1384
Counter: 1385
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1265:
Spawn 1 instances, now Total 1385
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1256:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1257:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1258:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1259:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1260:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1261:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1262:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1263:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1264:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1265:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1386
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
delim = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1266:
Spawn 1 instances, now Total 1386
Counter: 1387
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
putchar_unlocked('\n');


BasicTester, a patch instance with id 1267:
Spawn 1 instances, now Total 1387
Counter: 1388
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
putchar_unlocked('\n');


BasicTester, a patch instance with id 1268:
Spawn 1 instances, now Total 1388
Counter: 1389
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1269:
Spawn 1 instances, now Total 1389
Counter: 1390
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1270:
Spawn 1 instances, now Total 1390
Counter: 1391
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
putchar_unlocked('\n');


BasicTester, a patch instance with id 1271:
Spawn 1 instances, now Total 1391
Counter: 1392
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
delim = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1272:
Spawn 1 instances, now Total 1392
Counter: 1393
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
delim = '\t';
putchar_unlocked('\n');


BasicTester, a patch instance with id 1273:
Spawn 1 instances, now Total 1393
Counter: 1394
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1274:
Spawn 1 instances, now Total 1394
Counter: 1395
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
byte_idx = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1275:
Spawn 1 instances, now Total 1395
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1266:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1267:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1268:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1269 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1270 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1271:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1272:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1273:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1274:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1275:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1396
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
c = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1276:
Spawn 1 instances, now Total 1396
Counter: 1397
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
c = (c);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1277:
Spawn 1 instances, now Total 1397
Counter: 1398
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked((stream));
putchar_unlocked('\n');


BasicTester, a patch instance with id 1278:
Spawn 1 instances, now Total 1398
Counter: 1399
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
c = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1279:
Spawn 1 instances, now Total 1399
Counter: 1400
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
byte_idx = (byte_idx);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1280:
Spawn 1 instances, now Total 1400
Counter: 1401
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
byte_idx = 0;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1281:
Spawn 1 instances, now Total 1401
Counter: 1402
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
c = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1282:
Spawn 1 instances, now Total 1402
Counter: 1403
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1283:
Spawn 1 instances, now Total 1403
Counter: 1404
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1284:
Spawn 1 instances, now Total 1404
Counter: 1405
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
byte_idx = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1285:
Spawn 1 instances, now Total 1405
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1276:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1277:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1278:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1279:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1280:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1281:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1282:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1283:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1284:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1285:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1406
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
byte_idx = (0);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1286:
Spawn 1 instances, now Total 1406
Counter: 1407
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
putchar_unlocked('\n');


BasicTester, a patch instance with id 1287:
Spawn 1 instances, now Total 1407
Counter: 1408
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (c);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1288:
Spawn 1 instances, now Total 1408
Counter: 1409
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
putchar_unlocked('\n');


BasicTester, a patch instance with id 1289:
Spawn 1 instances, now Total 1409
Counter: 1410
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isupper('\n');


BasicTester, a patch instance with id 1290:
Spawn 1 instances, now Total 1410
Counter: 1411
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
_tolower('\n');


BasicTester, a patch instance with id 1291:
Spawn 1 instances, now Total 1411
Counter: 1412
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
usage('\n');


BasicTester, a patch instance with id 1292:
Spawn 1 instances, now Total 1412
Counter: 1413
Batcher Size:40
Preprocess the following candidate with CondTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, print_delimiter, c, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    putchar_unlocked('\n');


CondTester, a patch instance with id 119:
Spawn 1 instances, now Total 1413
Counter: 1414
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
putchar_unlocked('\n');


BasicTester, a patch instance with id 1293:
Spawn 1 instances, now Total 1414
Counter: 1415
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
usage('\n');


BasicTester, a patch instance with id 1294:
Spawn 1 instances, now Total 1415
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1286:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1287:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1288:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1289:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1290:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1291:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1292:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 119:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1293:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1294:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1416
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
select_plural('\n');


BasicTester, a patch instance with id 1295:
Spawn 1 instances, now Total 1416
Counter: 1417
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
openat_restore_fail('\n');


BasicTester, a patch instance with id 1296:
Spawn 1 instances, now Total 1417
Counter: 1418
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
openat_save_fail('\n');


BasicTester, a patch instance with id 1297:
Spawn 1 instances, now Total 1418
Counter: 1419
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isxdigit('\n');


BasicTester, a patch instance with id 1298:
Spawn 1 instances, now Total 1419
Counter: 1420
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isblank('\n');


BasicTester, a patch instance with id 1299:
Spawn 1 instances, now Total 1420
Counter: 1421
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
toascii('\n');


BasicTester, a patch instance with id 1300:
Spawn 1 instances, now Total 1421
Counter: 1422
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
_toupper('\n');


BasicTester, a patch instance with id 1301:
Spawn 1 instances, now Total 1422
Counter: 1423
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isascii('\n');


BasicTester, a patch instance with id 1302:
Spawn 1 instances, now Total 1423
Counter: 1424
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
tolower('\n');


BasicTester, a patch instance with id 1303:
Spawn 1 instances, now Total 1424
Counter: 1425
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
toupper('\n');


BasicTester, a patch instance with id 1304:
Spawn 1 instances, now Total 1425
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1295:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1296:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1297:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1298:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1299:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1300:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1301:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1302:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1303:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1304:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1426
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
ttyname('\n');


BasicTester, a patch instance with id 1305:
Spawn 1 instances, now Total 1426
Counter: 1427
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
abs('\n');


BasicTester, a patch instance with id 1306:
Spawn 1 instances, now Total 1427
Counter: 1428
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isalpha('\n');


BasicTester, a patch instance with id 1307:
Spawn 1 instances, now Total 1428
Counter: 1429
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isgraph('\n');


BasicTester, a patch instance with id 1308:
Spawn 1 instances, now Total 1429
Counter: 1430
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
ispunct('\n');


BasicTester, a patch instance with id 1309:
Spawn 1 instances, now Total 1430
Counter: 1431
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isspace('\n');


BasicTester, a patch instance with id 1310:
Spawn 1 instances, now Total 1431
Counter: 1432
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isprint('\n');


BasicTester, a patch instance with id 1311:
Spawn 1 instances, now Total 1432
Counter: 1433
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
iscntrl('\n');


BasicTester, a patch instance with id 1312:
Spawn 1 instances, now Total 1433
Counter: 1434
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isdigit('\n');


BasicTester, a patch instance with id 1313:
Spawn 1 instances, now Total 1434
Counter: 1435
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
islower('\n');


BasicTester, a patch instance with id 1314:
Spawn 1 instances, now Total 1435
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1305:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1306:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1307:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1308:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1309:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1310:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1311:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1312:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1313:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1314:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1436
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
posix_openpt('\n');


BasicTester, a patch instance with id 1315:
Spawn 1 instances, now Total 1436
Counter: 1437
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
ptsname('\n');


BasicTester, a patch instance with id 1316:
Spawn 1 instances, now Total 1437
Counter: 1438
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fdopendir('\n');


BasicTester, a patch instance with id 1317:
Spawn 1 instances, now Total 1438
Counter: 1439
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isalnum('\n');


BasicTester, a patch instance with id 1318:
Spawn 1 instances, now Total 1439
Counter: 1440
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
initialize_exit_failure('\n');


BasicTester, a patch instance with id 1319:
Spawn 1 instances, now Total 1440
Counter: 1441
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
grantpt('\n');


BasicTester, a patch instance with id 1320:
Spawn 1 instances, now Total 1441
Counter: 1442
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
unlockpt('\n');


BasicTester, a patch instance with id 1321:
Spawn 1 instances, now Total 1442
Counter: 1443
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
isatty('\n');


BasicTester, a patch instance with id 1322:
Spawn 1 instances, now Total 1443
Counter: 1444
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
ffs('\n');


BasicTester, a patch instance with id 1323:
Spawn 1 instances, now Total 1444
Counter: 1445
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
quick_exit('\n');


BasicTester, a patch instance with id 1324:
Spawn 1 instances, now Total 1445
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1315:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1316:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1317:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1318:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1319:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1320:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1321:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1322:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1323:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1324:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1446
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
_Exit('\n');


BasicTester, a patch instance with id 1325:
Spawn 1 instances, now Total 1446
Counter: 1447
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
abs('\n');


BasicTester, a patch instance with id 1326:
Spawn 1 instances, now Total 1447
Counter: 1448
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
_Exit('\n');


BasicTester, a patch instance with id 1327:
Spawn 1 instances, now Total 1448
Counter: 1449
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
strsignal('\n');


BasicTester, a patch instance with id 1328:
Spawn 1 instances, now Total 1449
Counter: 1450
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit('\n');


BasicTester, a patch instance with id 1329:
Spawn 1 instances, now Total 1450
Counter: 1451
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
exit('\n');


BasicTester, a patch instance with id 1330:
Spawn 1 instances, now Total 1451
Counter: 1452
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
tcgetpgrp('\n');


BasicTester, a patch instance with id 1331:
Spawn 1 instances, now Total 1452
Counter: 1453
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
syncfs('\n');


BasicTester, a patch instance with id 1332:
Spawn 1 instances, now Total 1453
Counter: 1454
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
strerror('\n');


BasicTester, a patch instance with id 1333:
Spawn 1 instances, now Total 1454
Counter: 1455
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
strerror('\n');


BasicTester, a patch instance with id 1334:
Spawn 1 instances, now Total 1455
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1325:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1326:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1327:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1328:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1329:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1330:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1331:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1332:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1333:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1334:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1456
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fdatasync('\n');


BasicTester, a patch instance with id 1335:
Spawn 1 instances, now Total 1456
Counter: 1457
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fsync('\n');


BasicTester, a patch instance with id 1336:
Spawn 1 instances, now Total 1457
Counter: 1458
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
dup('\n');


BasicTester, a patch instance with id 1337:
Spawn 1 instances, now Total 1458
Counter: 1459
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
sysconf('\n');


BasicTester, a patch instance with id 1338:
Spawn 1 instances, now Total 1459
Counter: 1460
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
getpgid('\n');


BasicTester, a patch instance with id 1339:
Spawn 1 instances, now Total 1460
Counter: 1461
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
getsid('\n');


BasicTester, a patch instance with id 1340:
Spawn 1 instances, now Total 1461
Counter: 1462
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
__getpgid('\n');


BasicTester, a patch instance with id 1341:
Spawn 1 instances, now Total 1462
Counter: 1463
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
nice('\n');


BasicTester, a patch instance with id 1342:
Spawn 1 instances, now Total 1463
Counter: 1464
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
_exit('\n');


BasicTester, a patch instance with id 1343:
Spawn 1 instances, now Total 1464
Counter: 1465
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
_exit('\n');


BasicTester, a patch instance with id 1344:
Spawn 1 instances, now Total 1465
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1335:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1336:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1337:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1338:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1339:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1340:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1341:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1342:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1343:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1344:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1466
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
sigpause('\n');


BasicTester, a patch instance with id 1345:
Spawn 1 instances, now Total 1466
Counter: 1467
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
sigrelse('\n');


BasicTester, a patch instance with id 1346:
Spawn 1 instances, now Total 1467
Counter: 1468
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
close('\n');


BasicTester, a patch instance with id 1347:
Spawn 1 instances, now Total 1468
Counter: 1469
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
fchdir('\n');


BasicTester, a patch instance with id 1348:
Spawn 1 instances, now Total 1469
Counter: 1470
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
sigignore('\n');


BasicTester, a patch instance with id 1349:
Spawn 1 instances, now Total 1470
Counter: 1471
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
sigblock('\n');


BasicTester, a patch instance with id 1350:
Spawn 1 instances, now Total 1471
Counter: 1472
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
sigsetmask('\n');


BasicTester, a patch instance with id 1351:
Spawn 1 instances, now Total 1472
Counter: 1473
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
sighold('\n');


BasicTester, a patch instance with id 1352:
Spawn 1 instances, now Total 1473
Counter: 1474
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
imaxabs('\n');


BasicTester, a patch instance with id 1353:
Spawn 1 instances, now Total 1474
Counter: 1475
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
putchar('\n');


BasicTester, a patch instance with id 1354:
Spawn 1 instances, now Total 1475
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1345:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1346:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1347:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1348:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1349:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1350:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1351:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1352:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1353:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1354:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1476
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
raise('\n');


BasicTester, a patch instance with id 1355:
Spawn 1 instances, now Total 1476
Counter: 1477
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
gsignal('\n');


BasicTester, a patch instance with id 1356:
Spawn 1 instances, now Total 1477
Counter: 1478
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
dysize('\n');


BasicTester, a patch instance with id 1357:
Spawn 1 instances, now Total 1478
Counter: 1479
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4984
At location src/cut.c:562
--Src File: src/cut.c
Fragment 0:
__is_neg('\n');


BasicTester, a patch instance with id 1358:
Spawn 1 instances, now Total 1479
Counter: 1480
Batcher Size:37
Preprocess the following candidate with CondTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(c, print_delimiter, output_delimiter_length, output_delimiter_string, rs, byte_idx, range_start, output_delimiter_specified, stream)))
    return;
putchar_unlocked(c);


CondTester, a patch instance with id 120:
Spawn 1 instances, now Total 1480
Counter: 1481
Batcher Size:38
Preprocess the following candidate with CondTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(c, print_delimiter, output_delimiter_length, output_delimiter_string, rs, byte_idx, range_start, output_delimiter_specified, stream)))
    break;
putchar_unlocked(c);


CondTester, a patch instance with id 121:
Spawn 1 instances, now Total 1481
Counter: 1482
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
usage(c);


BasicTester, a patch instance with id 1359:
Spawn 1 instances, now Total 1482
Counter: 1483
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
usage(c);


BasicTester, a patch instance with id 1360:
Spawn 1 instances, now Total 1483
Counter: 1484
Batcher Size:41
Preprocess the following candidate with CondTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(c, print_delimiter, output_delimiter_length, output_delimiter_string, rs, byte_idx, range_start, output_delimiter_specified, stream)))
    putchar_unlocked(c);


CondTester, a patch instance with id 122:
Spawn 1 instances, now Total 1484
Counter: 1485
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
quick_exit(c);


BasicTester, a patch instance with id 1361:
Spawn 1 instances, now Total 1485
Counter: 1486
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isgraph(c);


BasicTester, a patch instance with id 1362:
Spawn 1 instances, now Total 1486
Counter: 1487
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isblank(c);


BasicTester, a patch instance with id 1363:
Spawn 1 instances, now Total 1487
Counter: 1488
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
_tolower(c);


BasicTester, a patch instance with id 1364:
Spawn 1 instances, now Total 1488
Counter: 1489
Batcher Size:46
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
openat_restore_fail(c);


BasicTester, a patch instance with id 1365:
Spawn 1 instances, now Total 1489
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 120:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 121:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1359:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1360:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 122:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1361:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1362:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1363:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1364:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1365:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1490
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
openat_save_fail(c);


BasicTester, a patch instance with id 1366:
Spawn 1 instances, now Total 1490
Counter: 1491
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
select_plural(c);


BasicTester, a patch instance with id 1367:
Spawn 1 instances, now Total 1491
Counter: 1492
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isascii(c);


BasicTester, a patch instance with id 1368:
Spawn 1 instances, now Total 1492
Counter: 1493
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
toascii(c);


BasicTester, a patch instance with id 1369:
Spawn 1 instances, now Total 1493
Counter: 1494
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
_toupper(c);


BasicTester, a patch instance with id 1370:
Spawn 1 instances, now Total 1494
Counter: 1495
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isprint(c);


BasicTester, a patch instance with id 1371:
Spawn 1 instances, now Total 1495
Counter: 1496
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isupper(c);


BasicTester, a patch instance with id 1372:
Spawn 1 instances, now Total 1496
Counter: 1497
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
tolower(c);


BasicTester, a patch instance with id 1373:
Spawn 1 instances, now Total 1497
Counter: 1498
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
toupper(c);


BasicTester, a patch instance with id 1374:
Spawn 1 instances, now Total 1498
Counter: 1499
Batcher Size:46
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isxdigit(c);


BasicTester, a patch instance with id 1375:
Spawn 1 instances, now Total 1499
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1366:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1367:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1368:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1369:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1370:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1371:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1372:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1373:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1374:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1375:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Going to sync the batch tester, clear all existing tasks!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1184:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 112:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 113:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1355:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1356:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1357:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1358:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 118:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 115:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 116:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 117:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 110:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 111:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1048:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1049:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1050:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1051:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1052:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 109:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1053:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 105:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 106:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 107:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 947:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 103:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 101:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 102:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 907:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 100:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 899:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 900:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 901:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 902:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 903:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 904:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 905:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 906:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1500
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
ispunct(c);


BasicTester, a patch instance with id 1376:
Spawn 1 instances, now Total 1500
Counter: 1501
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isspace(c);


BasicTester, a patch instance with id 1377:
Spawn 1 instances, now Total 1501
Counter: 1502
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
_Exit(c);


BasicTester, a patch instance with id 1378:
Spawn 1 instances, now Total 1502
Counter: 1503
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
ptsname(c);


BasicTester, a patch instance with id 1379:
Spawn 1 instances, now Total 1503
Counter: 1504
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isalpha(c);


BasicTester, a patch instance with id 1380:
Spawn 1 instances, now Total 1504
Counter: 1505
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isdigit(c);


BasicTester, a patch instance with id 1381:
Spawn 1 instances, now Total 1505
Counter: 1506
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
islower(c);


BasicTester, a patch instance with id 1382:
Spawn 1 instances, now Total 1506
Counter: 1507
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
iscntrl(c);


BasicTester, a patch instance with id 1383:
Spawn 1 instances, now Total 1507
Counter: 1508
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
initialize_exit_failure(c);


BasicTester, a patch instance with id 1384:
Spawn 1 instances, now Total 1508
Counter: 1509
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
fdopendir(c);


BasicTester, a patch instance with id 1385:
Spawn 1 instances, now Total 1509
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1376:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1377:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1378:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1379:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1380:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1381:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1382:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1383:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1384:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1385:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1510
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isalnum(c);


BasicTester, a patch instance with id 1386:
Spawn 1 instances, now Total 1510
Counter: 1511
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
_Exit(c);


BasicTester, a patch instance with id 1387:
Spawn 1 instances, now Total 1511
Counter: 1512
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
abs(c);


BasicTester, a patch instance with id 1388:
Spawn 1 instances, now Total 1512
Counter: 1513
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
grantpt(c);


BasicTester, a patch instance with id 1389:
Spawn 1 instances, now Total 1513
Counter: 1514
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
unlockpt(c);


BasicTester, a patch instance with id 1390:
Spawn 1 instances, now Total 1514
Counter: 1515
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
posix_openpt(c);


BasicTester, a patch instance with id 1391:
Spawn 1 instances, now Total 1515
Counter: 1516
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
abs(c);


BasicTester, a patch instance with id 1392:
Spawn 1 instances, now Total 1516
Counter: 1517
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
putchar(c);


BasicTester, a patch instance with id 1393:
Spawn 1 instances, now Total 1517
Counter: 1518
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
sysconf(c);


BasicTester, a patch instance with id 1394:
Spawn 1 instances, now Total 1518
Counter: 1519
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
syncfs(c);


BasicTester, a patch instance with id 1395:
Spawn 1 instances, now Total 1519
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1386:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1387:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1388:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1389:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1390:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1391:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1392:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1393:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1394:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1395:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1520
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
ffs(c);


BasicTester, a patch instance with id 1396:
Spawn 1 instances, now Total 1520
Counter: 1521
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
exit(c);


BasicTester, a patch instance with id 1397:
Spawn 1 instances, now Total 1521
Counter: 1522
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
exit(c);


BasicTester, a patch instance with id 1398:
Spawn 1 instances, now Total 1522
Counter: 1523
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
strsignal(c);


BasicTester, a patch instance with id 1399:
Spawn 1 instances, now Total 1523
Counter: 1524
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
fdatasync(c);


BasicTester, a patch instance with id 1400:
Spawn 1 instances, now Total 1524
Counter: 1525
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
strerror(c);


BasicTester, a patch instance with id 1401:
Spawn 1 instances, now Total 1525
Counter: 1526
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
strerror(c);


BasicTester, a patch instance with id 1402:
Spawn 1 instances, now Total 1526
Counter: 1527
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
__getpgid(c);


BasicTester, a patch instance with id 1403:
Spawn 1 instances, now Total 1527
Counter: 1528
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
ttyname(c);


BasicTester, a patch instance with id 1404:
Spawn 1 instances, now Total 1528
Counter: 1529
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
tcgetpgrp(c);


BasicTester, a patch instance with id 1405:
Spawn 1 instances, now Total 1529
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1396:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1397:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1398:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1399:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1400:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1401:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1402:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1403:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1404:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1405:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1530
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
fsync(c);


BasicTester, a patch instance with id 1406:
Spawn 1 instances, now Total 1530
Counter: 1531
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
isatty(c);


BasicTester, a patch instance with id 1407:
Spawn 1 instances, now Total 1531
Counter: 1532
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
getpgid(c);


BasicTester, a patch instance with id 1408:
Spawn 1 instances, now Total 1532
Counter: 1533
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
getsid(c);


BasicTester, a patch instance with id 1409:
Spawn 1 instances, now Total 1533
Counter: 1534
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
dysize(c);


BasicTester, a patch instance with id 1410:
Spawn 1 instances, now Total 1534
Counter: 1535
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
sigrelse(c);


BasicTester, a patch instance with id 1411:
Spawn 1 instances, now Total 1535
Counter: 1536
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
dup(c);


BasicTester, a patch instance with id 1412:
Spawn 1 instances, now Total 1536
Counter: 1537
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
_exit(c);


BasicTester, a patch instance with id 1413:
Spawn 1 instances, now Total 1537
Counter: 1538
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
_exit(c);


BasicTester, a patch instance with id 1414:
Spawn 1 instances, now Total 1538
Counter: 1539
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
nice(c);


BasicTester, a patch instance with id 1415:
Spawn 1 instances, now Total 1539
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1406:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1407:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1408:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1409:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1410:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1411:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1412:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1413:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1414:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1415:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1540
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
sigignore(c);


BasicTester, a patch instance with id 1416:
Spawn 1 instances, now Total 1540
Counter: 1541
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
close(c);


BasicTester, a patch instance with id 1417:
Spawn 1 instances, now Total 1541
Counter: 1542
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
fchdir(c);


BasicTester, a patch instance with id 1418:
Spawn 1 instances, now Total 1542
Counter: 1543
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
raise(c);


BasicTester, a patch instance with id 1419:
Spawn 1 instances, now Total 1543
Counter: 1544
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
sigpause(c);


BasicTester, a patch instance with id 1420:
Spawn 1 instances, now Total 1544
Counter: 1545
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
sigsetmask(c);


BasicTester, a patch instance with id 1421:
Spawn 1 instances, now Total 1545
Counter: 1546
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
sighold(c);


BasicTester, a patch instance with id 1422:
Spawn 1 instances, now Total 1546
Counter: 1547
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
sigblock(c);


BasicTester, a patch instance with id 1423:
Spawn 1 instances, now Total 1547
Counter: 1548
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
gsignal(c);


BasicTester, a patch instance with id 1424:
Spawn 1 instances, now Total 1548
Counter: 1549
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
imaxabs(c);


BasicTester, a patch instance with id 1425:
Spawn 1 instances, now Total 1549
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1416:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1417:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1418:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1419:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1420:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1421:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1422:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1423:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1424:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1425:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1550
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4983
At location src/cut.c:584
--Src File: src/cut.c
Fragment 0:
__is_neg(c);


BasicTester, a patch instance with id 1426:
Spawn 1 instances, now Total 1550
Counter: 1551
Batcher Size:1
Preprocess the following candidate with CondTester:
Priority 4982
At location src/cut.c:583
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(print_delimiter, c, output_delimiter_length, output_delimiter_string, rs, byte_idx, range_start, output_delimiter_specified, stream)))
    print_delimiter = 1;


CondTester, a patch instance with id 123:
Spawn 1 instances, now Total 1551
Counter: 1552
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1427:
Spawn 1 instances, now Total 1552
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1427 failed as well!
Counter: 1553
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1428:
Spawn 1 instances, now Total 1553
Counter: 1554
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1429:
Spawn 1 instances, now Total 1554
Counter: 1555
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1430:
Spawn 1 instances, now Total 1555
Counter: 1556
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
xalloc_die();
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1431:
Spawn 1 instances, now Total 1556
Counter: 1557
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1432:
Spawn 1 instances, now Total 1557
Counter: 1558
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1433:
Spawn 1 instances, now Total 1558
Counter: 1559
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (print_delimiter);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1434:
Spawn 1 instances, now Total 1559
Counter: 1560
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (range_start);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1435:
Spawn 1 instances, now Total 1560
Counter: 1561
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1436:
Spawn 1 instances, now Total 1561
Counter: 1562
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
putchar_unlocked(c);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1437:
Spawn 1 instances, now Total 1562
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1428 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1429 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1430 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1431 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1432 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1433 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1434 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1435 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1436 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1437 failed as well!
Counter: 1563
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1438:
Spawn 1 instances, now Total 1563
Counter: 1564
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1439:
Spawn 1 instances, now Total 1564
Counter: 1565
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
print_delimiter = (print_delimiter);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1440:
Spawn 1 instances, now Total 1565
Counter: 1566
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1441:
Spawn 1 instances, now Total 1566
Counter: 1567
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1442:
Spawn 1 instances, now Total 1567
Counter: 1568
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1443:
Spawn 1 instances, now Total 1568
Counter: 1569
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1444:
Spawn 1 instances, now Total 1569
Counter: 1570
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
print_delimiter = (range_start);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1445:
Spawn 1 instances, now Total 1570
Counter: 1571
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
print_delimiter = 0;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1446:
Spawn 1 instances, now Total 1571
Counter: 1572
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
print_delimiter = 1;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1447:
Spawn 1 instances, now Total 1572
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1438 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1439 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1440 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1441 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1442 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1443 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1444 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1445 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1446 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1447 failed as well!
Counter: 1573
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1448:
Spawn 1 instances, now Total 1573
Counter: 1574
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1449:
Spawn 1 instances, now Total 1574
Counter: 1575
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1450:
Spawn 1 instances, now Total 1575
Counter: 1576
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1451:
Spawn 1 instances, now Total 1576
Counter: 1577
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (byte_idx);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1452:
Spawn 1 instances, now Total 1577
Counter: 1578
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1453:
Spawn 1 instances, now Total 1578
Counter: 1579
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1454:
Spawn 1 instances, now Total 1579
Counter: 1580
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1455:
Spawn 1 instances, now Total 1580
Counter: 1581
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1456:
Spawn 1 instances, now Total 1581
Counter: 1582
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1457:
Spawn 1 instances, now Total 1582
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1448 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1449 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1450 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1451 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1452 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1453 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1454 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1455 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1456 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1457 failed as well!
Counter: 1583
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1458:
Spawn 1 instances, now Total 1583
Counter: 1584
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1459:
Spawn 1 instances, now Total 1584
Counter: 1585
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1460:
Spawn 1 instances, now Total 1585
Counter: 1586
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1461:
Spawn 1 instances, now Total 1586
Counter: 1587
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1462:
Spawn 1 instances, now Total 1587
Counter: 1588
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1463:
Spawn 1 instances, now Total 1588
Counter: 1589
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1464:
Spawn 1 instances, now Total 1589
Counter: 1590
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1465:
Spawn 1 instances, now Total 1590
Counter: 1591
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (byte_idx);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1466:
Spawn 1 instances, now Total 1591
Counter: 1592
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1467:
Spawn 1 instances, now Total 1592
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1458 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1459 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1460 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1461 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1462 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1463 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1464 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1465 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1466 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1467 failed as well!
Counter: 1593
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1468:
Spawn 1 instances, now Total 1593
Counter: 1594
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1469:
Spawn 1 instances, now Total 1594
Counter: 1595
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1470:
Spawn 1 instances, now Total 1595
Counter: 1596
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1471:
Spawn 1 instances, now Total 1596
Counter: 1597
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1472:
Spawn 1 instances, now Total 1597
Counter: 1598
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1473:
Spawn 1 instances, now Total 1598
Counter: 1599
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1474:
Spawn 1 instances, now Total 1599
Counter: 1600
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if (byte_idx > 0)
    putchar_unlocked('\n');
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1475:
Spawn 1 instances, now Total 1600
Counter: 1601
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (print_delimiter);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1476:
Spawn 1 instances, now Total 1601
Counter: 1602
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (range_start);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1477:
Spawn 1 instances, now Total 1602
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1468 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1469 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1470 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1471 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1472 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1473 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1474 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1475 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1476 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1477 failed as well!
Counter: 1603
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1478:
Spawn 1 instances, now Total 1603
Counter: 1604
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1479:
Spawn 1 instances, now Total 1604
Counter: 1605
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1480:
Spawn 1 instances, now Total 1605
Counter: 1606
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1481:
Spawn 1 instances, now Total 1606
Counter: 1607
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1482:
Spawn 1 instances, now Total 1607
Counter: 1608
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1483:
Spawn 1 instances, now Total 1608
Counter: 1609
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1484:
Spawn 1 instances, now Total 1609
Counter: 1610
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1485:
Spawn 1 instances, now Total 1610
Counter: 1611
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1486:
Spawn 1 instances, now Total 1611
Counter: 1612
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1487:
Spawn 1 instances, now Total 1612
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1478 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1479 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1480 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1481 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1482 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1483 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1484 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1485 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1486 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1487 failed as well!
Counter: 1613
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1488:
Spawn 1 instances, now Total 1613
Counter: 1614
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1489:
Spawn 1 instances, now Total 1614
Counter: 1615
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1490:
Spawn 1 instances, now Total 1615
Counter: 1616
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1491:
Spawn 1 instances, now Total 1616
Counter: 1617
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1492:
Spawn 1 instances, now Total 1617
Counter: 1618
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1493:
Spawn 1 instances, now Total 1618
Counter: 1619
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1494:
Spawn 1 instances, now Total 1619
Counter: 1620
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
exit(0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1495:
Spawn 1 instances, now Total 1620
Counter: 1621
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1496:
Spawn 1 instances, now Total 1621
Counter: 1622
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
exit_failure = (c);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1497:
Spawn 1 instances, now Total 1622
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1488 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1489 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1490 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1491 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1492 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1493 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1494 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1495 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1496 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1497 failed as well!
Counter: 1623
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1498:
Spawn 1 instances, now Total 1623
Counter: 1624
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1499:
Spawn 1 instances, now Total 1624
Counter: 1625
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
exit(1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1500:
Spawn 1 instances, now Total 1625
Counter: 1626
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1501:
Spawn 1 instances, now Total 1626
Counter: 1627
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1502:
Spawn 1 instances, now Total 1627
Counter: 1628
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1503:
Spawn 1 instances, now Total 1628
Counter: 1629
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
delim = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1504:
Spawn 1 instances, now Total 1629
Counter: 1630
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1505:
Spawn 1 instances, now Total 1630
Counter: 1631
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1506:
Spawn 1 instances, now Total 1631
Counter: 1632
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
eol_range_start = (byte_idx);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1507:
Spawn 1 instances, now Total 1632
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1498 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1499 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1500 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1501 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1502 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1503 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1504 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1505 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1506 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1507 failed as well!
Counter: 1633
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1508:
Spawn 1 instances, now Total 1633
Counter: 1634
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1509:
Spawn 1 instances, now Total 1634
Counter: 1635
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1510:
Spawn 1 instances, now Total 1635
Counter: 1636
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
emit_try_help();
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1511:
Spawn 1 instances, now Total 1636
Counter: 1637
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1512:
Spawn 1 instances, now Total 1637
Counter: 1638
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
delim = '\t';
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1513:
Spawn 1 instances, now Total 1638
Counter: 1639
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
delim = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1514:
Spawn 1 instances, now Total 1639
Counter: 1640
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
delim = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1515:
Spawn 1 instances, now Total 1640
Counter: 1641
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1516:
Spawn 1 instances, now Total 1641
Counter: 1642
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1517:
Spawn 1 instances, now Total 1642
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1508 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1509 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1510 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1511 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1512 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1513 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1514 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1515 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1516 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1517 failed as well!
Counter: 1643
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1518:
Spawn 1 instances, now Total 1643
Counter: 1644
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (c);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1519:
Spawn 1 instances, now Total 1644
Counter: 1645
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
byte_idx = (byte_idx);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1520:
Spawn 1 instances, now Total 1645
Counter: 1646
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
c = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1521:
Spawn 1 instances, now Total 1646
Counter: 1647
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked((stream));
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1522:
Spawn 1 instances, now Total 1647
Counter: 1648
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked(stream);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1523:
Spawn 1 instances, now Total 1648
Counter: 1649
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
c = (c);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1524:
Spawn 1 instances, now Total 1649
Counter: 1650
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
byte_idx = 0;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1525:
Spawn 1 instances, now Total 1650
Counter: 1651
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
c = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1526:
Spawn 1 instances, now Total 1651
Counter: 1652
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
c = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1527:
Spawn 1 instances, now Total 1652
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1518 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1519 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1520 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1521 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1522 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1523 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1524 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1525 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1526 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1527 failed as well!
Counter: 1653
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1528:
Spawn 1 instances, now Total 1653
Counter: 1654
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1529:
Spawn 1 instances, now Total 1654
Counter: 1655
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
byte_idx = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1530:
Spawn 1 instances, now Total 1655
Counter: 1656
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
byte_idx = (1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1531:
Spawn 1 instances, now Total 1656
Counter: 1657
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
byte_idx = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1532:
Spawn 1 instances, now Total 1657
Counter: 1658
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1533:
Spawn 1 instances, now Total 1658
Counter: 1659
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printf(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1534:
Spawn 1 instances, now Total 1659
Counter: 1660
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
printf(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1535:
Spawn 1 instances, now Total 1660
Counter: 1661
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
scanf(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1536:
Spawn 1 instances, now Total 1661
Counter: 1662
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
scanf(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1537:
Spawn 1 instances, now Total 1662
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1528 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1529 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1530 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1531 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1532 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1533 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1534 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1535 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1536 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1537 failed as well!
Counter: 1663
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fread_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1538:
Spawn 1 instances, now Total 1663
Counter: 1664
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1539:
Spawn 1 instances, now Total 1664
Counter: 1665
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1540:
Spawn 1 instances, now Total 1665
Counter: 1666
Batcher Size:5
Preprocess the following candidate with CondTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(output_delimiter_length, output_delimiter_string, print_delimiter, rs, byte_idx, c, range_start, output_delimiter_specified, stream)))
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


CondTester, a patch instance with id 124:
Spawn 1 instances, now Total 1666
Counter: 1667
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fread(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1541:
Spawn 1 instances, now Total 1667
Counter: 1668
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4981
At location src/cut.c:580
--Src File: src/cut.c
Fragment 0:
fwrite(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);


BasicTester, a patch instance with id 1542:
Spawn 1 instances, now Total 1668
Counter: 1669
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1543:
Spawn 1 instances, now Total 1669
Counter: 1670
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1544:
Spawn 1 instances, now Total 1670
Counter: 1671
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (print_delimiter);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1545:
Spawn 1 instances, now Total 1671
Counter: 1672
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (range_start);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1546:
Spawn 1 instances, now Total 1672
Counter: 1673
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1547:
Spawn 1 instances, now Total 1673
Counter: 1674
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1548:
Spawn 1 instances, now Total 1674
Counter: 1675
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1549:
Spawn 1 instances, now Total 1675
Counter: 1676
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1550:
Spawn 1 instances, now Total 1676
Counter: 1677
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1551:
Spawn 1 instances, now Total 1677
Counter: 1678
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1552:
Spawn 1 instances, now Total 1678
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1543:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1544:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1545:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1546:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1547:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1548:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1549:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1550:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1551:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1552:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1679
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1553:
Spawn 1 instances, now Total 1679
Counter: 1680
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1554:
Spawn 1 instances, now Total 1680
Counter: 1681
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
putchar_unlocked(c);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1555:
Spawn 1 instances, now Total 1681
Counter: 1682
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1556:
Spawn 1 instances, now Total 1682
Counter: 1683
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1557:
Spawn 1 instances, now Total 1683
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1557:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1684
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1558:
Spawn 1 instances, now Total 1684
Counter: 1685
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
print_delimiter = (print_delimiter);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1559:
Spawn 1 instances, now Total 1685
Counter: 1686
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
print_delimiter = 0;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1560:
Spawn 1 instances, now Total 1686
Counter: 1687
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1561:
Spawn 1 instances, now Total 1687
Counter: 1688
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1562:
Spawn 1 instances, now Total 1688
Counter: 1689
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
print_delimiter = 1;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1563:
Spawn 1 instances, now Total 1689
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1553:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1554:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1555:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1556:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1558:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1559:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1560:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1561:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1562:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1563:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1690
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
print_delimiter = (range_start);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1564:
Spawn 1 instances, now Total 1690
Counter: 1691
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1565:
Spawn 1 instances, now Total 1691
Counter: 1692
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (byte_idx);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1566:
Spawn 1 instances, now Total 1692
Counter: 1693
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1567:
Spawn 1 instances, now Total 1693
Counter: 1694
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1568:
Spawn 1 instances, now Total 1694
Counter: 1695
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1569:
Spawn 1 instances, now Total 1695
Counter: 1696
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (byte_idx);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1570:
Spawn 1 instances, now Total 1696
Counter: 1697
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1571:
Spawn 1 instances, now Total 1697
Counter: 1698
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1572:
Spawn 1 instances, now Total 1698
Counter: 1699
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1573:
Spawn 1 instances, now Total 1699
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1564:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1565:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1566:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1567:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1568:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1569:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1570:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1571:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1572:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1573:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1700
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1574:
Spawn 1 instances, now Total 1700
Counter: 1701
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1575:
Spawn 1 instances, now Total 1701
Counter: 1702
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1576:
Spawn 1 instances, now Total 1702
Counter: 1703
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1577:
Spawn 1 instances, now Total 1703
Counter: 1704
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1578:
Spawn 1 instances, now Total 1704
Counter: 1705
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1579:
Spawn 1 instances, now Total 1705
Counter: 1706
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1580:
Spawn 1 instances, now Total 1706
Counter: 1707
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1581:
Spawn 1 instances, now Total 1707
Counter: 1708
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1582:
Spawn 1 instances, now Total 1708
Counter: 1709
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1583:
Spawn 1 instances, now Total 1709
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1574:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1575:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1576:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1577:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1578:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1579:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1580 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1581:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1582:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1583:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1710
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1584:
Spawn 1 instances, now Total 1710
Counter: 1711
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1585:
Spawn 1 instances, now Total 1711
Counter: 1712
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1586:
Spawn 1 instances, now Total 1712
Counter: 1713
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1587:
Spawn 1 instances, now Total 1713
Counter: 1714
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1588:
Spawn 1 instances, now Total 1714
Counter: 1715
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1589:
Spawn 1 instances, now Total 1715
Counter: 1716
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1590:
Spawn 1 instances, now Total 1716
Counter: 1717
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (print_delimiter);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1591:
Spawn 1 instances, now Total 1717
Counter: 1718
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (range_start);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1592:
Spawn 1 instances, now Total 1718
Counter: 1719
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1593:
Spawn 1 instances, now Total 1719
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1584:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1585:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1586:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1587:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1588:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1589:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1590:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1591:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1592:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1593:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1720
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (byte_idx > 0)
    putchar_unlocked('\n');
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1594:
Spawn 1 instances, now Total 1720
Counter: 1721
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1595:
Spawn 1 instances, now Total 1721
Counter: 1722
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
exit_failure = (c);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1596:
Spawn 1 instances, now Total 1722
Counter: 1723
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1597:
Spawn 1 instances, now Total 1723
Counter: 1724
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1598:
Spawn 1 instances, now Total 1724
Counter: 1725
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1599:
Spawn 1 instances, now Total 1725
Counter: 1726
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1600:
Spawn 1 instances, now Total 1726
Counter: 1727
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1601:
Spawn 1 instances, now Total 1727
Counter: 1728
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1602:
Spawn 1 instances, now Total 1728
Counter: 1729
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1603:
Spawn 1 instances, now Total 1729
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1594:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1595:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1596:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1597:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1598:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1599:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1600:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1601:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1602:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1603:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1730
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1604:
Spawn 1 instances, now Total 1730
Counter: 1731
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1605:
Spawn 1 instances, now Total 1731
Counter: 1732
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1606:
Spawn 1 instances, now Total 1732
Counter: 1733
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1607:
Spawn 1 instances, now Total 1733
Counter: 1734
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1608:
Spawn 1 instances, now Total 1734
Counter: 1735
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1609:
Spawn 1 instances, now Total 1735
Counter: 1736
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1610:
Spawn 1 instances, now Total 1736
Counter: 1737
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1611:
Spawn 1 instances, now Total 1737
Counter: 1738
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
delim = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1612:
Spawn 1 instances, now Total 1738
Counter: 1739
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1613:
Spawn 1 instances, now Total 1739
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1604:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1605:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1606:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1607:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1608:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1609:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1610:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1611:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1612:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1613:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1740
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
exit(1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1614:
Spawn 1 instances, now Total 1740
Counter: 1741
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1615:
Spawn 1 instances, now Total 1741
Counter: 1742
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1616:
Spawn 1 instances, now Total 1742
Counter: 1743
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1617:
Spawn 1 instances, now Total 1743
Counter: 1744
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
eol_range_start = (byte_idx);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1618:
Spawn 1 instances, now Total 1744
Counter: 1745
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1619:
Spawn 1 instances, now Total 1745
Counter: 1746
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
exit(0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1620:
Spawn 1 instances, now Total 1746
Counter: 1747
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
delim = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1621:
Spawn 1 instances, now Total 1747
Counter: 1748
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1622:
Spawn 1 instances, now Total 1748
Counter: 1749
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1623:
Spawn 1 instances, now Total 1749
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1614:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1615:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1616:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1617:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1618:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1619:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1620:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1621:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1622:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1623:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1750
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1624:
Spawn 1 instances, now Total 1750
Counter: 1751
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
emit_try_help();
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1625:
Spawn 1 instances, now Total 1751
Counter: 1752
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
delim = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1626:
Spawn 1 instances, now Total 1752
Counter: 1753
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1627:
Spawn 1 instances, now Total 1753
Counter: 1754
Batcher Size:12
Preprocess the following candidate with CondTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(print_delimiter, rs, byte_idx, output_delimiter_length, output_delimiter_string, range_start, output_delimiter_specified, c, stream)))
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }


CondTester, a patch instance with id 125:
Spawn 1 instances, now Total 1754
Counter: 1755
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
byte_idx = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1628:
Spawn 1 instances, now Total 1755
Counter: 1756
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked((stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1629:
Spawn 1 instances, now Total 1756
Counter: 1757
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1630:
Spawn 1 instances, now Total 1757
Counter: 1758
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
delim = '\t';
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1631:
Spawn 1 instances, now Total 1758
Counter: 1759
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1632:
Spawn 1 instances, now Total 1759
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1624:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1625:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1626:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1627:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcCondTester, Testing instance id 125:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1628:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1629:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1630 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1631:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1632:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1760
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1633:
Spawn 1 instances, now Total 1760
Counter: 1761
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked(stream);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1634:
Spawn 1 instances, now Total 1761
Counter: 1762
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1635:
Spawn 1 instances, now Total 1762
Counter: 1763
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1636:
Spawn 1 instances, now Total 1763
Counter: 1764
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
byte_idx = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1637:
Spawn 1 instances, now Total 1764
Counter: 1765
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
c = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1638:
Spawn 1 instances, now Total 1765
Counter: 1766
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
c = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1639:
Spawn 1 instances, now Total 1766
Counter: 1767
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
c = (c);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1640:
Spawn 1 instances, now Total 1767
Counter: 1768
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
c = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1641:
Spawn 1 instances, now Total 1768
Counter: 1769
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
byte_idx = (byte_idx);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1642:
Spawn 1 instances, now Total 1769
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1633 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1634:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1635:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1636:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1637:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1638:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1639:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1640:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1641:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1642:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1770
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
byte_idx = 0;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1643:
Spawn 1 instances, now Total 1770
Counter: 1771
Batcher Size:9
Preprocess the following candidate with CondTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(print_delimiter, rs, byte_idx, output_delimiter_length, output_delimiter_string, range_start, output_delimiter_specified, c, stream)) && (rs && *rs && print_delimiter)) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


CondTester, a patch instance with id 126:
Spawn 1 instances, now Total 1771
Counter: 1772
Batcher Size:10
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1644:
Spawn 1 instances, now Total 1772
Counter: 1773
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1645:
Spawn 1 instances, now Total 1773
Counter: 1774
Batcher Size:12
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1646:
Spawn 1 instances, now Total 1774
Counter: 1775
Batcher Size:13
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
byte_idx = (-1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1647:
Spawn 1 instances, now Total 1775
Counter: 1776
Batcher Size:14
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1648:
Spawn 1 instances, now Total 1776
Counter: 1777
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1649:
Spawn 1 instances, now Total 1777
Counter: 1778
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1650:
Spawn 1 instances, now Total 1778
Counter: 1779
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4980
At location src/cut.c:578
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (c);
if (rs && *rs && print_delimiter) {
    fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
}


BasicTester, a patch instance with id 1651:
Spawn 1 instances, now Total 1779
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1643:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 126:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1644:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1645:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1646:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1647:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1648:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1649:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1650:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1651:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1780
Batcher Size:8
Preprocess the following candidate with CondTester:
Priority 4979
At location src/cut.c:309
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(is_selected, k, range_start, k_selected, complement, max_range_endpoint, eol_range_start)))
    return is_selected;


CondTester, a patch instance with id 127:
Spawn 1 instances, now Total 1780
Counter: 1781
Batcher Size:9
Preprocess the following candidate with CondTester:
Priority 4976
At location src/cut.c:278
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(tablesize, y, x)))
    return y % tablesize;


CondTester, a patch instance with id 128:
Spawn 1 instances, now Total 1781
Counter: 1782
Batcher Size:10
Preprocess the following candidate with CondTester:
Priority 4974
At location src/cut.c:290
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(i, range_start_ht)))
    return hash_lookup(range_start_ht, (void *)i) ? 1 : 0;


CondTester, a patch instance with id 129:
Spawn 1 instances, now Total 1782
Counter: 1783
Batcher Size:11
Preprocess the following candidate with BasicTester:
Priority 4973
At location src/cut.c:307
--Src File: src/cut.c
Fragment 0:
{
    *range_start = is_printable_field(k);
}


BasicTester, a patch instance with id 1652:
Spawn 1 instances, now Total 1783
Counter: 1784
Batcher Size:12
Preprocess the following candidate with CondTester:
Priority 4973
At location src/cut.c:307
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(k, range_start, is_selected, k_selected, complement, max_range_endpoint, eol_range_start)))
        *range_start = is_range_start_index(k);
}


CondTester, a patch instance with id 130:
Spawn 1 instances, now Total 1784
Counter: 1785
Batcher Size:13
Preprocess the following candidate with CondTester:
Priority 4972
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(range_start, is_selected, k, k_selected, complement, max_range_endpoint, eol_range_start)))
    if (range_start && is_selected)
        *range_start = is_range_start_index(k);


CondTester, a patch instance with id 131:
Spawn 1 instances, now Total 1785
Counter: 1786
Batcher Size:14
Preprocess the following candidate with CondTester:
Priority 4972
At location src/cut.c:306
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(range_start, is_selected, k, k_selected, complement, max_range_endpoint, eol_range_start)) && (range_start && is_selected))
    *range_start = is_range_start_index(k);


CondTester, a patch instance with id 132:
Spawn 1 instances, now Total 1786
Counter: 1787
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1653:
Spawn 1 instances, now Total 1787
Counter: 1788
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (print_delimiter);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1654:
Spawn 1 instances, now Total 1788
Counter: 1789
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (range_start);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1655:
Spawn 1 instances, now Total 1789
Counter: 1790
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1656:
Spawn 1 instances, now Total 1790
Counter: 1791
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1657:
Spawn 1 instances, now Total 1791
Counter: 1792
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1658:
Spawn 1 instances, now Total 1792
Counter: 1793
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (byte_idx);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1659:
Spawn 1 instances, now Total 1793
Counter: 1794
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1660:
Spawn 1 instances, now Total 1794
Counter: 1795
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1661:
Spawn 1 instances, now Total 1795
Counter: 1796
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
putchar_unlocked(c);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1662:
Spawn 1 instances, now Total 1796
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1653:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1654:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1655:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1656:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1657:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1658:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1659:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1660:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1661:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1662:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1797
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1663:
Spawn 1 instances, now Total 1797
Counter: 1798
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1664:
Spawn 1 instances, now Total 1798
Counter: 1799
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1665:
Spawn 1 instances, now Total 1799
Counter: 1800
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1666:
Spawn 1 instances, now Total 1800
Counter: 1801
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1667:
Spawn 1 instances, now Total 1801
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1667:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1802
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1668:
Spawn 1 instances, now Total 1802
Counter: 1803
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
print_delimiter = (range_start);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1669:
Spawn 1 instances, now Total 1803
Counter: 1804
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
print_delimiter = 1;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1670:
Spawn 1 instances, now Total 1804
Counter: 1805
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1671:
Spawn 1 instances, now Total 1805
Counter: 1806
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
print_delimiter = 0;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1672:
Spawn 1 instances, now Total 1806
Counter: 1807
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1673:
Spawn 1 instances, now Total 1807
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1663:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1664:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1665:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1666:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1668:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1669:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1670:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1671:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1672:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1673:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1808
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
print_delimiter = (print_delimiter);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1674:
Spawn 1 instances, now Total 1808
Counter: 1809
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1675:
Spawn 1 instances, now Total 1809
Counter: 1810
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1676:
Spawn 1 instances, now Total 1810
Counter: 1811
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1677:
Spawn 1 instances, now Total 1811
Counter: 1812
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1678:
Spawn 1 instances, now Total 1812
Counter: 1813
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1679:
Spawn 1 instances, now Total 1813
Counter: 1814
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1680:
Spawn 1 instances, now Total 1814
Counter: 1815
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1681:
Spawn 1 instances, now Total 1815
Counter: 1816
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1682:
Spawn 1 instances, now Total 1816
Counter: 1817
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1683:
Spawn 1 instances, now Total 1817
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1674:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1675:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1676:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1677:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1678:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1679:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1680:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1681:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1682:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1683:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1818
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (byte_idx);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1684:
Spawn 1 instances, now Total 1818
Counter: 1819
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1685:
Spawn 1 instances, now Total 1819
Counter: 1820
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1686:
Spawn 1 instances, now Total 1820
Counter: 1821
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1687:
Spawn 1 instances, now Total 1821
Counter: 1822
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1688:
Spawn 1 instances, now Total 1822
Counter: 1823
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1689:
Spawn 1 instances, now Total 1823
Counter: 1824
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1690:
Spawn 1 instances, now Total 1824
Counter: 1825
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1691:
Spawn 1 instances, now Total 1825
Counter: 1826
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1692:
Spawn 1 instances, now Total 1826
Counter: 1827
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if (byte_idx > 0)
    putchar_unlocked('\n');
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1693:
Spawn 1 instances, now Total 1827
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1684:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1685:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1686:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1687:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1688:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1689:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1690 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1691:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1692:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1693:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1828
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1694:
Spawn 1 instances, now Total 1828
Counter: 1829
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1695:
Spawn 1 instances, now Total 1829
Counter: 1830
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1696:
Spawn 1 instances, now Total 1830
Counter: 1831
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1697:
Spawn 1 instances, now Total 1831
Counter: 1832
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1698:
Spawn 1 instances, now Total 1832
Counter: 1833
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1699:
Spawn 1 instances, now Total 1833
Counter: 1834
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1700:
Spawn 1 instances, now Total 1834
Counter: 1835
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1701:
Spawn 1 instances, now Total 1835
Counter: 1836
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (print_delimiter);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1702:
Spawn 1 instances, now Total 1836
Counter: 1837
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1703:
Spawn 1 instances, now Total 1837
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1694:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1695:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1696:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1697:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1698:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1699:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1700:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1701:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1702:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1703:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1838
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1704:
Spawn 1 instances, now Total 1838
Counter: 1839
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (range_start);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1705:
Spawn 1 instances, now Total 1839
Counter: 1840
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1706:
Spawn 1 instances, now Total 1840
Counter: 1841
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1707:
Spawn 1 instances, now Total 1841
Counter: 1842
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
exit_failure = (c);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1708:
Spawn 1 instances, now Total 1842
Counter: 1843
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1709:
Spawn 1 instances, now Total 1843
Counter: 1844
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1710:
Spawn 1 instances, now Total 1844
Counter: 1845
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1711:
Spawn 1 instances, now Total 1845
Counter: 1846
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1712:
Spawn 1 instances, now Total 1846
Counter: 1847
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1713:
Spawn 1 instances, now Total 1847
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1704:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1705:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1706:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1707:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1708:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1709:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1710:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1711:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1712:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1713:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1848
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1714:
Spawn 1 instances, now Total 1848
Counter: 1849
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1715:
Spawn 1 instances, now Total 1849
Counter: 1850
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1716:
Spawn 1 instances, now Total 1850
Counter: 1851
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1717:
Spawn 1 instances, now Total 1851
Counter: 1852
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1718:
Spawn 1 instances, now Total 1852
Counter: 1853
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1719:
Spawn 1 instances, now Total 1853
Counter: 1854
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1720:
Spawn 1 instances, now Total 1854
Counter: 1855
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1721:
Spawn 1 instances, now Total 1855
Counter: 1856
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1722:
Spawn 1 instances, now Total 1856
Counter: 1857
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1723:
Spawn 1 instances, now Total 1857
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1714:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1715:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1716:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1717:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1718:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1719:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1720:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1721:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1722:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1723:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1858
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1724:
Spawn 1 instances, now Total 1858
Counter: 1859
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
exit(0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1725:
Spawn 1 instances, now Total 1859
Counter: 1860
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1726:
Spawn 1 instances, now Total 1860
Counter: 1861
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1727:
Spawn 1 instances, now Total 1861
Counter: 1862
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
exit(1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1728:
Spawn 1 instances, now Total 1862
Counter: 1863
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1729:
Spawn 1 instances, now Total 1863
Counter: 1864
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
eol_range_start = (byte_idx);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1730:
Spawn 1 instances, now Total 1864
Counter: 1865
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1731:
Spawn 1 instances, now Total 1865
Counter: 1866
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
delim = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1732:
Spawn 1 instances, now Total 1866
Counter: 1867
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1733:
Spawn 1 instances, now Total 1867
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1724:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1725:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1726:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1727:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1728:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1729:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1730:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1731:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1732:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1733:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1868
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
emit_try_help();
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1734:
Spawn 1 instances, now Total 1868
Counter: 1869
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1735:
Spawn 1 instances, now Total 1869
Counter: 1870
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1736:
Spawn 1 instances, now Total 1870
Counter: 1871
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
delim = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1737:
Spawn 1 instances, now Total 1871
Counter: 1872
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
delim = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1738:
Spawn 1 instances, now Total 1872
Counter: 1873
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
byte_idx = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1739:
Spawn 1 instances, now Total 1873
Counter: 1874
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
c = (c);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1740:
Spawn 1 instances, now Total 1874
Counter: 1875
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1741:
Spawn 1 instances, now Total 1875
Counter: 1876
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1742:
Spawn 1 instances, now Total 1876
Counter: 1877
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
delim = '\t';
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1743:
Spawn 1 instances, now Total 1877
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1734:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1735:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1736:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1737:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1738:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1739:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1740:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1741:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1742 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1743:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1878
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1744:
Spawn 1 instances, now Total 1878
Counter: 1879
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked((stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1745:
Spawn 1 instances, now Total 1879
Counter: 1880
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
c = getc_unlocked(stream);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1746:
Spawn 1 instances, now Total 1880
Counter: 1881
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1747:
Spawn 1 instances, now Total 1881
Counter: 1882
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
byte_idx = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1748:
Spawn 1 instances, now Total 1882
Counter: 1883
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
byte_idx = 0;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1749:
Spawn 1 instances, now Total 1883
Counter: 1884
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
c = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1750:
Spawn 1 instances, now Total 1884
Counter: 1885
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
c = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1751:
Spawn 1 instances, now Total 1885
Counter: 1886
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
c = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1752:
Spawn 1 instances, now Total 1886
Counter: 1887
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
byte_idx = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1753:
Spawn 1 instances, now Total 1887
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1744 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1745:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1746:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1747:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1748:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1749:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1750:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1751:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1752:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1753:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1888
Batcher Size:15
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
byte_idx = (byte_idx);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1754:
Spawn 1 instances, now Total 1888
Counter: 1889
Batcher Size:16
Preprocess the following candidate with CondTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, rs, range_start, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)))
    if (print_kth(++byte_idx, rs)) {
        if (rs && *rs && print_delimiter) {
            fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
        }
        print_delimiter = 1;
        putchar_unlocked(c);
    }


CondTester, a patch instance with id 133:
Spawn 1 instances, now Total 1889
Counter: 1890
Batcher Size:17
Preprocess the following candidate with CondTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, rs, range_start, output_delimiter_specified, print_delimiter, output_delimiter_length, output_delimiter_string, c, stream)) && (print_kth(++byte_idx, rs))) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


CondTester, a patch instance with id 134:
Spawn 1 instances, now Total 1890
Counter: 1891
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1755:
Spawn 1 instances, now Total 1891
Counter: 1892
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (c);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1756:
Spawn 1 instances, now Total 1892
Counter: 1893
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1757:
Spawn 1 instances, now Total 1893
Counter: 1894
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1758:
Spawn 1 instances, now Total 1894
Counter: 1895
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1759:
Spawn 1 instances, now Total 1895
Counter: 1896
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1760:
Spawn 1 instances, now Total 1896
Counter: 1897
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4969
At location src/cut.c:576
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
if (print_kth(++byte_idx, rs)) {
    if (rs && *rs && print_delimiter) {
        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
    }
    print_delimiter = 1;
    putchar_unlocked(c);
}


BasicTester, a patch instance with id 1761:
Spawn 1 instances, now Total 1897
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1754:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 133:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 134:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1755:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1756:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1757:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1758:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1759:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1760:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1761:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1898
Batcher Size:15
Preprocess the following candidate with CondTester:
Priority 4966
At location src/cut.c:267
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(i, n, printable_field)))
    return (printable_field[n] >> (i % 8)) & 1;


CondTester, a patch instance with id 135:
Spawn 1 instances, now Total 1898
Counter: 1899
Batcher Size:16
Preprocess the following candidate with CondTester:
Priority 4964
At location src/cut.c:554
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(print_delimiter, byte_idx, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    while (1)
        {
            int c;
            c = getc_unlocked(stream);
            if (c == '\n') {
                putchar_unlocked('\n');
                byte_idx = 0;
                print_delimiter = 0;
            } else if (c == (-1)) {
                if (byte_idx > 0)
                    putchar_unlocked('\n');
                break;
            } else {
                bool range_start;
                bool *rs = output_delimiter_specified ? &range_start : ((void *)0);
                if (print_kth(++byte_idx, rs)) {
                    if (rs && *rs && print_delimiter) {
                        fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, stdout);
                    }
                    print_delimiter = 1;
                    putchar_unlocked(c);
                }
            }
        }


CondTester, a patch instance with id 136:
Spawn 1 instances, now Total 1899
Counter: 1900
Batcher Size:17
Preprocess the following candidate with CondTester:
Priority 4963
At location src/cut.c:553
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(print_delimiter, byte_idx, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    print_delimiter = 0;


CondTester, a patch instance with id 137:
Spawn 1 instances, now Total 1900
Counter: 1901
Batcher Size:18
Preprocess the following candidate with CondTester:
Priority 4962
At location src/cut.c:552
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(byte_idx, print_delimiter, stream, output_delimiter_specified, output_delimiter_length, output_delimiter_string)))
    byte_idx = 0;


CondTester, a patch instance with id 138:
Spawn 1 instances, now Total 1901
Counter: 1902
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fileno(stream);
}


BasicTester, a patch instance with id 1762:
Spawn 1 instances, now Total 1902
Counter: 1903
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fileno_unlocked(stream);
}


BasicTester, a patch instance with id 1763:
Spawn 1 instances, now Total 1903
Counter: 1904
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fpurge(stream);
}


BasicTester, a patch instance with id 1764:
Spawn 1 instances, now Total 1904
Counter: 1905
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    cut_fields(stream);
}


BasicTester, a patch instance with id 1765:
Spawn 1 instances, now Total 1905
Counter: 1906
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    cut_stream(stream);
}


BasicTester, a patch instance with id 1766:
Spawn 1 instances, now Total 1906
Counter: 1907
Batcher Size:24
Preprocess the following candidate with CondTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(stream, operating_mode)))
        cut_bytes(stream);
}


CondTester, a patch instance with id 139:
Spawn 1 instances, now Total 1907
Counter: 1908
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    pclose(stream);
}


BasicTester, a patch instance with id 1767:
Spawn 1 instances, now Total 1908
Counter: 1909
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    ftrylockfile(stream);
}


BasicTester, a patch instance with id 1768:
Spawn 1 instances, now Total 1909
Counter: 1910
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    rpl_fclose(stream);
}


BasicTester, a patch instance with id 1769:
Spawn 1 instances, now Total 1910
Counter: 1911
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    rpl_fflush(stream);
}


BasicTester, a patch instance with id 1770:
Spawn 1 instances, now Total 1911
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1762:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1763:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1764:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1765:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1766:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 139:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1767:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1768:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1769:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1770:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1912
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    funlockfile(stream);
}


BasicTester, a patch instance with id 1771:
Spawn 1 instances, now Total 1912
Counter: 1913
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    flockfile(stream);
}


BasicTester, a patch instance with id 1772:
Spawn 1 instances, now Total 1913
Counter: 1914
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    setlinebuf(stream);
}


BasicTester, a patch instance with id 1773:
Spawn 1 instances, now Total 1914
Counter: 1915
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    ftello(stream);
}


BasicTester, a patch instance with id 1774:
Spawn 1 instances, now Total 1915
Counter: 1916
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    ferror(stream);
}


BasicTester, a patch instance with id 1775:
Spawn 1 instances, now Total 1916
Counter: 1917
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    feof_unlocked(stream);
}


BasicTester, a patch instance with id 1776:
Spawn 1 instances, now Total 1917
Counter: 1918
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    ferror_unlocked(stream);
}


BasicTester, a patch instance with id 1777:
Spawn 1 instances, now Total 1918
Counter: 1919
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    clearerr_unlocked(stream);
}


BasicTester, a patch instance with id 1778:
Spawn 1 instances, now Total 1919
Counter: 1920
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    ftello64(stream);
}


BasicTester, a patch instance with id 1779:
Spawn 1 instances, now Total 1920
Counter: 1921
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    clearerr(stream);
}


BasicTester, a patch instance with id 1780:
Spawn 1 instances, now Total 1921
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1771:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1772:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1773:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1774:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1775:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1776:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1777:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1778:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1779:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1780:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1922
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    feof(stream);
}


BasicTester, a patch instance with id 1781:
Spawn 1 instances, now Total 1922
Counter: 1923
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fgetc(stream);
}


BasicTester, a patch instance with id 1782:
Spawn 1 instances, now Total 1923
Counter: 1924
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fgetc_unlocked(stream);
}


BasicTester, a patch instance with id 1783:
Spawn 1 instances, now Total 1924
Counter: 1925
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    ftell(stream);
}


BasicTester, a patch instance with id 1784:
Spawn 1 instances, now Total 1925
Counter: 1926
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    rewind(stream);
}


BasicTester, a patch instance with id 1785:
Spawn 1 instances, now Total 1926
Counter: 1927
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    getw(stream);
}


BasicTester, a patch instance with id 1786:
Spawn 1 instances, now Total 1927
Counter: 1928
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    getc(stream);
}


BasicTester, a patch instance with id 1787:
Spawn 1 instances, now Total 1928
Counter: 1929
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    getc_unlocked(stream);
}


BasicTester, a patch instance with id 1788:
Spawn 1 instances, now Total 1929
Counter: 1930
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_peekc_locked(stream);
}


BasicTester, a patch instance with id 1789:
Spawn 1 instances, now Total 1930
Counter: 1931
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_free_backup_area(stream);
}


BasicTester, a patch instance with id 1790:
Spawn 1 instances, now Total 1931
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1781:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1782:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1783:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1784:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1785:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1786:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1787:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1788:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1789:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1790:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1932
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fflush(stream);
}


BasicTester, a patch instance with id 1791:
Spawn 1 instances, now Total 1932
Counter: 1933
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fflush_unlocked(stream);
}


BasicTester, a patch instance with id 1792:
Spawn 1 instances, now Total 1933
Counter: 1934
Batcher Size:21
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    fclose(stream);
}


BasicTester, a patch instance with id 1793:
Spawn 1 instances, now Total 1934
Counter: 1935
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_flockfile(stream);
}


BasicTester, a patch instance with id 1794:
Spawn 1 instances, now Total 1935
Counter: 1936
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_funlockfile(stream);
}


BasicTester, a patch instance with id 1795:
Spawn 1 instances, now Total 1936
Counter: 1937
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_ftrylockfile(stream);
}


BasicTester, a patch instance with id 1796:
Spawn 1 instances, now Total 1937
Counter: 1938
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    __underflow(stream);
}


BasicTester, a patch instance with id 1797:
Spawn 1 instances, now Total 1938
Counter: 1939
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    __uflow(stream);
}


BasicTester, a patch instance with id 1798:
Spawn 1 instances, now Total 1939
Counter: 1940
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_feof(stream);
}


BasicTester, a patch instance with id 1799:
Spawn 1 instances, now Total 1940
Counter: 1941
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_ferror(stream);
}


BasicTester, a patch instance with id 1800:
Spawn 1 instances, now Total 1941
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1791:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1792:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1793:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1794:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1795:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1796:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1797:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1798:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1799:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1800:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1942
Batcher Size:19
Preprocess the following candidate with BasicTester:
Priority 4959
At location src/cut.c:715
--Src File: src/cut.c
Fragment 0:
{
    _IO_getc(stream);
}


BasicTester, a patch instance with id 1801:
Spawn 1 instances, now Total 1942
Counter: 1943
Batcher Size:20
Preprocess the following candidate with CondTester:
Priority 4958
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(operating_mode, stream)))
    if (operating_mode == byte_mode)
        cut_bytes(stream);
    else
        cut_fields(stream);


CondTester, a patch instance with id 140:
Spawn 1 instances, now Total 1943
Counter: 1944
Batcher Size:21
Preprocess the following candidate with CondTester:
Priority 4958
At location src/cut.c:714
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(operating_mode, stream)) && (operating_mode == byte_mode))
    cut_bytes(stream);
else
    cut_fields(stream);


CondTester, a patch instance with id 141:
Spawn 1 instances, now Total 1944
Counter: 1945
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
cut_fields(stream);


BasicTester, a patch instance with id 1802:
Spawn 1 instances, now Total 1945
Counter: 1946
Batcher Size:23
Preprocess the following candidate with CondTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(stream, file, have_read_stdin)))
    cut_stream(stream);


CondTester, a patch instance with id 142:
Spawn 1 instances, now Total 1946
Counter: 1947
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_funlockfile(stream);


BasicTester, a patch instance with id 1803:
Spawn 1 instances, now Total 1947
Counter: 1948
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
clearerr(stream);


BasicTester, a patch instance with id 1804:
Spawn 1 instances, now Total 1948
Counter: 1949
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
pclose(stream);


BasicTester, a patch instance with id 1805:
Spawn 1 instances, now Total 1949
Counter: 1950
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
rpl_fclose(stream);


BasicTester, a patch instance with id 1806:
Spawn 1 instances, now Total 1950
Counter: 1951
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fpurge(stream);


BasicTester, a patch instance with id 1807:
Spawn 1 instances, now Total 1951
Counter: 1952
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
cut_bytes(stream);


BasicTester, a patch instance with id 1808:
Spawn 1 instances, now Total 1952
Counter: 1953
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
rpl_fflush(stream);


BasicTester, a patch instance with id 1809:
Spawn 1 instances, now Total 1953
Counter: 1954
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
flockfile(stream);


BasicTester, a patch instance with id 1810:
Spawn 1 instances, now Total 1954
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1802:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 142:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1803:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1804:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1805:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1806:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1807:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1808:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1809:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1810:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1955
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
ftrylockfile(stream);


BasicTester, a patch instance with id 1811:
Spawn 1 instances, now Total 1955
Counter: 1956
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
funlockfile(stream);


BasicTester, a patch instance with id 1812:
Spawn 1 instances, now Total 1956
Counter: 1957
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
feof(stream);


BasicTester, a patch instance with id 1813:
Spawn 1 instances, now Total 1957
Counter: 1958
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
feof_unlocked(stream);


BasicTester, a patch instance with id 1814:
Spawn 1 instances, now Total 1958
Counter: 1959
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fileno(stream);


BasicTester, a patch instance with id 1815:
Spawn 1 instances, now Total 1959
Counter: 1960
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fileno_unlocked(stream);


BasicTester, a patch instance with id 1816:
Spawn 1 instances, now Total 1960
Counter: 1961
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
ferror_unlocked(stream);


BasicTester, a patch instance with id 1817:
Spawn 1 instances, now Total 1961
Counter: 1962
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
ferror(stream);


BasicTester, a patch instance with id 1818:
Spawn 1 instances, now Total 1962
Counter: 1963
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked(stream);


BasicTester, a patch instance with id 1819:
Spawn 1 instances, now Total 1963
Counter: 1964
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_ftrylockfile(stream);


BasicTester, a patch instance with id 1820:
Spawn 1 instances, now Total 1964
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1811:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1812:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1813:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1814:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1815:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1816:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1817:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1818:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1819:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1820:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1965
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
getc(stream);


BasicTester, a patch instance with id 1821:
Spawn 1 instances, now Total 1965
Counter: 1966
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
ftell(stream);


BasicTester, a patch instance with id 1822:
Spawn 1 instances, now Total 1966
Counter: 1967
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
ftello(stream);


BasicTester, a patch instance with id 1823:
Spawn 1 instances, now Total 1967
Counter: 1968
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
ftello64(stream);


BasicTester, a patch instance with id 1824:
Spawn 1 instances, now Total 1968
Counter: 1969
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
rewind(stream);


BasicTester, a patch instance with id 1825:
Spawn 1 instances, now Total 1969
Counter: 1970
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
getc_unlocked(stream);


BasicTester, a patch instance with id 1826:
Spawn 1 instances, now Total 1970
Counter: 1971
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fgetc_unlocked(stream);


BasicTester, a patch instance with id 1827:
Spawn 1 instances, now Total 1971
Counter: 1972
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
getw(stream);


BasicTester, a patch instance with id 1828:
Spawn 1 instances, now Total 1972
Counter: 1973
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_free_backup_area(stream);


BasicTester, a patch instance with id 1829:
Spawn 1 instances, now Total 1973
Counter: 1974
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fflush(stream);


BasicTester, a patch instance with id 1830:
Spawn 1 instances, now Total 1974
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1821:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1822:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1823:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1824:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1825:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1826:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1827:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1828:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1829:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1830:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1975
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
setlinebuf(stream);


BasicTester, a patch instance with id 1831:
Spawn 1 instances, now Total 1975
Counter: 1976
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fgetc(stream);


BasicTester, a patch instance with id 1832:
Spawn 1 instances, now Total 1976
Counter: 1977
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fflush_unlocked(stream);


BasicTester, a patch instance with id 1833:
Spawn 1 instances, now Total 1977
Counter: 1978
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
fclose(stream);


BasicTester, a patch instance with id 1834:
Spawn 1 instances, now Total 1978
Counter: 1979
Batcher Size:26
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
__underflow(stream);


BasicTester, a patch instance with id 1835:
Spawn 1 instances, now Total 1979
Counter: 1980
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
__uflow(stream);


BasicTester, a patch instance with id 1836:
Spawn 1 instances, now Total 1980
Counter: 1981
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_getc(stream);


BasicTester, a patch instance with id 1837:
Spawn 1 instances, now Total 1981
Counter: 1982
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_feof(stream);


BasicTester, a patch instance with id 1838:
Spawn 1 instances, now Total 1982
Counter: 1983
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_peekc_locked(stream);


BasicTester, a patch instance with id 1839:
Spawn 1 instances, now Total 1983
Counter: 1984
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_flockfile(stream);


BasicTester, a patch instance with id 1840:
Spawn 1 instances, now Total 1984
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1831:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1832:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1833:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1834:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1835:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1836:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1837:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1838:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1839:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1840:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 1985
Batcher Size:22
Preprocess the following candidate with BasicTester:
Priority 4957
At location src/cut.c:745
--Src File: src/cut.c
Fragment 0:
_IO_ferror(stream);


BasicTester, a patch instance with id 1841:
Spawn 1 instances, now Total 1985
Counter: 1986
Batcher Size:23
Preprocess the following candidate with BasicTester:
Priority 4956
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
printf(stream, FADVISE_SEQUENTIAL);


BasicTester, a patch instance with id 1842:
Spawn 1 instances, now Total 1986
Counter: 1987
Batcher Size:24
Preprocess the following candidate with BasicTester:
Priority 4956
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
printf(stream, FADVISE_SEQUENTIAL);


BasicTester, a patch instance with id 1843:
Spawn 1 instances, now Total 1987
Counter: 1988
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4956
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
scanf(stream, FADVISE_SEQUENTIAL);


BasicTester, a patch instance with id 1844:
Spawn 1 instances, now Total 1988
Counter: 1989
Batcher Size:26
Preprocess the following candidate with CondTester:
Priority 4956
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(stream, file, have_read_stdin)))
    fadvise(stream, FADVISE_SEQUENTIAL);


CondTester, a patch instance with id 143:
Spawn 1 instances, now Total 1989
Counter: 1990
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4956
At location src/cut.c:743
--Src File: src/cut.c
Fragment 0:
scanf(stream, FADVISE_SEQUENTIAL);


BasicTester, a patch instance with id 1845:
Spawn 1 instances, now Total 1990
Counter: 1991
Batcher Size:28
Preprocess the following candidate with CondTester:
Priority 4955
At location src/cut.c:731
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(stream, have_read_stdin, file)))
    stream = stdin;


CondTester, a patch instance with id 144:
Spawn 1 instances, now Total 1991
Counter: 1992
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
have_read_stdin = 1;


BasicTester, a patch instance with id 1846:
Spawn 1 instances, now Total 1992
Counter: 1993
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
have_read_stdin = 1;


BasicTester, a patch instance with id 1847:
Spawn 1 instances, now Total 1993
Counter: 1994
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
xalloc_die();
have_read_stdin = 1;


BasicTester, a patch instance with id 1848:
Spawn 1 instances, now Total 1994
Counter: 1995
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
have_read_stdin = 1;


BasicTester, a patch instance with id 1849:
Spawn 1 instances, now Total 1995
Counter: 1996
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component((file)), "bug-coreutils@gnu.org");
have_read_stdin = 1;


BasicTester, a patch instance with id 1850:
Spawn 1 instances, now Total 1996
Counter: 1997
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
have_read_stdin = 1;


BasicTester, a patch instance with id 1851:
Spawn 1 instances, now Total 1997
Counter: 1998
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
stream = fopen((file), "r");
have_read_stdin = 1;


BasicTester, a patch instance with id 1852:
Spawn 1 instances, now Total 1998
Counter: 1999
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
stream = fopen(file, "r");
have_read_stdin = 1;


BasicTester, a patch instance with id 1853:
Spawn 1 instances, now Total 1999
Going to sync the batch tester, clear all existing tasks!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 135:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 128:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 129:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 131:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 132:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1652:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 130:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 127:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 138:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 137:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 136:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1538 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1539 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1540 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x338d6a0 id 124 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1541 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1542 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 123:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1426:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 140:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 141:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1801:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1846:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1847:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1848:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1849:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1850:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1851:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1852:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1853:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 144:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1842:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1843:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1844:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 143:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1845:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1841:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2000
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
stream = (stream);
have_read_stdin = 1;


BasicTester, a patch instance with id 1854:
Spawn 1 instances, now Total 2000
Counter: 2001
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
have_read_stdin = 1;


BasicTester, a patch instance with id 1855:
Spawn 1 instances, now Total 2001
Counter: 2002
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
have_read_stdin = 1;


BasicTester, a patch instance with id 1856:
Spawn 1 instances, now Total 2002
Counter: 2003
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
have_read_stdin = 1;


BasicTester, a patch instance with id 1857:
Spawn 1 instances, now Total 2003
Counter: 2004
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component((file)));
have_read_stdin = 1;


BasicTester, a patch instance with id 1858:
Spawn 1 instances, now Total 2004
Counter: 2005
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
have_read_stdin = 1;


BasicTester, a patch instance with id 1859:
Spawn 1 instances, now Total 2005
Counter: 2006
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
have_read_stdin = 1;


BasicTester, a patch instance with id 1860:
Spawn 1 instances, now Total 2006
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1860:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2007
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nDisplay values are in units of the first available SIZE from --block-size,\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\n"), (file));
have_read_stdin = 1;


BasicTester, a patch instance with id 1861:
Spawn 1 instances, now Total 2007
Counter: 2008
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), (file));
have_read_stdin = 1;


BasicTester, a patch instance with id 1862:
Spawn 1 instances, now Total 2008
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1862:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2009
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
have_read_stdin = 1;


BasicTester, a patch instance with id 1863:
Spawn 1 instances, now Total 2009
Counter: 2010
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component((file)));
have_read_stdin = 1;


BasicTester, a patch instance with id 1864:
Spawn 1 instances, now Total 2010
Counter: 2011
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fwrite_unlocked(output_delimiter_string, sizeof(char), output_delimiter_length, (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1865:
Spawn 1 instances, now Total 2011
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1854:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1855:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1856:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1857:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1858:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1859:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1861:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1863:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1864:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1865:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2012
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
have_read_stdin = 1;


BasicTester, a patch instance with id 1866:
Spawn 1 instances, now Total 2012
Counter: 2013
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
have_read_stdin = 1;


BasicTester, a patch instance with id 1867:
Spawn 1 instances, now Total 2013
Counter: 2014
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1868:
Spawn 1 instances, now Total 2014
Counter: 2015
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
have_read_stdin = 1;


BasicTester, a patch instance with id 1869:
Spawn 1 instances, now Total 2015
Counter: 2016
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1870:
Spawn 1 instances, now Total 2016
Counter: 2017
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
have_read_stdin = 1;


BasicTester, a patch instance with id 1871:
Spawn 1 instances, now Total 2017
Counter: 2018
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
have_read_stdin = 1;


BasicTester, a patch instance with id 1872:
Spawn 1 instances, now Total 2018
Counter: 2019
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1873:
Spawn 1 instances, now Total 2019
Counter: 2020
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1874:
Spawn 1 instances, now Total 2020
Counter: 2021
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1875:
Spawn 1 instances, now Total 2021
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1866 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1867:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1868:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1869:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1870:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1871:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1872:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1873:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1874:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1875:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2022
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
have_read_stdin = 1;


BasicTester, a patch instance with id 1876:
Spawn 1 instances, now Total 2022
Counter: 2023
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
have_read_stdin = 1;


BasicTester, a patch instance with id 1877:
Spawn 1 instances, now Total 2023
Counter: 2024
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
have_read_stdin = 1;


BasicTester, a patch instance with id 1878:
Spawn 1 instances, now Total 2024
Counter: 2025
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
have_read_stdin = 1;


BasicTester, a patch instance with id 1879:
Spawn 1 instances, now Total 2025
Counter: 2026
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1880:
Spawn 1 instances, now Total 2026
Counter: 2027
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1881:
Spawn 1 instances, now Total 2027
Counter: 2028
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
have_read_stdin = 1;


BasicTester, a patch instance with id 1882:
Spawn 1 instances, now Total 2028
Counter: 2029
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
have_read_stdin = 1;


BasicTester, a patch instance with id 1883:
Spawn 1 instances, now Total 2029
Counter: 2030
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1884:
Spawn 1 instances, now Total 2030
Counter: 2031
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1885:
Spawn 1 instances, now Total 2031
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1876:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1877:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1878:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1879:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1880:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1881:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1882:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1883:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1884:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1885:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2032
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
have_read_stdin = 1;


BasicTester, a patch instance with id 1886:
Spawn 1 instances, now Total 2032
Counter: 2033
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1887:
Spawn 1 instances, now Total 2033
Counter: 2034
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (rpl_fclose(stream) == (-1)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
have_read_stdin = 1;


BasicTester, a patch instance with id 1888:
Spawn 1 instances, now Total 2034
Counter: 2035
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (stream == ((void *)0)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
have_read_stdin = 1;


BasicTester, a patch instance with id 1889:
Spawn 1 instances, now Total 2035
Counter: 2036
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
have_read_stdin = 1;


BasicTester, a patch instance with id 1890:
Spawn 1 instances, now Total 2036
Counter: 2037
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
have_read_stdin = 1;


BasicTester, a patch instance with id 1891:
Spawn 1 instances, now Total 2037
Counter: 2038
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (ferror_unlocked(stream)) {
    error(0, (*__errno_location()), "%s", file);
    return 0;
}
have_read_stdin = 1;


BasicTester, a patch instance with id 1892:
Spawn 1 instances, now Total 2038
Counter: 2039
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
have_read_stdin = 1;


BasicTester, a patch instance with id 1893:
Spawn 1 instances, now Total 2039
Counter: 2040
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
have_read_stdin = 1;


BasicTester, a patch instance with id 1894:
Spawn 1 instances, now Total 2040
Counter: 2041
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1895:
Spawn 1 instances, now Total 2041
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1886:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1887:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1888:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1889:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1890:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1891:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1892:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1893:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1894:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1895:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2042
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
have_read_stdin = 1;


BasicTester, a patch instance with id 1896:
Spawn 1 instances, now Total 2042
Counter: 2043
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise(stream, FADVISE_SEQUENTIAL);
have_read_stdin = 1;


BasicTester, a patch instance with id 1897:
Spawn 1 instances, now Total 2043
Counter: 2044
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1898:
Spawn 1 instances, now Total 2044
Counter: 2045
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nMandatory arguments to long options are mandatory for short options too.\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1899:
Spawn 1 instances, now Total 2045
Counter: 2046
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1900:
Spawn 1 instances, now Total 2046
Counter: 2047
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
have_read_stdin = 1;


BasicTester, a patch instance with id 1901:
Spawn 1 instances, now Total 2047
Counter: 2048
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("\nSIZE is an integer and optional unit (example: 10M is 10*1024*1024).  Units\nare K, M, G, T, P, E, Z, Y (powers of 1024) or KB, MB, ... (powers of 1000).\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1902:
Spawn 1 instances, now Total 2048
Counter: 2049
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n\nWith no FILE, or when FILE is -, read standard input.\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1903:
Spawn 1 instances, now Total 2049
Counter: 2050
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("General help using GNU software: <http://www.gnu.org/gethelp/>\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1904:
Spawn 1 instances, now Total 2050
Counter: 2051
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("Print selected parts of lines from each FILE to standard output.\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1905:
Spawn 1 instances, now Total 2051
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1896:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1897:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1898:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1899:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1900:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1901:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1902:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1903:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1904:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1905:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2052
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1906:
Spawn 1 instances, now Total 2052
Counter: 2053
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --help     display this help and exit\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1907:
Spawn 1 instances, now Total 2053
Counter: 2054
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1908:
Spawn 1 instances, now Total 2054
Counter: 2055
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1909:
Spawn 1 instances, now Total 2055
Counter: 2056
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --version  output version information and exit\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1910:
Spawn 1 instances, now Total 2056
Counter: 2057
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fprintf((stream), gettext("Try '%s --help' for more information.\n"), program_name);
have_read_stdin = 1;


BasicTester, a patch instance with id 1911:
Spawn 1 instances, now Total 2057
Counter: 2058
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fputs_unlocked(gettext("      --complement        complement the set of selected bytes, characters\n                            or fields\n"), (stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1912:
Spawn 1 instances, now Total 2058
Counter: 2059
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1913:
Spawn 1 instances, now Total 2059
Counter: 2060
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1914:
Spawn 1 instances, now Total 2060
Counter: 2061
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_NORMAL));
have_read_stdin = 1;


BasicTester, a patch instance with id 1915:
Spawn 1 instances, now Total 2061
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1906:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1907:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1908:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1909:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1910:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1911:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1912:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1913:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1914:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1915:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2062
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_SEQUENTIAL));
have_read_stdin = 1;


BasicTester, a patch instance with id 1916:
Spawn 1 instances, now Total 2062
Counter: 2063
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_WILLNEED));
have_read_stdin = 1;


BasicTester, a patch instance with id 1917:
Spawn 1 instances, now Total 2063
Counter: 2064
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_RANDOM));
have_read_stdin = 1;


BasicTester, a patch instance with id 1918:
Spawn 1 instances, now Total 2064
Counter: 2065
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise((stream), FADVISE_SEQUENTIAL);
have_read_stdin = 1;


BasicTester, a patch instance with id 1919:
Spawn 1 instances, now Total 2065
Counter: 2066
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_DONTNEED));
have_read_stdin = 1;


BasicTester, a patch instance with id 1920:
Spawn 1 instances, now Total 2066
Counter: 2067
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
fadvise(stream, (FADVISE_NOREUSE));
have_read_stdin = 1;


BasicTester, a patch instance with id 1921:
Spawn 1 instances, now Total 2067
Counter: 2068
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "%s", (file));
have_read_stdin = 1;


BasicTester, a patch instance with id 1922:
Spawn 1 instances, now Total 2068
Counter: 2069
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
exit(0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1923:
Spawn 1 instances, now Total 2069
Counter: 2070
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1924:
Spawn 1 instances, now Total 2070
Counter: 2071
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1925:
Spawn 1 instances, now Total 2071
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1916:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1917:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1918:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1919:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1920:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1921:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1922:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1923:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1924:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1925:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2072
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
exit(1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1926:
Spawn 1 instances, now Total 2072
Counter: 2073
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "%s", file);
have_read_stdin = 1;


BasicTester, a patch instance with id 1927:
Spawn 1 instances, now Total 2073
Counter: 2074
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
have_read_stdin = 1;


BasicTester, a patch instance with id 1928:
Spawn 1 instances, now Total 2074
Counter: 2075
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked((stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1929:
Spawn 1 instances, now Total 2075
Counter: 2076
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
delim = (-1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1930:
Spawn 1 instances, now Total 2076
Counter: 2077
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
emit_mandatory_arg_note();
have_read_stdin = 1;


BasicTester, a patch instance with id 1931:
Spawn 1 instances, now Total 2077
Counter: 2078
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
eol_range_start = (-1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1932:
Spawn 1 instances, now Total 2078
Counter: 2079
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1933:
Spawn 1 instances, now Total 2079
Counter: 2080
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
emit_try_help();
have_read_stdin = 1;


BasicTester, a patch instance with id 1934:
Spawn 1 instances, now Total 2080
Counter: 2081
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
delim = (0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1935:
Spawn 1 instances, now Total 2081
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1926:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1927:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1928:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1929:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1930:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1931:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1932:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1933:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1934:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1935:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2082
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
delim = (1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1936:
Spawn 1 instances, now Total 2082
Counter: 2083
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
have_read_stdin = 1;


BasicTester, a patch instance with id 1937:
Spawn 1 instances, now Total 2083
Counter: 2084
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
clearerr_unlocked(stream);
have_read_stdin = 1;


BasicTester, a patch instance with id 1938:
Spawn 1 instances, now Total 2084
Counter: 2085
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
cut_stream((stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1939:
Spawn 1 instances, now Total 2085
Counter: 2086
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
delim = '\t';
have_read_stdin = 1;


BasicTester, a patch instance with id 1940:
Spawn 1 instances, now Total 2086
Counter: 2087
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
delim = '\x00';
have_read_stdin = 1;


BasicTester, a patch instance with id 1941:
Spawn 1 instances, now Total 2087
Counter: 2088
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
cut_stream(stream);
have_read_stdin = 1;


BasicTester, a patch instance with id 1942:
Spawn 1 instances, now Total 2088
Counter: 2089
Batcher Size:7
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
cut_bytes((stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1943:
Spawn 1 instances, now Total 2089
Counter: 2090
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
cut_fields((stream));
have_read_stdin = 1;


BasicTester, a patch instance with id 1944:
Spawn 1 instances, now Total 2090
Counter: 2091
Batcher Size:9
Preprocess the following candidate with CondTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(have_read_stdin, stream, file)))
    have_read_stdin = 1;


CondTester, a patch instance with id 145:
Spawn 1 instances, now Total 2091
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1936:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1937:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1938:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1939:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1940:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1941:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1942:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1943:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1944:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 145:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2092
Batcher Size:0
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = 0;
have_read_stdin = 1;


BasicTester, a patch instance with id 1945:
Spawn 1 instances, now Total 2092
Counter: 2093
Batcher Size:1
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
atexit(close_stdout);
have_read_stdin = 1;


BasicTester, a patch instance with id 1946:
Spawn 1 instances, now Total 2093
Counter: 2094
Batcher Size:2
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
bindtextdomain("coreutils", "/usr/local/share/locale");
have_read_stdin = 1;


BasicTester, a patch instance with id 1947:
Spawn 1 instances, now Total 2094
Counter: 2095
Batcher Size:3
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
(file)++;
have_read_stdin = 1;


BasicTester, a patch instance with id 1948:
Spawn 1 instances, now Total 2095
Counter: 2096
Batcher Size:4
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (-1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1949:
Spawn 1 instances, now Total 2096
Counter: 2097
Batcher Size:5
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (0);
have_read_stdin = 1;


BasicTester, a patch instance with id 1950:
Spawn 1 instances, now Total 2097
Counter: 2098
Batcher Size:6
Preprocess the following candidate with BasicTester:
Priority 4954
At location src/cut.c:730
--Src File: src/cut.c
Fragment 0:
(*__errno_location()) = (1);
have_read_stdin = 1;


BasicTester, a patch instance with id 1951:
Spawn 1 instances, now Total 2098
Counter: 2099
Batcher Size:7
Preprocess the following candidate with CondTester:
Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(ok, argc, argv, output_delimiter_length, output_delimiter_string, range_start_ht, delim, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
        ok = cut_file("-");
}


CondTester, a patch instance with id 146:
Spawn 1 instances, now Total 2099
Counter: 2100
Batcher Size:8
Preprocess the following candidate with BasicTester:
Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    ok = dot_or_dotdot("-");
}


BasicTester, a patch instance with id 1952:
Spawn 1 instances, now Total 2100
Counter: 2101
Batcher Size:9
Preprocess the following candidate with BasicTester:
Priority 4951
At location src/cut.c:887
--Src File: src/cut.c
Fragment 0:
{
    ok = set_fields("-");
}


BasicTester, a patch instance with id 1953:
Spawn 1 instances, now Total 2101
Counter: 2102
Batcher Size:10
Preprocess the following candidate with CondTester:
Priority 4950
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)) && (optind == argc))
    ok = cut_file("-");
else
    for (ok = 1; optind < argc; optind++) 
        ok &= cut_file(argv[optind]);


CondTester, a patch instance with id 147:
Spawn 1 instances, now Total 2102
Counter: 2103
Batcher Size:11
Preprocess the following candidate with CondTester:
Priority 4950
At location src/cut.c:886
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(argc, ok, output_delimiter_length, argv, output_delimiter_string, delim, range_start_ht, have_read_stdin, delim_specified, operating_mode, spec_list_string, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    if (optind == argc)
        ok = cut_file("-");
    else
        for (ok = 1; optind < argc; optind++) 
            ok &= cut_file(argv[optind]);


CondTester, a patch instance with id 148:
Spawn 1 instances, now Total 2103
Counter: 2104
Batcher Size:12
Preprocess the following candidate with CondTester:
Priority 4949
At location src/cut.c:877
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(output_delimiter_string, delim, delim_specified, output_delimiter_length, argc, operating_mode, ok, spec_list_string, argv, range_start_ht, have_read_stdin, output_delimiter_specified, suppress_non_delimited, Version, complement, optc)))
    if (output_delimiter_string == ((void *)0)) {
        static char dummy[2];
        dummy[0] = delim;
        dummy[1] = '\x00';
        output_delimiter_string = dummy;
        output_delimiter_length = 1;
    }


CondTester, a patch instance with id 149:
Spawn 1 instances, now Total 2104
Counter: 2105
Batcher Size:13
Preprocess the following candidate with CondTester:
Priority 4948
At location src/cut.c:875
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(delim, delim_specified, output_delimiter_string, operating_mode, output_delimiter_length, spec_list_string, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
        delim = '\t';
}


CondTester, a patch instance with id 150:
Spawn 1 instances, now Total 2105
Counter: 2106
Batcher Size:14
Preprocess the following candidate with CondTester:
Priority 4947
At location src/cut.c:874
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(delim_specified, delim, output_delimiter_string, operating_mode, spec_list_string, output_delimiter_length, argc, ok, range_start_ht, argv, output_delimiter_specified, have_read_stdin, suppress_non_delimited, Version, complement, optc)))
    if (!delim_specified)
        delim = '\t';


CondTester, a patch instance with id 151:
Spawn 1 instances, now Total 2106
Counter: 2107
Batcher Size:15
Preprocess the following candidate with CondTester:
Priority 4946
At location src/cut.c:539
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(field_found, rp, eol_range_start, max_range_endpoint, complement, output_delimiter_specified, i, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    return field_found;


CondTester, a patch instance with id 152:
Spawn 1 instances, now Total 2107
Counter: 2108
Batcher Size:16
Preprocess the following candidate with BasicTester:
Priority 4945
At location src/cut.c:537
--Src File: src/cut.c
Fragment 0:
timer_getoverrun(rp);


BasicTester, a patch instance with id 1954:
Spawn 1 instances, now Total 2108
Counter: 2109
Batcher Size:17
Preprocess the following candidate with BasicTester:
Priority 4945
At location src/cut.c:537
--Src File: src/cut.c
Fragment 0:
cfree(rp);


BasicTester, a patch instance with id 1955:
Spawn 1 instances, now Total 2109
Counter: 2110
Batcher Size:18
Preprocess the following candidate with BasicTester:
Priority 4945
At location src/cut.c:537
--Src File: src/cut.c
Fragment 0:
brk(rp);


BasicTester, a patch instance with id 1956:
Spawn 1 instances, now Total 2110
Counter: 2111
Batcher Size:19
Preprocess the following candidate with CondTester:
Priority 4945
At location src/cut.c:537
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(rp, field_found, eol_range_start, max_range_endpoint, complement, output_delimiter_specified, i, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    free(rp);


CondTester, a patch instance with id 153:
Spawn 1 instances, now Total 2111
Counter: 2112
Batcher Size:20
Preprocess the following candidate with BasicTester:
Priority 4945
At location src/cut.c:537
--Src File: src/cut.c
Fragment 0:
timer_delete(rp);


BasicTester, a patch instance with id 1957:
Spawn 1 instances, now Total 2112
Counter: 2113
Batcher Size:21
Preprocess the following candidate with CondTester:
Priority 4944
At location src/cut.c:253
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(i, ent_from_table, range_start_ht)))
    return;
(((size_t)ent_from_table == i) ? (void)(0) : __assert_fail("(size_t) ent_from_table == i", "src/cut.c", 253, __PRETTY_FUNCTION__));


CondTester, a patch instance with id 154:
Spawn 1 instances, now Total 2113
Counter: 2114
Batcher Size:22
Preprocess the following candidate with CondTester:
Priority 4944
At location src/cut.c:253
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(i, ent_from_table, range_start_ht)))
    (((size_t)ent_from_table == i) ? (void)(0) : __assert_fail("(size_t) ent_from_table == i", "src/cut.c", 253, __PRETTY_FUNCTION__));


CondTester, a patch instance with id 155:
Spawn 1 instances, now Total 2114
Counter: 2115
Batcher Size:23
Preprocess the following candidate with CondTester:
Priority 4943
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(ent_from_table, i, range_start_ht)) && (ent_from_table == ((void *)0))) {
    xalloc_die();
}


CondTester, a patch instance with id 156:
Spawn 1 instances, now Total 2115
Counter: 2116
Batcher Size:24
Preprocess the following candidate with CondTester:
Priority 4943
At location src/cut.c:248
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(ent_from_table, i, range_start_ht)))
    if (ent_from_table == ((void *)0)) {
        xalloc_die();
    }


CondTester, a patch instance with id 157:
Spawn 1 instances, now Total 2116
Counter: 2117
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    is_range_start_index(eol_range_start);
}


BasicTester, a patch instance with id 1958:
Spawn 1 instances, now Total 2117
Counter: 2118
Batcher Size:26
Preprocess the following candidate with CondTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(eol_range_start, max_range_endpoint, rp, complement, field_found, output_delimiter_specified, i, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
        mark_range_start(eol_range_start);
}


CondTester, a patch instance with id 158:
Spawn 1 instances, now Total 2118
Counter: 2119
Batcher Size:27
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    malloc(eol_range_start);
}


BasicTester, a patch instance with id 1959:
Spawn 1 instances, now Total 2119
Counter: 2120
Batcher Size:28
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    xcharalloc(eol_range_start);
}


BasicTester, a patch instance with id 1960:
Spawn 1 instances, now Total 2120
Counter: 2121
Batcher Size:29
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    mark_printable_field(eol_range_start);
}


BasicTester, a patch instance with id 1961:
Spawn 1 instances, now Total 2121
Counter: 2122
Batcher Size:30
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    is_printable_field(eol_range_start);
}


BasicTester, a patch instance with id 1962:
Spawn 1 instances, now Total 2122
Counter: 2123
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    xcharalloc(eol_range_start);
}


BasicTester, a patch instance with id 1963:
Spawn 1 instances, now Total 2123
Counter: 2124
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    malloc(eol_range_start);
}


BasicTester, a patch instance with id 1964:
Spawn 1 instances, now Total 2124
Counter: 2125
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    xmalloc(eol_range_start);
}


BasicTester, a patch instance with id 1965:
Spawn 1 instances, now Total 2125
Counter: 2126
Batcher Size:34
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    xzalloc(eol_range_start);
}


BasicTester, a patch instance with id 1966:
Spawn 1 instances, now Total 2126
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1958:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 158:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1959:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1960:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1961:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1962:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1963:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1964:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1965:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1966:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2127
Batcher Size:25
Preprocess the following candidate with BasicTester:
Priority 4941
At location src/cut.c:535
--Src File: src/cut.c
Fragment 0:
{
    valloc(eol_range_start);
}


BasicTester, a patch instance with id 1967:
Spawn 1 instances, now Total 2127
Counter: 2128
Batcher Size:26
Preprocess the following candidate with CondTester:
Priority 4940
At location src/cut.c:531
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(output_delimiter_specified, complement, eol_range_start, max_range_endpoint, rp, i, field_found, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
        mark_range_start(eol_range_start);


CondTester, a patch instance with id 159:
Spawn 1 instances, now Total 2128
Counter: 2129
Batcher Size:27
Preprocess the following candidate with CondTester:
Priority 4940
At location src/cut.c:531
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(output_delimiter_specified, complement, eol_range_start, max_range_endpoint, rp, i, field_found, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)) && (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start)))
    mark_range_start(eol_range_start);


CondTester, a patch instance with id 160:
Spawn 1 instances, now Total 2129
Counter: 2130
Batcher Size:28
Preprocess the following candidate with CondTester:
Priority 4939
At location src/cut.c:260
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(i, n, printable_field)))
    printable_field[n] |= (1 << (i % 8));


CondTester, a patch instance with id 161:
Spawn 1 instances, now Total 2130
Counter: 2131
Batcher Size:29
Preprocess the following candidate with CondTester:
Priority 4937
At location src/cut.c:527
--Src File: src/cut.c
Fragment 0:
if ((__abst_hole(rp, i, rp[i].lo, rp[i].hi, rsi_candidate, output_delimiter_specified, complement, eol_range_start, max_range_endpoint, field_found, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    break;
for (size_t j = rp[i].lo; j <= rp[i].hi; j++) 
    mark_printable_field(j);


CondTester, a patch instance with id 162:
Spawn 1 instances, now Total 2131
Counter: 2132
Batcher Size:30
Preprocess the following candidate with CondTester:
Priority 4937
At location src/cut.c:527
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(rp, i, rp[i].lo, rp[i].hi, rsi_candidate, output_delimiter_specified, complement, eol_range_start, max_range_endpoint, field_found, n_rp, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    for (size_t j = rp[i].lo; j <= rp[i].hi; j++) 
        mark_printable_field(j);


CondTester, a patch instance with id 163:
Spawn 1 instances, now Total 2132
Counter: 2133
Batcher Size:31
Preprocess the following candidate with BasicTester:
Priority 4937
At location src/cut.c:527
--Src File: src/cut.c
Fragment 0:
memset(&rp[i], 0, sizeof (*(&rp[i])));
for (size_t j = rp[i].lo; j <= rp[i].hi; j++) 
    mark_printable_field(j);


BasicTester, a patch instance with id 1968:
Spawn 1 instances, now Total 2133
Counter: 2134
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    xcharalloc(rsi_candidate);
}


BasicTester, a patch instance with id 1969:
Spawn 1 instances, now Total 2134
Counter: 2135
Batcher Size:33
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    is_range_start_index(rsi_candidate);
}


BasicTester, a patch instance with id 1970:
Spawn 1 instances, now Total 2135
Counter: 2136
Batcher Size:34
Preprocess the following candidate with CondTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    if (!(__abst_hole(rsi_candidate, rp, i, output_delimiter_specified, complement, eol_range_start, max_range_endpoint, n_rp, field_found, printable_field, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
        mark_range_start(rsi_candidate);
}


CondTester, a patch instance with id 164:
Spawn 1 instances, now Total 2136
Counter: 2137
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    xcharalloc(rsi_candidate);
}


BasicTester, a patch instance with id 1971:
Spawn 1 instances, now Total 2137
Counter: 2138
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    mark_printable_field(rsi_candidate);
}


BasicTester, a patch instance with id 1972:
Spawn 1 instances, now Total 2138
Counter: 2139
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    is_printable_field(rsi_candidate);
}


BasicTester, a patch instance with id 1973:
Spawn 1 instances, now Total 2139
Counter: 2140
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    valloc(rsi_candidate);
}


BasicTester, a patch instance with id 1974:
Spawn 1 instances, now Total 2140
Counter: 2141
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    malloc(rsi_candidate);
}


BasicTester, a patch instance with id 1975:
Spawn 1 instances, now Total 2141
Counter: 2142
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    malloc(rsi_candidate);
}


BasicTester, a patch instance with id 1976:
Spawn 1 instances, now Total 2142
Counter: 2143
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    xmalloc(rsi_candidate);
}


BasicTester, a patch instance with id 1977:
Spawn 1 instances, now Total 2143
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1969:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1970:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 164:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1971:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1972:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1973:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1974:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1975:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1976:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1977:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2144
Batcher Size:32
Preprocess the following candidate with BasicTester:
Priority 4936
At location src/cut.c:525
--Src File: src/cut.c
Fragment 0:
{
    xzalloc(rsi_candidate);
}


BasicTester, a patch instance with id 1978:
Spawn 1 instances, now Total 2144
Counter: 2145
Batcher Size:33
Preprocess the following candidate with CondTester:
Priority 4935
At location src/cut.c:523
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(output_delimiter_specified, rp, i, rsi_candidate, complement, rp[i].lo, rp[i].hi, eol_range_start, n_rp, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    if (output_delimiter_specified && !is_printable_field(rsi_candidate))
        mark_range_start(rsi_candidate);


CondTester, a patch instance with id 165:
Spawn 1 instances, now Total 2145
Counter: 2146
Batcher Size:34
Preprocess the following candidate with CondTester:
Priority 4935
At location src/cut.c:523
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(output_delimiter_specified, rp, i, rsi_candidate, complement, rp[i].lo, rp[i].hi, eol_range_start, n_rp, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)) && (output_delimiter_specified && !is_printable_field(rsi_candidate)))
    mark_range_start(rsi_candidate);


CondTester, a patch instance with id 166:
Spawn 1 instances, now Total 2146
Counter: 2147
Batcher Size:35
Preprocess the following candidate with BasicTester:
Priority 4934
At location src/cut.c:522
--Src File: src/cut.c
Fragment 0:
memset(&rp[i], 0, sizeof (*(&rp[i])));
size_t rsi_candidate = complement ? rp[i].hi + 1 : rp[i].lo;


BasicTester, a patch instance with id 1979:
Spawn 1 instances, now Total 2147
Counter: 2148
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
in_digits = (field_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1980:
Spawn 1 instances, now Total 2148
Counter: 2149
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = 1;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1981:
Spawn 1 instances, now Total 2149
Counter: 2150
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1982:
Spawn 1 instances, now Total 2150
Counter: 2151
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1983:
Spawn 1 instances, now Total 2151
Counter: 2152
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (n_rp_allocated);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1984:
Spawn 1 instances, now Total 2152
Counter: 2153
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (value);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1985:
Spawn 1 instances, now Total 2153
Counter: 2154
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1986:
Spawn 1 instances, now Total 2154
Counter: 2155
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
xalloc_die();
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1987:
Spawn 1 instances, now Total 2155
Counter: 2156
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (10);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1988:
Spawn 1 instances, now Total 2156
Counter: 2157
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (9);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1989:
Spawn 1 instances, now Total 2157
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1980:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1981:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1982:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1983:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1984:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1985:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1986:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1987:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1988:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1989:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2158
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (initial);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1990:
Spawn 1 instances, now Total 2158
Counter: 2159
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (n_rp);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1991:
Spawn 1 instances, now Total 2159
Counter: 2160
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (i);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1992:
Spawn 1 instances, now Total 2160
Counter: 2161
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (8);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1993:
Spawn 1 instances, now Total 2161
Counter: 2162
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1994:
Spawn 1 instances, now Total 2162
Counter: 2163
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
rhs_specified = (dash_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1995:
Spawn 1 instances, now Total 2163
Counter: 2164
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (dash_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1996:
Spawn 1 instances, now Total 2164
Counter: 2165
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (rhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1997:
Spawn 1 instances, now Total 2165
Counter: 2166
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
textdomain("coreutils");
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1998:
Spawn 1 instances, now Total 2166
Counter: 2167
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
value = (-1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 1999:
Spawn 1 instances, now Total 2167
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1990:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1991:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1992:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1993:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1994:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1995:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1996:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1997:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1998:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1999:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2168
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2000:
Spawn 1 instances, now Total 2168
Counter: 2169
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (field_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2001:
Spawn 1 instances, now Total 2169
Counter: 2170
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (in_digits);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2002:
Spawn 1 instances, now Total 2170
Counter: 2171
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
suppress_non_delimited = (lhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2003:
Spawn 1 instances, now Total 2171
Counter: 2172
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
rhs_specified = (field_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2004:
Spawn 1 instances, now Total 2172
Counter: 2173
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
rhs_specified = (rhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2005:
Spawn 1 instances, now Total 2173
Counter: 2174
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
rhs_specified = 1;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2006:
Spawn 1 instances, now Total 2174
Counter: 2175
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
setlocale(6, "");
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2007:
Spawn 1 instances, now Total 2175
Counter: 2176
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
rhs_specified = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2008:
Spawn 1 instances, now Total 2176
Counter: 2177
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
rhs_specified = (in_digits);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2009:
Spawn 1 instances, now Total 2177
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2000:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2001:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2002:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2003:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2004:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2005:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2006:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2007:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2008:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2009:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2178
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
rhs_specified = (lhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2010:
Spawn 1 instances, now Total 2178
Counter: 2179
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("%s home page: <%s>\n"), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2011:
Spawn 1 instances, now Total 2179
Counter: 2180
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), program_name);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2012:
Spawn 1 instances, now Total 2180
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 2012:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2181
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
putchar_unlocked('\n');
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2013:
Spawn 1 instances, now Total 2181
Counter: 2182
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
qsort(rp, n_rp, sizeof (rp[0]), compare_ranges);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2014:
Spawn 1 instances, now Total 2182
Counter: 2183
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
range_start_ht = hash_initialize(31, ((void *)0), hash_int, hash_compare_ints, ((void *)0));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2015:
Spawn 1 instances, now Total 2183
Counter: 2184
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
qsort((rp), n_rp, sizeof (rp[0]), compare_ranges);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2016:
Spawn 1 instances, now Total 2184
Counter: 2185
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nDisplay values are in units of the first available SIZE from --block-size,\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\n"), (fieldstr));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2017:
Spawn 1 instances, now Total 2185
Counter: 2186
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component((fieldstr)), "bug-coreutils@gnu.org");
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2018:
Spawn 1 instances, now Total 2186
Counter: 2187
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("\nReport %s bugs to %s\n"), last_component(program_name), "bug-coreutils@gnu.org");
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2019:
Spawn 1 instances, now Total 2187
Counter: 2188
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component((fieldstr)));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2020:
Spawn 1 instances, now Total 2188
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2010:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2011:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2013:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2014:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2015:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2016:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2017:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2018:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2019:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2020:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2189
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("For complete documentation, run: info coreutils '%s invocation'\n"), last_component(program_name));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2021:
Spawn 1 instances, now Total 2189
Counter: 2190
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component(program_name));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2022:
Spawn 1 instances, now Total 2190
Counter: 2191
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("Usage: %s OPTION... [FILE]...\n"), (fieldstr));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2023:
Spawn 1 instances, now Total 2191
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 2023:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2192
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
printf(gettext("Report %s translation bugs to <http://translationproject.org/team/>\n"), last_component((fieldstr)));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2024:
Spawn 1 instances, now Total 2192
Counter: 2193
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
in_digits = (in_digits);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2025:
Spawn 1 instances, now Total 2193
Counter: 2194
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (i);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2026:
Spawn 1 instances, now Total 2194
Counter: 2195
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (undefined_mode);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2027:
Spawn 1 instances, now Total 2195
Counter: 2196
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (8);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2028:
Spawn 1 instances, now Total 2196
Counter: 2197
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (n_rp);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2029:
Spawn 1 instances, now Total 2197
Counter: 2198
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (optarg[0] == '\x00' ? 1 : strlen(optarg));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2030:
Spawn 1 instances, now Total 2198
Counter: 2199
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (value);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2031:
Spawn 1 instances, now Total 2199
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2021:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2022:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2024:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2025:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2026:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2027:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2028:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2029:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2030:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2031:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2200
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (n_rp_allocated);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2032:
Spawn 1 instances, now Total 2200
Counter: 2201
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (9);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2033:
Spawn 1 instances, now Total 2201
Counter: 2202
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (i);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2034:
Spawn 1 instances, now Total 2202
Counter: 2203
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (initial);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2035:
Spawn 1 instances, now Total 2203
Counter: 2204
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = byte_mode;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2036:
Spawn 1 instances, now Total 2204
Counter: 2205
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (-1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2037:
Spawn 1 instances, now Total 2205
Counter: 2206
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2038:
Spawn 1 instances, now Total 2206
Counter: 2207
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (10);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2039:
Spawn 1 instances, now Total 2207
Counter: 2208
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
output_delimiter_length = (0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2040:
Spawn 1 instances, now Total 2208
Counter: 2209
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = field_mode;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2041:
Spawn 1 instances, now Total 2209
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2032:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2033:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2034:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2035:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2036:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2037:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2038:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2039:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2040:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2041:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2210
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = undefined_mode;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2042:
Spawn 1 instances, now Total 2210
Counter: 2211
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (initial);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2043:
Spawn 1 instances, now Total 2211
Counter: 2212
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (-1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2044:
Spawn 1 instances, now Total 2212
Counter: 2213
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (8);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2045:
Spawn 1 instances, now Total 2213
Counter: 2214
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (byte_mode);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2046:
Spawn 1 instances, now Total 2214
Counter: 2215
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (field_mode);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2047:
Spawn 1 instances, now Total 2215
Counter: 2216
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (9);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2048:
Spawn 1 instances, now Total 2216
Counter: 2217
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2049:
Spawn 1 instances, now Total 2217
Counter: 2218
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2050:
Spawn 1 instances, now Total 2218
Counter: 2219
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
operating_mode = (10);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2051:
Spawn 1 instances, now Total 2219
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2042:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2043:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2044:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2045:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2046:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2047:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2048:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2049:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2050:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2051:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2220
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (n_rp);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2052:
Spawn 1 instances, now Total 2220
Counter: 2221
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (rp)[i].hi;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2053:
Spawn 1 instances, now Total 2221
Counter: 2222
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2054:
Spawn 1 instances, now Total 2222
Counter: 2223
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = rp[i].hi;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2055:
Spawn 1 instances, now Total 2223
Counter: 2224
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (value);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2056:
Spawn 1 instances, now Total 2224
Counter: 2225
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (n_rp_allocated);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2057:
Spawn 1 instances, now Total 2225
Counter: 2226
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
in_digits = (lhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2058:
Spawn 1 instances, now Total 2226
Counter: 2227
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (n_rp_allocated);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2059:
Spawn 1 instances, now Total 2227
Counter: 2228
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
lhs_specified = 1;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2060:
Spawn 1 instances, now Total 2228
Counter: 2229
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2061:
Spawn 1 instances, now Total 2229
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2052:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2053:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2054:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2055:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2056:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2057:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2058:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2059:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2060:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2061:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2230
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (8);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2062:
Spawn 1 instances, now Total 2230
Counter: 2231
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (9);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2063:
Spawn 1 instances, now Total 2231
Counter: 2232
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (10);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2064:
Spawn 1 instances, now Total 2232
Counter: 2233
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
mark_range_start(eol_range_start);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2065:
Spawn 1 instances, now Total 2233
Counter: 2234
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (-1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2066:
Spawn 1 instances, now Total 2234
Counter: 2235
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
max_range_endpoint = (0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2067:
Spawn 1 instances, now Total 2235
Counter: 2236
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (value);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2068:
Spawn 1 instances, now Total 2236
Counter: 2237
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
lhs_specified = (in_digits);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2069:
Spawn 1 instances, now Total 2237
Counter: 2238
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
lhs_specified = (rhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2070:
Spawn 1 instances, now Total 2238
Counter: 2239
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
lhs_specified = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2071:
Spawn 1 instances, now Total 2239
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2062:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2063:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2064:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2065:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2066:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2067:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2068:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2069:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2070:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2071:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2240
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
lhs_specified = (lhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2072:
Spawn 1 instances, now Total 2240
Counter: 2241
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
lhs_specified = (dash_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2073:
Spawn 1 instances, now Total 2241
Counter: 2242
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
lhs_specified = (field_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2074:
Spawn 1 instances, now Total 2242
Counter: 2243
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
in_digits = (rhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2075:
Spawn 1 instances, now Total 2243
Counter: 2244
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2076:
Spawn 1 instances, now Total 2244
Counter: 2245
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (i);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2077:
Spawn 1 instances, now Total 2245
Counter: 2246
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (lhs_specified ? value : 1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2078:
Spawn 1 instances, now Total 2246
Counter: 2247
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (n_rp);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2079:
Spawn 1 instances, now Total 2247
Counter: 2248
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (initial);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2080:
Spawn 1 instances, now Total 2248
Counter: 2249
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (10);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2081:
Spawn 1 instances, now Total 2249
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2072:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2073:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2074:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2075:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2076:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2077:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2078:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2079:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2080:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2081:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2250
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (8);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2082:
Spawn 1 instances, now Total 2250
Counter: 2251
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (9);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2083:
Spawn 1 instances, now Total 2251
Counter: 2252
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
in_digits = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2084:
Spawn 1 instances, now Total 2252
Counter: 2253
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
in_digits = 1;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2085:
Spawn 1 instances, now Total 2253
Counter: 2254
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (-1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2086:
Spawn 1 instances, now Total 2254
Counter: 2255
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
initial = (0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2087:
Spawn 1 instances, now Total 2255
Counter: 2256
Batcher Size:42
Preprocess the following candidate with CondTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (!(__abst_hole(rp, i, eol_range_start, rp[i].lo, n_rp, complement, rp[i].hi, output_delimiter_specified, max_range_endpoint, printable_field, field_found, fieldstr, operating_mode, value, lhs_specified, rhs_specified, dash_found, in_digits, n_rp_allocated, initial)))
    if (eol_range_start && eol_range_start <= rp[i].lo)
        continue;


CondTester, a patch instance with id 167:
Spawn 1 instances, now Total 2256
Counter: 2257
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
dash_found = (lhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2088:
Spawn 1 instances, now Total 2257
Counter: 2258
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit_failure = (0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2089:
Spawn 1 instances, now Total 2258
Counter: 2259
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
hash_free(range_start_ht);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2090:
Spawn 1 instances, now Total 2259
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2082:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2083:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2084:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2085:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2086:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2087:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 167:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2088:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2089:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2090:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2260
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (dash_found)
    rhs_specified = 1;
else
    lhs_specified = 1;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2091:
Spawn 1 instances, now Total 2260
Counter: 2261
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (range_start_ht == ((void *)0))
    xalloc_die();
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2092:
Spawn 1 instances, now Total 2261
Counter: 2262
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (rp[i].hi > max_range_endpoint)
    max_range_endpoint = rp[i].hi;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2093:
Spawn 1 instances, now Total 2262
Counter: 2263
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
in_digits = (dash_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2094:
Spawn 1 instances, now Total 2263
Counter: 2264
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (range_start_ht)
    hash_free(range_start_ht);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2095:
Spawn 1 instances, now Total 2264
Counter: 2265
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (eol_range_start == 0 || initial < eol_range_start)
    eol_range_start = initial;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2096:
Spawn 1 instances, now Total 2265
Counter: 2266
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (max_range_endpoint)
    printable_field = xzalloc(max_range_endpoint / 8 + 1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2097:
Spawn 1 instances, now Total 2266
Counter: 2267
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
if (output_delimiter_specified && !complement && eol_range_start && max_range_endpoint && !is_printable_field(eol_range_start))
    mark_range_start(eol_range_start);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2098:
Spawn 1 instances, now Total 2267
Counter: 2268
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (dash_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2099:
Spawn 1 instances, now Total 2268
Counter: 2269
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (lhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2100:
Spawn 1 instances, now Total 2269
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2091:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2092:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2093:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2094:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2095:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2096:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2097:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2098:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2099:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2100:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2270
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2101:
Spawn 1 instances, now Total 2270
Counter: 2271
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
have_read_stdin = 1;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2102:
Spawn 1 instances, now Total 2271
Counter: 2272
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (rhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2103:
Spawn 1 instances, now Total 2272
Counter: 2273
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (field_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2104:
Spawn 1 instances, now Total 2273
Counter: 2274
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
have_read_stdin = (in_digits);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2105:
Spawn 1 instances, now Total 2274
Counter: 2275
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit_failure = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2106:
Spawn 1 instances, now Total 2275
Counter: 2276
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
field_found = (in_digits);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2107:
Spawn 1 instances, now Total 2276
Counter: 2277
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
fieldstr++;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2108:
Spawn 1 instances, now Total 2277
Counter: 2278
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
free(field_1_buffer);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2109:
Spawn 1 instances, now Total 2278
Counter: 2279
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
free(rp);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2110:
Spawn 1 instances, now Total 2279
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2101:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2102:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2103:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2104:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2105:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2106:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2107:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2108:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2109:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2110:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2280
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
free((rp));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2111:
Spawn 1 instances, now Total 2280
Counter: 2281
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
field_found = (lhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2112:
Spawn 1 instances, now Total 2281
Counter: 2282
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
field_found = (rhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2113:
Spawn 1 instances, now Total 2282
Counter: 2283
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
field_found = 1;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2114:
Spawn 1 instances, now Total 2283
Counter: 2284
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit_failure = (10);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2115:
Spawn 1 instances, now Total 2284
Counter: 2285
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit_failure = (9);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2116:
Spawn 1 instances, now Total 2285
Counter: 2286
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
field_found = (dash_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2117:
Spawn 1 instances, now Total 2286
Counter: 2287
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
field_found = (field_found);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2118:
Spawn 1 instances, now Total 2287
Counter: 2288
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
field_1_buffer = ((void *)0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2119:
Spawn 1 instances, now Total 2288
Counter: 2289
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit_failure = (8);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2120:
Spawn 1 instances, now Total 2289
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2111:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2112:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2113:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2114:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2115:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2116:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2117:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2118:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2119:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2120:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2290
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
dash_found = (rhs_specified);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2121:
Spawn 1 instances, now Total 2290
Counter: 2291
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2122:
Spawn 1 instances, now Total 2291
Counter: 2292
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (n_rp_allocated);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2123:
Spawn 1 instances, now Total 2292
Counter: 2293
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "-");
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2124:
Spawn 1 instances, now Total 2293
Counter: 2294
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit(1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2125:
Spawn 1 instances, now Total 2294
Counter: 2295
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit_failure = (-1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2126:
Spawn 1 instances, now Total 2295
Counter: 2296
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
exit(0);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2127:
Spawn 1 instances, now Total 2296
Counter: 2297
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (value);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2128:
Spawn 1 instances, now Total 2297
Counter: 2298
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = initial;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2129:
Spawn 1 instances, now Total 2298
Counter: 2299
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
error(0, (*__errno_location()), "%s", (fieldstr));
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2130:
Spawn 1 instances, now Total 2299
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2121:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2122:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2123:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2124:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2125:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2126:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2127:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2128:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2129:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2130:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Counter: 2300
Batcher Size:36
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2131:
Spawn 1 instances, now Total 2300
Counter: 2301
Batcher Size:37
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (9);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2132:
Spawn 1 instances, now Total 2301
Counter: 2302
Batcher Size:38
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (initial);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2133:
Spawn 1 instances, now Total 2302
Counter: 2303
Batcher Size:39
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (n_rp);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2134:
Spawn 1 instances, now Total 2303
Counter: 2304
Batcher Size:40
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (i);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2135:
Spawn 1 instances, now Total 2304
Counter: 2305
Batcher Size:41
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (10);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2136:
Spawn 1 instances, now Total 2305
Counter: 2306
Batcher Size:42
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
eol_range_start = (8);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2137:
Spawn 1 instances, now Total 2306
Counter: 2307
Batcher Size:43
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
dash_found = 0;
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2138:
Spawn 1 instances, now Total 2307
Counter: 2308
Batcher Size:44
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
delim = (1);
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2139:
Spawn 1 instances, now Total 2308
Counter: 2309
Batcher Size:45
Preprocess the following candidate with BasicTester:
Priority 4933
At location src/cut.c:517
--Src File: src/cut.c
Fragment 0:
emit_ancillary_info();
if (eol_range_start && eol_range_start <= rp[i].lo)
    continue;


BasicTester, a patch instance with id 2140:
Spawn 1 instances, now Total 2309
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 2131:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2132:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Passed Negative Cases with BasicTester
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 41  > __res
Passed Positive Cases
Passed!
BasicTester, Testing instance id 2133:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2134:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2135:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2136:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2137:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2138:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2139:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 2140:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Update best score 4930868.000000
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 156:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 157:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 154:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 155:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 161:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1979:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 165:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 166:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1978:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 162:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 163:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1968:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 159:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Passed Negative Cases wiht CondTestder!
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 41  > __res
Passed Positive Cases
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Collect value failed on case 0!
CondTester, Testing instance id 160:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1967:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1954 failed as well!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1955:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcBasicTester, Testing instance id 1956:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcCondTester, Testing instance id 153:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcSingle building for Tester 0x1ecd290 id 1957 failed as well!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 152:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 1945:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1946:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1947:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1948:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1949:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1950:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1951:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 151:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 150:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 149:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 147:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
CondTester, Testing instance id 148:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 146:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1952:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
BasicTester, Testing instance id 1953:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-ec48bead-be7932e8/tempworkdir 0  > __res
Total cnt of passed cond schemas: 0
Total cnt of cond schemas: 168
Counter: 2310
Batcher Size:0
The found score 4930868.000000 is greater than current score 4933.000000!
Terminate current session!
Generated a patch at candidate schema no 2301
Total cnt of passed cond schemas: 0
Total cnt of cond schemas: 168
Candidate count:0!!
Found a fix! Store to: coreutils-fix-ec48bead-be7932e8src_cut.c
Antipattern stats END: earlyret => 310
Antipattern stats END: errorexit => 47
Antipattern stats END: singlecfg => 3
Repair process ends successfully!
Total 20642 different repair candidate schema!!!!
Total number of compiles: 961
Total number of test eval: 2449
