Initialize the program!
Generating repair candidates!
Processing src/du.c
In dir /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src
BUILDDIR:
BUILDCMD:/home/ubuntu/spr-fast/tools/coreutils-build.py -p /home/ubuntu/spr-fast/benchmarks/coreutils-deps -c -d src/du.c /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src __args >>/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/build.log 2>&1
going to directory /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src
In file included from src/du.c:31:
In file included from /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src/system.h:130:
In file included from ../lib/inttypes.h:41:
/usr/include/inttypes.h:290:8: error: unknown type name 'intmax_t'
extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));
       ^
/usr/include/inttypes.h:290:26: error: unknown type name 'intmax_t'
extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));
                         ^
/usr/include/inttypes.h:293:27: error: unknown type name 'intmax_t'
extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
                          ^
/usr/include/inttypes.h:293:45: error: unknown type name 'intmax_t'
extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
                                            ^
/usr/include/inttypes.h:297:8: error: unknown type name 'intmax_t'
extern intmax_t strtoimax (const char *__restrict __nptr,
       ^
/usr/include/inttypes.h:301:8: error: unknown type name 'uintmax_t'
extern uintmax_t strtoumax (const char *__restrict __nptr,
       ^
/usr/include/inttypes.h:305:8: error: unknown type name 'intmax_t'
extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
       ^
/usr/include/inttypes.h:310:8: error: unknown type name 'uintmax_t'
extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       ^
/usr/include/inttypes.h:323:17: error: unknown type name 'intmax_t'
__extern_inline intmax_t
                ^
/usr/include/inttypes.h:324:1: error: expected identifier or '('
__NTH (strtoimax (const char *__restrict nptr, char **__restrict endptr,
^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:57:22: note: expanded from macro '__NTH'
#  define __NTH(fct)    __attribute__ ((__nothrow__ __LEAF)) fct
                        ^
In file included from src/du.c:31:
In file included from /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src/system.h:130:
In file included from ../lib/inttypes.h:41:
/usr/include/inttypes.h:335:17: error: unknown type name 'uintmax_t'
__extern_inline uintmax_t
                ^
/usr/include/inttypes.h:336:1: error: expected identifier or '('
__NTH (strtoumax (const char *__restrict nptr, char **__restrict endptr,
^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:57:22: note: expanded from macro '__NTH'
#  define __NTH(fct)    __attribute__ ((__nothrow__ __LEAF)) fct
                        ^
In file included from src/du.c:31:
In file included from /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src/system.h:130:
In file included from ../lib/inttypes.h:41:
/usr/include/inttypes.h:347:17: error: unknown type name 'intmax_t'
__extern_inline intmax_t
                ^
/usr/include/inttypes.h:348:1: error: expected identifier or '('
__NTH (wcstoimax (const __gwchar_t *__restrict nptr,
^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:57:22: note: expanded from macro '__NTH'
#  define __NTH(fct)    __attribute__ ((__nothrow__ __LEAF)) fct
                        ^
In file included from src/du.c:31:
In file included from /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src/system.h:130:
In file included from ../lib/inttypes.h:41:
/usr/include/inttypes.h:361:17: error: unknown type name 'uintmax_t'
__extern_inline uintmax_t
                ^
/usr/include/inttypes.h:362:1: error: expected identifier or '('
__NTH (wcstoumax (const __gwchar_t *__restrict nptr,
^
/usr/include/x86_64-linux-gnu/sys/cdefs.h:57:22: note: expanded from macro '__NTH'
#  define __NTH(fct)    __attribute__ ((__nothrow__ __LEAF)) fct
                        ^
In file included from src/du.c:31:
In file included from /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src/system.h:130:
../lib/inttypes.h:57:3: error: "This file assumes that 'int' has exactly 32 bits. Please report your platform and compiler to <bug-gnulib@gnu.org>."
# error "This file assumes that 'int' has exactly 32 bits. Please report your platform and compiler to <bug-gnulib@gnu.org>."
  ^
In file included from src/du.c:31:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src/system.h:176:16: error: unknown type name 'uintmax_t'
select_plural (uintmax_t n)
               ^
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src/src/system.h:500:11: error: unknown type name 'uintptr_t'; did you mean 'intptr_t'?
  typedef uintptr_t word;
          ^~~~~~~~~
          intptr_t
/usr/include/unistd.h:267:20: note: 'intptr_t' declared here
typedef __intptr_t intptr_t;
                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
IsErr:priority 4962
at location src/du.c:420
--src file: src/du.c
fragment 0:
if (!(__abst_hole(info, ent, file, ok, exclude, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
    if (info == 4) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
        ok = 0;
    } else if (info != 6) {
        bool excluded = excluded_file_name(exclude, file);
        if (!excluded) {
            if (info == 11) {
                fts_set(fts, ent, 1);
                const ftsent *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __pretty_function__));
                info = ent->fts_info;
            }
            if (info == 10 || info == 13) {
                error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
                return 0;
            }
            if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
                excluded = 1;
        }
        if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
            if (info == 1) {
                fts_set(fts, ent, 4);
                const ftsent *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __pretty_function__));
            }
            return 1;
        }
        switch (info) {
          case 1:
            return 1;
          case 7:
            error(0, ent->fts_errno, "%s", quote(file));
            ok = 0;
            break;
          case 2:
            if (cycle_warning_required(fts, ent)) {
                do {
                    error(0, 0, dcgettext(((void *)0), "warning: circular directory structure.\nthis almost certainly means that you have a corrupted file system.\nnotify your system manager.\nthe following directory is part of the cycle:\n  %s\n", 5), quote(file));
                } while (0);
                return 0;
            }
            return 1;
        }
    }

....
Skipping error ifguard:Priority 4962
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(info, ent, file, ok, exclude, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
    if (info == 4) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
        ok = 0;
    } else if (info != 6) {
        bool excluded = excluded_file_name(exclude, file);
        if (!excluded) {
            if (info == 11) {
                fts_set(fts, ent, 1);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
                info = ent->fts_info;
            }
            if (info == 10 || info == 13) {
                error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
                return 0;
            }
            if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
                excluded = 1;
        }
        if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
            if (info == 1) {
                fts_set(fts, ent, 4);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
            }
            return 1;
        }
        switch (info) {
          case 1:
            return 1;
          case 7:
            error(0, ent->fts_errno, "%s", quote(file));
            ok = 0;
            break;
          case 2:
            if (cycle_warning_required(fts, ent)) {
                do {
                    error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
                } while (0);
                return 0;
            }
            return 1;
        }
    }

....
Skipping nonlast:Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}

....
IsErr:priority 4963
at location src/du.c:426
--src file: src/du.c
fragment 0:
{
    if (!(__abst_hole(info, ok, file, exclude, ent, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
        if (info != 6) {
            bool excluded = excluded_file_name(exclude, file);
            if (!excluded) {
                if (info == 11) {
                    fts_set(fts, ent, 1);
                    const ftsent *e = fts_read(fts);
                    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __pretty_function__));
                    info = ent->fts_info;
                }
                if (info == 10 || info == 13) {
                    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
                    return 0;
                }
                if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
                    excluded = 1;
            }
            if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
                if (info == 1) {
                    fts_set(fts, ent, 4);
                    const ftsent *e = fts_read(fts);
                    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __pretty_function__));
                }
                return 1;
            }
            switch (info) {
              case 1:
                return 1;
              case 7:
                error(0, ent->fts_errno, "%s", quote(file));
                ok = 0;
                break;
              case 2:
                if (cycle_warning_required(fts, ent)) {
                    do {
                        error(0, 0, dcgettext(((void *)0), "warning: circular directory structure.\nthis almost certainly means that you have a corrupted file system.\nnotify your system manager.\nthe following directory is part of the cycle:\n  %s\n", 5), quote(file));
                    } while (0);
                    return 0;
                }
                return 1;
            }
        }
}

....
Skipping error ifguard:Priority 4963
At location src/du.c:426
--Src File: src/du.c
Fragment 0:
{
    if (!(__abst_hole(info, ok, file, exclude, ent, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
        if (info != 6) {
            bool excluded = excluded_file_name(exclude, file);
            if (!excluded) {
                if (info == 11) {
                    fts_set(fts, ent, 1);
                    const FTSENT *e = fts_read(fts);
                    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
                    info = ent->fts_info;
                }
                if (info == 10 || info == 13) {
                    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
                    return 0;
                }
                if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
                    excluded = 1;
            }
            if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
                if (info == 1) {
                    fts_set(fts, ent, 4);
                    const FTSENT *e = fts_read(fts);
                    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
                }
                return 1;
            }
            switch (info) {
              case 1:
                return 1;
              case 7:
                error(0, ent->fts_errno, "%s", quote(file));
                ok = 0;
                break;
              case 2:
                if (cycle_warning_required(fts, ent)) {
                    do {
                        error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
                    } while (0);
                    return 0;
                }
                return 1;
            }
        }
}

....
Skipping nonlast:Priority -37
At location src/du.c:426
--Src File: src/du.c
Fragment 0:
{
    if (info == 10 || info == 13) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
        return 0;
    }
    if (info != 6) {
        bool excluded = excluded_file_name(exclude, file);
        if (!excluded) {
            if (info == 11) {
                fts_set(fts, ent, 1);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
                info = ent->fts_info;
            }
            if (info == 10 || info == 13) {
                error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
                return 0;
            }
            if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
                excluded = 1;
        }
        if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
            if (info == 1) {
                fts_set(fts, ent, 4);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
            }
            return 1;
        }
        switch (info) {
          case 1:
            return 1;
          case 7:
            error(0, ent->fts_errno, "%s", quote(file));
            ok = 0;
            break;
          case 2:
            if (cycle_warning_required(fts, ent)) {
                do {
                    error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
                } while (0);
                return 0;
            }
            return 1;
        }
    }
}

....
Skipping nonlast:Priority -36
At location src/du.c:428
--Src File: src/du.c
Fragment 0:
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}
bool excluded = excluded_file_name(exclude, file);

....
IsErr:priority 4970
at location src/du.c:429
--src file: src/du.c
fragment 0:
if (!(__abst_hole(excluded, file, exclude, info, ok, fts, ent, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const ftsent *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __pretty_function__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }

....
Skipping error ifguard:Priority 4970
At location src/du.c:429
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(excluded, file, exclude, info, ok, fts, ent, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }

....
Skipping nonlast:Priority 4970
At location src/du.c:429
--Src File: src/du.c
Fragment 0:
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}
if (!excluded) {
    if (info == 11) {
        fts_set(fts, ent, 1);
        const FTSENT *e = fts_read(fts);
        ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
        info = ent->fts_info;
    }
    if (info == 10 || info == 13) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
        return 0;
    }
    if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
        excluded = 1;
}

....
Skipping nonlast:Priority 4971
At location src/du.c:433
--Src File: src/du.c
Fragment 0:
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}
if (info == 11) {
    fts_set(fts, ent, 1);
    const FTSENT *e = fts_read(fts);
    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
    info = ent->fts_info;
}

....
IsErr:priority 4972
at location src/du.c:441
--src file: src/du.c
fragment 0:
if (!(__abst_hole(info, ent, file, fts, sb, excluded, opt_count_all, hash_all, exclude, ok, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
    if (info == 10 || info == 13) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
        return 0;
    }

....
Skipping error ifguard:Priority 4972
At location src/du.c:441
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(info, ent, file, fts, sb, excluded, opt_count_all, hash_all, exclude, ok, level, n_alloc, dulvl, prev_level, max_depth, opt_all)))
    if (info == 10 || info == 13) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
        return 0;
    }

....
Skipping nonlast:Priority -28
At location src/du.c:441
--Src File: src/du.c
Fragment 0:
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}

....
Skipping nonlast:Priority -26
At location src/du.c:448
--Src File: src/du.c
Fragment 0:
{
    if (info == 10 || info == 13) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
        return 0;
    }
    excluded = 1;
}

....
Skipping nonlast:Priority -25
At location src/du.c:451
--Src File: src/du.c
Fragment 0:
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}
if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
    if (info == 1) {
        fts_set(fts, ent, 4);
        const FTSENT *e = fts_read(fts);
        ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
    }
    return 1;
}

....
Skipping nonlast:Priority 4976
At location src/du.c:459
--Src File: src/du.c
Fragment 0:
if (info == 10 || info == 13) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}
if (info == 1) {
    fts_set(fts, ent, 4);
    const FTSENT *e = fts_read(fts);
    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
}

....
IsErr:priority 4945
at location src/du.c:577
--src file: src/du.c
fragment 0:
if (!(__abst_hole(files, bit_flags, ok, prev_level)))
    if (*files) {
        fts *fts = xfts_open(files, bit_flags, ((void *)0));
        while (1)
            {
                ftsent *ent;
                ent = fts_read(fts);
                if (ent == ((void *)0)) {
                    if ((*__errno_location()) != 0) {
                        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
                        ok = 0;
                    }
                    prev_level = 0;
                    break;
                }
                ;
                ok &= process_file(fts, ent);
            }
        if (fts_close(fts) != 0) {
            error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
            ok = 0;
        }
    }

....
Skipping error ifguard:Priority 4945
At location src/du.c:577
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(files, bit_flags, ok, prev_level)))
    if (*files) {
        FTS *fts = xfts_open(files, bit_flags, ((void *)0));
        while (1)
            {
                FTSENT *ent;
                ent = fts_read(fts);
                if (ent == ((void *)0)) {
                    if ((*__errno_location()) != 0) {
                        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
                        ok = 0;
                    }
                    prev_level = 0;
                    break;
                }
                ;
                ok &= process_file(fts, ent);
            }
        if (fts_close(fts) != 0) {
            error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4978
At location src/du.c:583
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(fts, files, bit_flags, ok, prev_level)))
    break;
FTSENT *ent;

....
Skipping nonlast addifexit:Priority 9979
At location src/du.c:585
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(fts, ent, files, bit_flags, fts->fts_path, ok, prev_level, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht)))
    break;
ent = fts_read(fts);

....
IsErr:priority 4980
at location src/du.c:586
--src file: src/du.c
fragment 0:
if (!(__abst_hole(ent, fts, fts->fts_path, ok, files, bit_flags, prev_level, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht)))
    if (ent == ((void *)0)) {
        if ((*__errno_location()) != 0) {
            error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
            ok = 0;
        }
        prev_level = 0;
        break;
    }

....
Skipping error ifguard:Priority 4980
At location src/du.c:586
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(ent, fts, fts->fts_path, ok, files, bit_flags, prev_level, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht)))
    if (ent == ((void *)0)) {
        if ((*__errno_location()) != 0) {
            error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
            ok = 0;
        }
        prev_level = 0;
        break;
    }

....
Skipping nonlast addifexit:Priority 3730
At location src/du.c:586
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ent, fts, fts->fts_path, ok, files, bit_flags, prev_level, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht)))
    break;
if (ent == ((void *)0)) {
    if ((*__errno_location()) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
        ok = 0;
    }
    prev_level = 0;
    break;
}

....
IsErr:priority 4981
at location src/du.c:588
--src file: src/du.c
fragment 0:
if (!(__abst_hole(ent, fts, ok, files, bit_flags, prev_level)))
    if ((*__errno_location()) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
        ok = 0;
    }

....
Skipping error ifguard:Priority 4981
At location src/du.c:588
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(ent, fts, ok, files, bit_flags, prev_level)))
    if ((*__errno_location()) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
        ok = 0;
    }

....
Skipping nonlast addifexit:Priority 8731
At location src/du.c:588
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ent, fts, ok, files, bit_flags, prev_level)))
    break;
if ((*__errno_location()) != 0) {
    error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
    ok = 0;
}

....
Skipping nonlast addifexit:Priority 4982
At location src/du.c:598
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(prev_level, ok, fts, ent, files, bit_flags)))
    break;
prev_level = 0;

....
IsErr:priority 4984
at location src/du.c:606
--src file: src/du.c
fragment 0:
if (!(__abst_hole(fts, ok, prev_level, fts->fts_path, files, bit_flags, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht)))
    if (fts_close(fts) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
        ok = 0;
    }

....
Skipping error ifguard:Priority 4984
At location src/du.c:606
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(fts, ok, prev_level, fts->fts_path, files, bit_flags, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht)))
    if (fts_close(fts) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
        ok = 0;
    }

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return -1;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 0;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 1;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 2;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 3;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 4;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 5;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 6;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 8;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 16;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 17;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 28;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 64;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 256;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 946;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4885
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 268435456;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 5085
At location src/du.c:619
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
char *cwd_only[2];

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return -1;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 0;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 1;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 2;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 3;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 4;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 5;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 6;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 8;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 16;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 17;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 28;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 64;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 256;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 946;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4886
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    return 268435456;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 5086
At location src/du.c:620
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
bool max_depth_specified = 0;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4887
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 5087
At location src/du.c:621
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
bool ok = 1;

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4888
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 5088
At location src/du.c:622
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
char *files_from = ((void *)0);

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4889
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 5089
At location src/du.c:625
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
int bit_flags = 8;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4890
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 5090
At location src/du.c:629
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
int symlink_deref_bits = 16;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 4891
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 5091
At location src/du.c:632
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
bool opt_summarize_only = 0;

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 12392
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 10092
At location src/du.c:634
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
cwd_only[0] = bad_cast(".");

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4893
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 5093
At location src/du.c:635
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
cwd_only[1] = ((void *)0);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4895
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 5095
At location src/du.c:638
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
set_program_name(argv[0]);

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4896
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 5096
At location src/du.c:639
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
setlocale(6, "");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4897
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 5097
At location src/du.c:640
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
bindtextdomain("coreutils", "/usr/local/share/locale");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4898
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 5098
At location src/du.c:641
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argv, exclude, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
textdomain("coreutils");

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4899
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 5099
At location src/du.c:643
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
atexit(close_stdout);

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4900
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 5100
At location src/du.c:645
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(exclude, argv, argc, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
exclude = new_exclude();

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4903
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 5103
At location src/du.c:650
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
while (1)
    {
        int oi = -1;
        int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);
        if (c == -1)
            break;
        switch (c) {
          case '0':
            opt_nul_terminate_output = 1;
            break;
          case 'a':
            opt_all = 1;
            break;
          case APPARENT_SIZE_OPTION:
            apparent_size = 1;
            break;
          case 'b':
            apparent_size = 1;
            human_output_opts = 0;
            break;
          case 'c':
            print_grand_total = 1;
            break;
          case 'h':
            human_output_opts = human_autoscale | human_SI | human_base_1024;
            break;
          case HUMAN_SI_OPTION:
            human_output_opts = human_autoscale | human_SI;
            break;
          case 'k':
            human_output_opts = 0;
            break;
          case 'd':
            {
                unsigned long tmp_ulong;
            }
            break;
          case 'm':
            human_output_opts = 0;
            break;
          case 'l':
            opt_count_all = 1;
            break;
          case 's':
            opt_summarize_only = 1;
            break;
          case 'x':
            bit_flags |= 64;
            break;
          case 'B':
            {
                enum strtol_error e;
                if (e != LONGINT_OK)
                    xstrtol_fatal(e, oi, c, long_options, optarg);
            }
            break;
          case 'H':
          case 'D':
            symlink_deref_bits = 1 | 16;
            break;
          case 'L':
            symlink_deref_bits = 2;
            break;
          case 'P':
            symlink_deref_bits = 16;
            break;
          case 'S':
            opt_separate_dirs = 1;
            break;
          case 'X':
            if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
                error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
                ok = 0;
            }
            break;
          case FILES0_FROM_OPTION:
            files_from = optarg;
            break;
          case EXCLUDE_OPTION:
            add_exclude(exclude, optarg, (1 << 28));
            break;
          case TIME_OPTION:
            opt_time = 1;
            time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
            break;
          case TIME_STYLE_OPTION:
            time_style = optarg;
            break;
          case GETOPT_HELP_CHAR:
            usage(0);
            break;
            ;
          case GETOPT_VERSION_CHAR:
            version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
            exit(0);
            break;
            ;
          default:
            ok = 0;
        }
    }

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4907
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    break;
int oi = -1;

....
Skipping nonlast addifexit:Priority 5107
At location src/du.c:652
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
int oi = -1;

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 4908
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    break;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 5108
At location src/du.c:653
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, oi, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
int c = getopt_long(argc, argv, "0abd:chHklmsxB:DLPSX:", long_options, &oi);

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8659
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    break;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 8859
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
if (c == -1)
    break;

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return -1;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 0;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 1;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 2;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 3;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 4;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 5;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 6;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 8;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 16;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 17;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 28;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 64;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 256;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 946;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        return 268435456;
    break;
}

....
Skipping nonlast addifexit:Priority 4910
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        break;
    break;
}

....
Skipping nonlast addifexit:Priority 5110
At location src/du.c:656
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, exclude, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
        goto argv_iter_done;
    break;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 4905
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    break;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping isstmt addifexit:Priority 5105
At location src/du.c:658
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(c, oi, argc, argv, opt_nul_terminate_output, opt_all, exclude, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
switch (c) {
  case '0':
    opt_nul_terminate_output = 1;
    break;
  case 'a':
    opt_all = 1;
    break;
  case APPARENT_SIZE_OPTION:
    apparent_size = 1;
    break;
  case 'b':
    apparent_size = 1;
    human_output_opts = 0;
    break;
  case 'c':
    print_grand_total = 1;
    break;
  case 'h':
    human_output_opts = human_autoscale | human_SI | human_base_1024;
    break;
  case HUMAN_SI_OPTION:
    human_output_opts = human_autoscale | human_SI;
    break;
  case 'k':
    human_output_opts = 0;
    break;
  case 'd':
    {
        unsigned long tmp_ulong;
    }
    break;
  case 'm':
    human_output_opts = 0;
    break;
  case 'l':
    opt_count_all = 1;
    break;
  case 's':
    opt_summarize_only = 1;
    break;
  case 'x':
    bit_flags |= 64;
    break;
  case 'B':
    {
        enum strtol_error e;
        if (e != LONGINT_OK)
            xstrtol_fatal(e, oi, c, long_options, optarg);
    }
    break;
  case 'H':
  case 'D':
    symlink_deref_bits = 1 | 16;
    break;
  case 'L':
    symlink_deref_bits = 2;
    break;
  case 'P':
    symlink_deref_bits = 16;
    break;
  case 'S':
    opt_separate_dirs = 1;
    break;
  case 'X':
    if (add_exclude_file(add_exclude, exclude, optarg, (1 << 28), '\n')) {
        error(0, (*__errno_location()), "%s", quotearg_colon(optarg));
        ok = 0;
    }
    break;
  case FILES0_FROM_OPTION:
    files_from = optarg;
    break;
  case EXCLUDE_OPTION:
    add_exclude(exclude, optarg, (1 << 28));
    break;
  case TIME_OPTION:
    opt_time = 1;
    time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
    break;
  case TIME_STYLE_OPTION:
    time_style = optarg;
    break;
  case GETOPT_HELP_CHAR:
    usage(0);
    break;
    ;
  case GETOPT_VERSION_CHAR:
    version_etc(stdout, "du", "GNU coreutils", Version, proper_name_utf8("Torbjorn Granlund", "Torbj\303\266rn Granlund"), ("David MacKenzie"), ("Paul Eggert"), ("Jim Meyering"), (char *)((void *)0));
    exit(0);
    break;
    ;
  default:
    ok = 0;
}

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return -1;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 0;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 1;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 2;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 3;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 4;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 5;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 6;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 8;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 16;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 17;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 28;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 64;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 256;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 946;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    return 268435456;
break;

....
Skipping nonlast addifexit:Priority 4906
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    break;
break;

....
Skipping nonlast addifexit:Priority 5106
At location src/du.c:732
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, bit_flags, opt_count_all, human_output_opts, oi, c, symlink_deref_bits, opt_separate_dirs, exclude, ok, files_from, print_grand_total, opt_time, time_type, argmatch_die, apparent_size, time_style, opt_all, Version, opt_nul_terminate_output, argc, argv, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    goto argv_iter_done;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return -1;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 0;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 1;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 2;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 3;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 4;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 5;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 6;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 8;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 16;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 17;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 28;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 64;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 256;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 946;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    return 268435456;
break;

....
Skipping nonlast addifexit:Priority 4904
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    break;
break;

....
Skipping nonlast addifexit:Priority 5104
At location src/du.c:736
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, opt_summarize_only, oi, c, opt_count_all, symlink_deref_bits, human_output_opts, opt_separate_dirs, exclude, ok, files_from, opt_time, time_type, argmatch_die, print_grand_total, time_style, apparent_size, Version, opt_all, opt_nul_terminate_output, max_depth_specified, max_depth, argc, argv, time_format, hash_all, di_set)))
    goto argv_iter_done;
break;

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return -1;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 0;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 1;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 2;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 3;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 4;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 5;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 6;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 8;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 16;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 17;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 28;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 64;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 256;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 946;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3661
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (!ok)
    usage(1);

....
Skipping nonlast addifexit:Priority 3861
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (!ok)
    usage(1);

....
IsErr:priority 4912
at location src/du.c:805
--src file: src/du.c
fragment 0:
if (!(__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    if (opt_all && opt_summarize_only) {
        error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
        usage(1);
    }

....
Skipping error ifguard:Priority 4912
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    if (opt_all && opt_summarize_only) {
        error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
        usage(1);
    }

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return -1;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 0;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 1;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 2;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 3;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 4;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 5;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 6;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 8;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 16;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 17;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 28;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 64;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 256;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 946;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3662
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3862
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (opt_all && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}

....
IsErr:priority 4913
at location src/du.c:811
--src file: src/du.c
fragment 0:
if (!(__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    if (opt_summarize_only && max_depth_specified && max_depth == 0) {
        error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
    }

....
Skipping error ifguard:Priority 4913
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    if (opt_summarize_only && max_depth_specified && max_depth == 0) {
        error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
    }

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return -1;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 0;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 1;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 2;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 3;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 4;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 5;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 6;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 8;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 16;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 17;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 28;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 64;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 256;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 946;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3663
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
Skipping nonlast addifexit:Priority 3863
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (opt_summarize_only && max_depth_specified && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}

....
IsErr:priority 4914
at location src/du.c:817
--src file: src/du.c
fragment 0:
if (!(__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    if (opt_summarize_only && max_depth_specified && max_depth != 0) {
        unsigned long d = max_depth;
        error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
        usage(1);
    }

....
Skipping error ifguard:Priority 4914
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    if (opt_summarize_only && max_depth_specified && max_depth != 0) {
        unsigned long d = max_depth;
        error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
        usage(1);
    }

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return -1;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 0;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 1;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 2;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 3;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 4;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 5;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 6;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 8;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 16;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 17;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 28;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 64;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 256;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 946;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3664
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3864
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (opt_summarize_only && max_depth_specified && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return -1;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 0;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 1;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 2;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 3;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 4;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 5;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 6;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 8;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 16;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 17;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 28;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 64;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 256;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 946;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3665
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 3865
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (opt_summarize_only)
    max_depth = 0;

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return -1;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 0;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 1;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 2;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 3;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 4;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 5;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 6;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 8;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 16;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 17;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 28;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 64;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 256;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 946;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 4916
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        return 268435456;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 5116
At location src/du.c:825
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(max_depth, opt_summarize_only, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
        goto argv_iter_done;
    max_depth = 0;
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return -1;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 0;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 1;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 2;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 3;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 4;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 5;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 6;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 8;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 16;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 17;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 28;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 64;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 256;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 946;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3667
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 3867
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (opt_time) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 4918
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
struct argv_iterator *ai;

....
Skipping nonlast addifexit:Priority 5118
At location src/du.c:877
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, time_format, argv, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
struct argv_iterator *ai;

....
IsErr:priority 4919
at location src/du.c:878
--src file: src/du.c
fragment 0:
if (!(__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (files_from) {
        if (optind < argc) {
            error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
            fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
            usage(1);
        }
        if (!((__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) || freopen_safer(files_from, "r", stdin)))
            error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
        ai = argv_iter_init_stream(stdin);
        hash_all = 1;
    } else {
        char **files = (optind < argc ? argv + optind : cwd_only);
        ai = argv_iter_init_argv(files);
        hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
    }

....
Skipping error ifguard:Priority 4919
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (files_from) {
        if (optind < argc) {
            error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
            fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
            usage(1);
        }
        if (!((__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) || freopen_safer(files_from, "r", stdin)))
            error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
        ai = argv_iter_init_stream(stdin);
        hash_all = 1;
    } else {
        char **files = (optind < argc ? argv + optind : cwd_only);
        ai = argv_iter_init_argv(files);
        hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
    }

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3669
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 3869
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (files_from) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 4920
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 5120
At location src/du.c:902
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(argc, argv, ai, hash_all, symlink_deref_bits, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, print_grand_total, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
char **files = (optind < argc ? argv + optind : cwd_only);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 9921
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 10121
At location src/du.c:903
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, files, argc, argv, symlink_deref_bits, hash_all, files_from, di_set, opt_count_all, bit_flags, time_format, ok, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, print_grand_total, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
ai = argv_iter_init_argv(files);

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3673
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3873
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (!ai)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 4924
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 5124
At location src/du.c:915
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, argc, bit_flags, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
di_set = di_set_alloc();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3683
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3883
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (!di_set)
    xalloc_die();

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3684
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 3884
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (opt_count_all || !hash_all)
    bit_flags |= 256;

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return -1;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 0;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 1;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 2;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 3;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 4;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 5;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 6;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 8;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 16;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 17;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 28;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 64;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 256;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 946;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4935
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        return 268435456;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 5135
At location src/du.c:922
--Src File: src/du.c
Fragment 0:
{
    if ((__abst_hole(bit_flags, opt_count_all, hash_all, symlink_deref_bits, di_set, ai, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
        goto argv_iter_done;
    bit_flags |= 256;
}

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4936
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 5136
At location src/du.c:924
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, argc, files_from, ok, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
bit_flags |= symlink_deref_bits;

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4937
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 5137
At location src/du.c:925
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, opt_count_all, hash_all, ai, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
static char *temp_argv[] = { ((void *)0), ((void *)0) };

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4938
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 5138
At location src/du.c:927
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(bit_flags, symlink_deref_bits, ai, opt_count_all, hash_all, di_set, files_from, ok, argc, argv, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
while (1)
    {
        bool skip_file = 0;
        enum argv_iter_err ai_err;
        char *file_name = argv_iter(ai, &ai_err);
        if (!file_name) {
            switch (ai_err) {
              case AI_ERR_EOF:
                goto argv_iter_done;
              case AI_ERR_READ:
                error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
                ok = 0;
                goto argv_iter_done;
              case AI_ERR_MEM:
                xalloc_die();
              default:
                ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
            }
        }
        if (files_from && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(files_from, "-"))));
        }) == 0) && (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
                int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
                int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(file_name, "-"))));
        }) == 0)) {
            error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
            skip_file = 1;
        }
        if (!file_name[0]) {
            if (files_from == ((void *)0))
                error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
            else {
                unsigned long file_number = argv_iter_n_args(ai);
                error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
            }
            skip_file = 1;
        }
        if (skip_file)
            ok = 0;
        else {
            temp_argv[0] = file_name;
            ok &= du_files(temp_argv, bit_flags);
        }
    }

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4988
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 5188
At location src/du.c:929
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, argv, time_format, argmatch_die, print_grand_total, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
bool skip_file = 0;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4989
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 5189
At location src/du.c:930
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, files_from, ok, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
enum argv_iter_err ai_err;

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 4990
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
char *file_name = argv_iter(ai, &ai_err);

....
Skipping nonlast addifexit:Priority 5190
At location src/du.c:931
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai, ai_err, bit_flags, symlink_deref_bits, files_from, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
char *file_name = argv_iter(ai, &ai_err);

....
IsErr:priority 4991
at location src/du.c:932
--src file: src/du.c
fragment 0:
if (!(__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (!file_name) {
        switch (ai_err) {
          case ai_err_eof:
            goto argv_iter_done;
          case ai_err_read:
            error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
            ok = 0;
            goto argv_iter_done;
          case ai_err_mem:
            xalloc_die();
          default:
            ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __pretty_function__));
        }
    }

....
Skipping error ifguard:Priority 4991
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (!file_name) {
        switch (ai_err) {
          case AI_ERR_EOF:
            goto argv_iter_done;
          case AI_ERR_READ:
            error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
            ok = 0;
            goto argv_iter_done;
          case AI_ERR_MEM:
            xalloc_die();
          default:
            ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
        }
    }

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8741
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping nonlast addifexit:Priority 8941
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (!file_name) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 9992
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
Skipping isstmt addifexit:Priority 10192
At location src/du.c:934
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ai_err, file_name, ai, files_from, ok, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, skip_file, argc, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
switch (ai_err) {
  case AI_ERR_EOF:
    goto argv_iter_done;
  case AI_ERR_READ:
    error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
    ok = 0;
    goto argv_iter_done;
  case AI_ERR_MEM:
    xalloc_die();
  default:
    ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
}

....
IsErr:priority 4939
at location src/du.c:949
--src file: src/du.c
fragment 0:
if (!(__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (files_from && (__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) && (__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(file_name, "-"))));
    }) == 0)) {
        error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
        skip_file = 1;
    }

....
Skipping error ifguard:Priority 4939
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (files_from && (__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) && (__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(file_name, "-"))));
    }) == 0)) {
        error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
        skip_file = 1;
    }

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3689
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3889
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}

....
IsErr:priority 4940
at location src/du.c:963
--src file: src/du.c
fragment 0:
if (!(__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (!file_name[0]) {
        if (files_from == ((void *)0))
            error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
        else {
            unsigned long file_number = argv_iter_n_args(ai);
            error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
        }
        skip_file = 1;
    }

....
Skipping error ifguard:Priority 4940
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (!file_name[0]) {
        if (files_from == ((void *)0))
            error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
        else {
            unsigned long file_number = argv_iter_n_args(ai);
            error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
        }
        skip_file = 1;
    }

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3690
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
Skipping nonlast addifexit:Priority 3890
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (!file_name[0]) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}

....
IsErr:priority 4941
at location src/du.c:983
--src file: src/du.c
fragment 0:
if (!(__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (skip_file)
        ok = 0;
    else {
        temp_argv[0] = file_name;
        ok &= du_files(temp_argv, bit_flags);
    }

....
Skipping error ifguard:Priority 4941
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (skip_file)
        ok = 0;
    else {
        temp_argv[0] = file_name;
        ok &= du_files(temp_argv, bit_flags);
    }

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3691
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping isstmt addifexit:Priority 3891
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (skip_file)
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 9942
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    break;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 10142
At location src/du.c:987
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(file_name, ok, bit_flags, skip_file, ai, di_set, files_from, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
temp_argv[0] = file_name;

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 4993
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
di_set_free(di_set);

....
Skipping nonlast addifexit:Priority 5193
At location src/du.c:994
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(di_set, ai, ok, files_from, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
di_set_free(di_set);

....
IsErr:priority 4998
at location src/du.c:996
--src file: src/du.c
fragment 0:
if (!(__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
        error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping error ifguard:Priority 4998
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if (!(__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
        error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return -1;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 0;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 1;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 2;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 3;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 4;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 5;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 6;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 8;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 16;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 17;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 28;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 64;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 256;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 946;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3748
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    return 268435456;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3948
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    goto argv_iter_done;
if (files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return -1;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 0;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 1;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 2;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 3;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 4;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 5;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 6;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 8;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 16;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 17;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 28;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 64;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 256;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 946;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3749
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    return 268435456;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Skipping nonlast addifexit:Priority 3949
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    goto argv_iter_done;
if (print_grand_total)
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));

....
Antipattern stats BEGIN: earlyret => 948
Antipattern stats BEGIN: errorexit => 33
Total 15422 different repair candidate templates!!!!
Total 15422 different repair candidate templates!!!!
Total 19586 different repair candidate!!!
Trying different candidates!
BasicTester pointer: 0x1e16fc0
CondTester pointer: 0x3aa8660
Counter: 1
Batcher Size:0
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:433
--Src File: src/du.c
Fragment 0:
if ((info == 11) && !(__abst_hole(info, fts, ent, excluded, file, exclude, ok, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    fts_set(fts, ent, 1);
    const FTSENT *e = fts_read(fts);
    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
    info = ent->fts_info;
}


CondTester, a patch instance with id 0:
Spawn 1 instances, now Total 1
Counter: 2
Batcher Size:1
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:447
--Src File: src/du.c
Fragment 0:
if ((fts->fts_options & 64 && fts->fts_dev != sb->st_dev) && !(__abst_hole(fts, sb, fts->fts_dev, fts->fts_options, sb->st_dev, excluded, ent, file, opt_count_all, info, hash_all, sb->st_nlink, sb->st_mode, sb->st_ino, exclude, ok, level, n_alloc, dulvl, prev_level, max_depth, opt_all, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_path, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_leaf_optimization_works_ht, sb->st_uid, sb->st_gid, sb->__pad0, sb->st_rdev, sb->st_size, sb->st_blksize, sb->st_blocks)))
    excluded = 1;


CondTester, a patch instance with id 1:
Spawn 1 instances, now Total 2
Counter: 3
Batcher Size:2
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:459
--Src File: src/du.c
Fragment 0:
if ((info == 1) && !(__abst_hole(info, fts, ent, sb, hash_all, opt_count_all, excluded, file, ok, exclude, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    fts_set(fts, ent, 4);
    const FTSENT *e = fts_read(fts);
    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
}


CondTester, a patch instance with id 2:
Spawn 1 instances, now Total 3
Counter: 4
Batcher Size:3
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:459
--Src File: src/du.c
Fragment 0:
if ((info == 1) || (__abst_hole(info, fts, ent, sb, hash_all, opt_count_all, excluded, file, ok, exclude, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    fts_set(fts, ent, 4);
    const FTSENT *e = fts_read(fts);
    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
}


CondTester, a patch instance with id 3:
Spawn 1 instances, now Total 4
Counter: 5
Batcher Size:4
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((skip_file) && !(__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}


CondTester, a patch instance with id 4:
Spawn 1 instances, now Total 5
Counter: 6
Batcher Size:5
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok) && !(__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));


CondTester, a patch instance with id 5:
Spawn 1 instances, now Total 6
Counter: 7
Batcher Size:6
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((print_grand_total) && !(__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));


CondTester, a patch instance with id 6:
Spawn 1 instances, now Total 7
Counter: 8
Batcher Size:7
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:999
--Src File: src/du.c
Fragment 0:
if ((print_grand_total) || (__abst_hole(print_grand_total, files_from, ok, di_set, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output, tot_dui.size)))
    print_size(&tot_dui, dcgettext(((void *)0), "total", 5));


CondTester, a patch instance with id 7:
Spawn 1 instances, now Total 8
Counter: 9
Batcher Size:8
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if ((files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0) && ok) || (__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));


CondTester, a patch instance with id 8:
Spawn 1 instances, now Total 9
Counter: 10
Batcher Size:9
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:996
--Src File: src/du.c
Fragment 0:
if (((files_from && (ferror_unlocked(stdin) || rpl_fclose(stdin) != 0)) || (__abst_hole(ok, files_from, di_set, ai, print_grand_total, bit_flags, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) && ok)
    error(1, 0, dcgettext(((void *)0), "error reading %s", 5), quote(files_from));


CondTester, a patch instance with id 9:
Spawn 1 instances, now Total 10
Counter: 11
Batcher Size:10
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:983
--Src File: src/du.c
Fragment 0:
if ((skip_file) || (__abst_hole(skip_file, ok, file_name, bit_flags, files_from, ai, di_set, print_grand_total, ai_err, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    ok = 0;
else {
    temp_argv[0] = file_name;
    ok &= du_files(temp_argv, bit_flags);
}


CondTester, a patch instance with id 10:
Spawn 1 instances, now Total 11
Counter: 12
Batcher Size:11
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:447
--Src File: src/du.c
Fragment 0:
if ((fts->fts_options & 64 && fts->fts_dev != sb->st_dev) || (__abst_hole(fts, sb, fts->fts_dev, fts->fts_options, sb->st_dev, excluded, ent, file, opt_count_all, info, hash_all, sb->st_nlink, sb->st_mode, sb->st_ino, exclude, ok, level, n_alloc, dulvl, prev_level, max_depth, opt_all, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_path, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_leaf_optimization_works_ht, sb->st_uid, sb->st_gid, sb->__pad0, sb->st_rdev, sb->st_size, sb->st_blksize, sb->st_blocks)))
    excluded = 1;


CondTester, a patch instance with id 11:
Spawn 1 instances, now Total 12
Counter: 13
Batcher Size:12
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:447
--Src File: src/du.c
Fragment 0:
if (((fts->fts_options & 64) || (__abst_hole(fts, sb, fts->fts_dev, fts->fts_options, sb->st_dev, excluded, ent, file, opt_count_all, info, hash_all, sb->st_nlink, sb->st_mode, sb->st_ino, exclude, ok, level, n_alloc, dulvl, prev_level, max_depth, opt_all, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_path, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_leaf_optimization_works_ht, sb->st_uid, sb->st_gid, sb->__pad0, sb->st_rdev, sb->st_size, sb->st_blksize, sb->st_blocks))) && fts->fts_dev != sb->st_dev)
    excluded = 1;


CondTester, a patch instance with id 12:
Spawn 1 instances, now Total 13
Counter: 14
Batcher Size:13
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:429
--Src File: src/du.c
Fragment 0:
if ((!excluded) && !(__abst_hole(excluded, file, exclude, info, ok, fts, ent, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    if (info == 11) {
        fts_set(fts, ent, 1);
        const FTSENT *e = fts_read(fts);
        ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
        info = ent->fts_info;
    }
    if (info == 10 || info == 13) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
        return 0;
    }
    if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
        excluded = 1;
}


CondTester, a patch instance with id 13:
Spawn 1 instances, now Total 14
Counter: 15
Batcher Size:14
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:429
--Src File: src/du.c
Fragment 0:
if ((!excluded) || (__abst_hole(excluded, file, exclude, info, ok, fts, ent, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    if (info == 11) {
        fts_set(fts, ent, 1);
        const FTSENT *e = fts_read(fts);
        ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
        info = ent->fts_info;
    }
    if (info == 10 || info == 13) {
        error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
        return 0;
    }
    if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
        excluded = 1;
}


CondTester, a patch instance with id 14:
Spawn 1 instances, now Total 15
Counter: 16
Batcher Size:15
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) && !(__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}


CondTester, a patch instance with id 15:
Spawn 1 instances, now Total 16
Counter: 17
Batcher Size:16
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((!file_name[0]) && !(__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}


CondTester, a patch instance with id 16:
Spawn 1 instances, now Total 17
Counter: 18
Batcher Size:17
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:963
--Src File: src/du.c
Fragment 0:
if ((!file_name[0]) || (__abst_hole(file_name, files_from, skip_file, ai, ok, bit_flags, ai_err, di_set, print_grand_total, symlink_deref_bits, opt_count_all, hash_all, argc, argv, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    if (files_from == ((void *)0))
        error(0, 0, "%s", dcgettext(((void *)0), "invalid zero-length file name", 5));
    else {
        unsigned long file_number = argv_iter_n_args(ai);
        error(0, 0, "%s:%lu: %s", quotearg_colon(files_from), file_number, dcgettext(((void *)0), "invalid zero-length file name", 5));
    }
    skip_file = 1;
}


CondTester, a patch instance with id 17:
Spawn 1 instances, now Total 18
Counter: 19
Batcher Size:18
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if ((files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) || (__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}


CondTester, a patch instance with id 18:
Spawn 1 instances, now Total 19
Counter: 20
Batcher Size:19
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:949
--Src File: src/du.c
Fragment 0:
if (((files_from && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(files_from, "-"))));
}) == 0)) || (__abst_hole(files_from, file_name, skip_file, ok, ai_err, ai, bit_flags, symlink_deref_bits, opt_count_all, hash_all, di_set, argc, argv, print_grand_total, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) && (__extension__ ({
    size_t __s1_len, __s2_len;
    (__builtin_constant_p(file_name) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(file_name) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(file_name, "-") : (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) && (__s1_len = __builtin_strlen(file_name) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(file_name, "-") : (__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
        int __result = (((const unsigned char *)(const char *)(file_name))[0] - __s2[0]);
        if (__s1_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)(file_name))[1] - __s2[1]);
            if (__s1_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(file_name))[2] - __s2[2]);
                if (__s1_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)(file_name))[3] - __s2[3]);
            }
        }
        __result;
    }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(file_name) && ((size_t)(const void *)((file_name) + 1) - (size_t)(const void *)(file_name) == 1) ? __builtin_strcmp(file_name, "-") : (-(__extension__ ({
        const unsigned char *__s2 = (const unsigned char *)(const char *)(file_name);
        int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
        if (__s2_len > 0 && __result == 0) {
            __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
            if (__s2_len > 1 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                if (__s2_len > 2 && __result == 0)
                    __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
            }
        }
        __result;
    })))) : __builtin_strcmp(file_name, "-"))));
}) == 0)) {
    error(0, 0, dcgettext(((void *)0), "when reading file names from stdin, no file name of %s allowed", 5), quote(file_name));
    skip_file = 1;
}


CondTester, a patch instance with id 19:
Spawn 1 instances, now Total 20
Counter: 21
Batcher Size:20
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((!file_name) && !(__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}


CondTester, a patch instance with id 20:
Spawn 1 instances, now Total 21
Counter: 22
Batcher Size:21
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:932
--Src File: src/du.c
Fragment 0:
if ((!file_name) || (__abst_hole(file_name, ai, ai_err, files_from, bit_flags, symlink_deref_bits, ok, opt_count_all, hash_all, di_set, argc, skip_file, argv, time_format, print_grand_total, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    switch (ai_err) {
      case AI_ERR_EOF:
        goto argv_iter_done;
      case AI_ERR_READ:
        error(0, (*__errno_location()), dcgettext(((void *)0), "%s: read error", 5), quotearg_colon(files_from));
        ok = 0;
        goto argv_iter_done;
      case AI_ERR_MEM:
        xalloc_die();
      default:
        ((!"unexpected error code from argv_iter") ? (void)(0) : __assert_fail("!\"unexpected error code from argv_iter\"", "src/du.c", 946, __PRETTY_FUNCTION__));
    }
}


CondTester, a patch instance with id 21:
Spawn 1 instances, now Total 22
Counter: 23
Batcher Size:22
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:433
--Src File: src/du.c
Fragment 0:
if ((info == 11) || (__abst_hole(info, fts, ent, excluded, file, exclude, ok, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    fts_set(fts, ent, 1);
    const FTSENT *e = fts_read(fts);
    ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
    info = ent->fts_info;
}


CondTester, a patch instance with id 22:
Spawn 1 instances, now Total 23
Counter: 24
Batcher Size:23
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:441
--Src File: src/du.c
Fragment 0:
if ((info == 10 || info == 13) && !(__abst_hole(info, ent, file, fts, sb, excluded, opt_count_all, hash_all, exclude, ok, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}


CondTester, a patch instance with id 23:
Spawn 1 instances, now Total 24
Counter: 25
Batcher Size:24
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:441
--Src File: src/du.c
Fragment 0:
if ((info == 10 || info == 13) || (__abst_hole(info, ent, file, fts, sb, excluded, opt_count_all, hash_all, exclude, ok, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
    return 0;
}


CondTester, a patch instance with id 24:
Spawn 1 instances, now Total 25
Counter: 26
Batcher Size:25
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((!di_set) && !(__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    xalloc_die();


CondTester, a patch instance with id 25:
Spawn 1 instances, now Total 26
Counter: 27
Batcher Size:26
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((opt_count_all || !hash_all) && !(__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    bit_flags |= 256;


CondTester, a patch instance with id 26:
Spawn 1 instances, now Total 27
Counter: 28
Batcher Size:27
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:921
--Src File: src/du.c
Fragment 0:
if ((opt_count_all || !hash_all) || (__abst_hole(opt_count_all, hash_all, bit_flags, symlink_deref_bits, di_set, ai, argc, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    bit_flags |= 256;


CondTester, a patch instance with id 27:
Spawn 1 instances, now Total 28
Counter: 29
Batcher Size:28
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:916
--Src File: src/du.c
Fragment 0:
if ((!di_set) || (__abst_hole(di_set, ai, opt_count_all, hash_all, bit_flags, argc, symlink_deref_bits, argv, files_from, ok, time_format, argmatch_die, time_style, print_grand_total, opt_time, max_depth, opt_summarize_only, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    xalloc_die();


CondTester, a patch instance with id 28:
Spawn 1 instances, now Total 29
Counter: 30
Batcher Size:29
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((files_from) && !(__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}


CondTester, a patch instance with id 29:
Spawn 1 instances, now Total 30
Counter: 31
Batcher Size:30
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:878
--Src File: src/du.c
Fragment 0:
if ((files_from) || (__abst_hole(files_from, argc, argv, time_format, ai, argmatch_die, time_style, hash_all, symlink_deref_bits, di_set, opt_count_all, bit_flags, opt_time, max_depth, opt_summarize_only, max_depth_specified, ok, opt_all, Version, time_type, exclude, opt_separate_dirs, print_grand_total, human_output_opts, apparent_size, opt_nul_terminate_output))) {
    if (optind < argc) {
        error(0, 0, dcgettext(((void *)0), "extra operand %s", 5), quote(argv[optind]));
        fprintf(stderr, "%s\n", dcgettext(((void *)0), "file operands cannot be combined with --files0-from", 5));
        usage(1);
    }
    if (!((__extension__ ({
        size_t __s1_len, __s2_len;
        (__builtin_constant_p(files_from) && __builtin_constant_p("-") && (__s1_len = __builtin_strlen(files_from) , __s2_len = __builtin_strlen("-") , (!((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) || __s2_len >= 4)) ? __builtin_strcmp(files_from, "-") : (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) && (__s1_len = __builtin_strlen(files_from) , __s1_len < 4) ? (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) ? __builtin_strcmp(files_from, "-") : (__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)("-");
            int __result = (((const unsigned char *)(const char *)(files_from))[0] - __s2[0]);
            if (__s1_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)(files_from))[1] - __s2[1]);
                if (__s1_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(files_from))[2] - __s2[2]);
                    if (__s1_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)(files_from))[3] - __s2[3]);
                }
            }
            __result;
        }))) : (__builtin_constant_p("-") && ((size_t)(const void *)(("-") + 1) - (size_t)(const void *)("-") == 1) && (__s2_len = __builtin_strlen("-") , __s2_len < 4) ? (__builtin_constant_p(files_from) && ((size_t)(const void *)((files_from) + 1) - (size_t)(const void *)(files_from) == 1) ? __builtin_strcmp(files_from, "-") : (-(__extension__ ({
            const unsigned char *__s2 = (const unsigned char *)(const char *)(files_from);
            int __result = (((const unsigned char *)(const char *)("-"))[0] - __s2[0]);
            if (__s2_len > 0 && __result == 0) {
                __result = (((const unsigned char *)(const char *)("-"))[1] - __s2[1]);
                if (__s2_len > 1 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("-"))[2] - __s2[2]);
                    if (__s2_len > 2 && __result == 0)
                        __result = (((const unsigned char *)(const char *)("-"))[3] - __s2[3]);
                }
            }
            __result;
        })))) : __builtin_strcmp(files_from, "-"))));
    }) == 0) || freopen_safer(files_from, "r", stdin)))
        error(1, (*__errno_location()), dcgettext(((void *)0), "cannot open %s for reading", 5), quote(files_from));
    ai = argv_iter_init_stream(stdin);
    hash_all = 1;
} else {
    char **files = (optind < argc ? argv + optind : cwd_only);
    ai = argv_iter_init_argv(files);
    hash_all = (optind + 1 < argc || symlink_deref_bits == 2);
}


CondTester, a patch instance with id 30:
Spawn 1 instances, now Total 31
Counter: 32
Batcher Size:31
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((!ai) && !(__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    xalloc_die();


CondTester, a patch instance with id 31:
Spawn 1 instances, now Total 32
Counter: 33
Batcher Size:32
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:911
--Src File: src/du.c
Fragment 0:
if ((!ai) || (__abst_hole(ai, argc, symlink_deref_bits, hash_all, di_set, argv, opt_count_all, bit_flags, files_from, ok, time_format, argmatch_die, time_style, opt_time, max_depth, opt_summarize_only, print_grand_total, max_depth_specified, opt_all, Version, time_type, exclude, opt_separate_dirs, human_output_opts, apparent_size, opt_nul_terminate_output)))
    xalloc_die();


CondTester, a patch instance with id 32:
Spawn 1 instances, now Total 33
Counter: 34
Batcher Size:33
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((opt_summarize_only) && !(__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    max_depth = 0;


CondTester, a patch instance with id 33:
Spawn 1 instances, now Total 34
Counter: 35
Batcher Size:34
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:824
--Src File: src/du.c
Fragment 0:
if ((opt_summarize_only) || (__abst_hole(opt_summarize_only, max_depth, opt_time, time_style, max_depth_specified, opt_all, ok, Version, time_format, argmatch_die, time_type, exclude, files_from, argc, argv, opt_separate_dirs, symlink_deref_bits, hash_all, bit_flags, di_set, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output)))
    max_depth = 0;


CondTester, a patch instance with id 34:
Spawn 1 instances, now Total 35
Counter: 36
Batcher Size:35
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((opt_time) && !(__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}


CondTester, a patch instance with id 35:
Spawn 1 instances, now Total 36
Counter: 37
Batcher Size:36
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:828
--Src File: src/du.c
Fragment 0:
if ((opt_time) || (__abst_hole(opt_time, time_style, max_depth, opt_summarize_only, max_depth_specified, opt_all, ok, time_format, argmatch_die, Version, time_type, files_from, exclude, argc, argv, opt_separate_dirs, hash_all, symlink_deref_bits, di_set, bit_flags, opt_count_all, human_output_opts, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    if (!time_style) {
        time_style = getenv("TIME_STYLE");
        if (!time_style || (__extension__ ({
            size_t __s1_len, __s2_len;
            (__builtin_constant_p(time_style) && __builtin_constant_p("locale") && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen("locale") , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, "locale") : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) ? __builtin_strcmp(time_style, "locale") : (__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)("locale");
                int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                if (__s1_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                    if (__s1_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                        if (__s1_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                    }
                }
                __result;
            }))) : (__builtin_constant_p("locale") && ((size_t)(const void *)(("locale") + 1) - (size_t)(const void *)("locale") == 1) && (__s2_len = __builtin_strlen("locale") , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, "locale") : (-(__extension__ ({
                const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                int __result = (((const unsigned char *)(const char *)("locale"))[0] - __s2[0]);
                if (__s2_len > 0 && __result == 0) {
                    __result = (((const unsigned char *)(const char *)("locale"))[1] - __s2[1]);
                    if (__s2_len > 1 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)("locale"))[2] - __s2[2]);
                        if (__s2_len > 2 && __result == 0)
                            __result = (((const unsigned char *)(const char *)("locale"))[3] - __s2[3]);
                    }
                }
                __result;
            })))) : __builtin_strcmp(time_style, "locale"))));
        }) == 0))
            time_style = "long-iso";
        else if (*time_style == '+') {
            char *p = (__extension__ (__builtin_constant_p('\n') && !__builtin_constant_p(time_style) && ('\n') == '\x00' ? (char *)__rawmemchr(time_style, '\n') : __builtin_strchr(time_style, '\n')));
            if (p)
                *p = '\x00';
        } else {
            static const char posix_prefix[] = "posix-";
            while ((__extension__ (__builtin_constant_p(sizeof posix_prefix - 1) && ((__builtin_constant_p(time_style) && strlen(time_style) < ((size_t)(sizeof posix_prefix - 1))) || (__builtin_constant_p(posix_prefix) && strlen(posix_prefix) < ((size_t)(sizeof posix_prefix - 1)))) ? __extension__ ({
                size_t __s1_len, __s2_len;
                (__builtin_constant_p(time_style) && __builtin_constant_p(posix_prefix) && (__s1_len = __builtin_strlen(time_style) , __s2_len = __builtin_strlen(posix_prefix) , (!((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) || __s2_len >= 4)) ? __builtin_strcmp(time_style, posix_prefix) : (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) && (__s1_len = __builtin_strlen(time_style) , __s1_len < 4) ? (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(posix_prefix);
                    int __result = (((const unsigned char *)(const char *)(time_style))[0] - __s2[0]);
                    if (__s1_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(time_style))[1] - __s2[1]);
                        if (__s1_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(time_style))[2] - __s2[2]);
                            if (__s1_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(time_style))[3] - __s2[3]);
                        }
                    }
                    __result;
                }))) : (__builtin_constant_p(posix_prefix) && ((size_t)(const void *)((posix_prefix) + 1) - (size_t)(const void *)(posix_prefix) == 1) && (__s2_len = __builtin_strlen(posix_prefix) , __s2_len < 4) ? (__builtin_constant_p(time_style) && ((size_t)(const void *)((time_style) + 1) - (size_t)(const void *)(time_style) == 1) ? __builtin_strcmp(time_style, posix_prefix) : (-(__extension__ ({
                    const unsigned char *__s2 = (const unsigned char *)(const char *)(time_style);
                    int __result = (((const unsigned char *)(const char *)(posix_prefix))[0] - __s2[0]);
                    if (__s2_len > 0 && __result == 0) {
                        __result = (((const unsigned char *)(const char *)(posix_prefix))[1] - __s2[1]);
                        if (__s2_len > 1 && __result == 0) {
                            __result = (((const unsigned char *)(const char *)(posix_prefix))[2] - __s2[2]);
                            if (__s2_len > 2 && __result == 0)
                                __result = (((const unsigned char *)(const char *)(posix_prefix))[3] - __s2[3]);
                        }
                    }
                    __result;
                })))) : __builtin_strcmp(time_style, posix_prefix))));
            }) : strncmp(time_style, posix_prefix, sizeof posix_prefix - 1))) == 0)
                time_style += sizeof posix_prefix - 1;
        }
    }
    if (*time_style == '+')
        time_format = time_style + 1;
    else {
        switch (((time_style_types)[__xargmatch_internal("time style", time_style, time_style_args, (const char *)(time_style_types), sizeof *(time_style_types), argmatch_die)])) {
          case full_iso_time_style:
            time_format = "%Y-%m-%d %H:%M:%S.%N %z";
            break;
          case long_iso_time_style:
            time_format = "%Y-%m-%d %H:%M";
            break;
          case iso_time_style:
            time_format = "%Y-%m-%d";
            break;
        }
    }
}


CondTester, a patch instance with id 36:
Spawn 1 instances, now Total 37
Counter: 38
Batcher Size:37
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:451
--Src File: src/du.c
Fragment 0:
if ((excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) && !(__abst_hole(sb, sb->st_dev, sb->st_ino, hash_all, sb->st_nlink, sb->st_mode, opt_count_all, excluded, info, fts, ent, file, ok, exclude, level, n_alloc, dulvl, prev_level, max_depth, opt_all, sb->st_uid, sb->st_gid, sb->__pad0, sb->st_rdev, sb->st_size, sb->st_blksize, sb->st_blocks))) {
    if (info == 1) {
        fts_set(fts, ent, 4);
        const FTSENT *e = fts_read(fts);
        ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
    }
    return 1;
}


CondTester, a patch instance with id 37:
Spawn 1 instances, now Total 38
Counter: 39
Batcher Size:38
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:588
--Src File: src/du.c
Fragment 0:
if (((*__errno_location()) != 0) && !(__abst_hole(ent, fts, ok, files, bit_flags, prev_level))) {
    error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
    ok = 0;
}


CondTester, a patch instance with id 38:
Spawn 1 instances, now Total 39
Counter: 40
Batcher Size:39
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:586
--Src File: src/du.c
Fragment 0:
if ((ent == ((void *)0)) && !(__abst_hole(ent, fts, fts->fts_path, ok, files, bit_flags, prev_level, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht))) {
    if ((*__errno_location()) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
        ok = 0;
    }
    prev_level = 0;
    break;
}


CondTester, a patch instance with id 39:
Spawn 1 instances, now Total 40
Counter: 41
Batcher Size:40
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:606
--Src File: src/du.c
Fragment 0:
if ((fts_close(fts) != 0) && !(__abst_hole(fts, ok, prev_level, fts->fts_path, files, bit_flags, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht))) {
    error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
    ok = 0;
}


CondTester, a patch instance with id 40:
Spawn 1 instances, now Total 41
Counter: 42
Batcher Size:41
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:606
--Src File: src/du.c
Fragment 0:
if ((fts_close(fts) != 0) || (__abst_hole(fts, ok, prev_level, fts->fts_path, files, bit_flags, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht))) {
    error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
    ok = 0;
}


CondTester, a patch instance with id 41:
Spawn 1 instances, now Total 42
Counter: 43
Batcher Size:42
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:577
--Src File: src/du.c
Fragment 0:
if ((*files) && !(__abst_hole(files, bit_flags, ok, prev_level))) {
    FTS *fts = xfts_open(files, bit_flags, ((void *)0));
    while (1)
        {
            FTSENT *ent;
            ent = fts_read(fts);
            if (ent == ((void *)0)) {
                if ((*__errno_location()) != 0) {
                    error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
                    ok = 0;
                }
                prev_level = 0;
                break;
            }
            ;
            ok &= process_file(fts, ent);
        }
    if (fts_close(fts) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
        ok = 0;
    }
}


CondTester, a patch instance with id 42:
Spawn 1 instances, now Total 43
Counter: 44
Batcher Size:43
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:577
--Src File: src/du.c
Fragment 0:
if ((*files) || (__abst_hole(files, bit_flags, ok, prev_level))) {
    FTS *fts = xfts_open(files, bit_flags, ((void *)0));
    while (1)
        {
            FTSENT *ent;
            ent = fts_read(fts);
            if (ent == ((void *)0)) {
                if ((*__errno_location()) != 0) {
                    error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
                    ok = 0;
                }
                prev_level = 0;
                break;
            }
            ;
            ok &= process_file(fts, ent);
        }
    if (fts_close(fts) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_close failed", 5));
        ok = 0;
    }
}


CondTester, a patch instance with id 43:
Spawn 1 instances, now Total 44
Counter: 45
Batcher Size:44
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:586
--Src File: src/du.c
Fragment 0:
if ((ent == ((void *)0)) || (__abst_hole(ent, fts, fts->fts_path, ok, files, bit_flags, prev_level, fts->fts_cur, fts->fts_child, fts->fts_array, fts->fts_dev, fts->fts_rfd, fts->fts_cwd_fd, fts->fts_pathlen, fts->fts_nitems, fts->fts_compar, fts->fts_options, fts->fts_leaf_optimization_works_ht))) {
    if ((*__errno_location()) != 0) {
        error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
        ok = 0;
    }
    prev_level = 0;
    break;
}


CondTester, a patch instance with id 44:
Spawn 1 instances, now Total 45
Counter: 46
Batcher Size:45
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((opt_summarize_only && max_depth_specified && max_depth != 0) && !(__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}


CondTester, a patch instance with id 45:
Spawn 1 instances, now Total 46
Counter: 47
Batcher Size:46
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if ((opt_summarize_only && max_depth_specified && max_depth != 0) || (__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}


CondTester, a patch instance with id 46:
Spawn 1 instances, now Total 47
Counter: 48
Batcher Size:47
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:817
--Src File: src/du.c
Fragment 0:
if (((opt_summarize_only && max_depth_specified) || (__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_time, opt_all, time_style, ok, Version, argmatch_die, time_type, time_format, exclude, files_from, opt_separate_dirs, symlink_deref_bits, argc, argv, hash_all, bit_flags, opt_count_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) && max_depth != 0) {
    unsigned long d = max_depth;
    error(0, 0, dcgettext(((void *)0), "warning: summarizing conflicts with --max-depth=%lu", 5), d);
    usage(1);
}


CondTester, a patch instance with id 47:
Spawn 1 instances, now Total 48
Counter: 49
Batcher Size:48
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((opt_summarize_only && max_depth_specified && max_depth == 0) && !(__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}


CondTester, a patch instance with id 48:
Spawn 1 instances, now Total 49
Counter: 50
Batcher Size:49
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if ((opt_summarize_only && max_depth_specified && max_depth == 0) || (__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}


CondTester, a patch instance with id 49:
Spawn 1 instances, now Total 50
Counter: 51
Batcher Size:50
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:811
--Src File: src/du.c
Fragment 0:
if (((opt_summarize_only && max_depth_specified) || (__abst_hole(max_depth_specified, opt_summarize_only, max_depth, opt_all, ok, Version, opt_time, time_style, argmatch_die, time_type, exclude, files_from, time_format, opt_separate_dirs, symlink_deref_bits, argc, argv, bit_flags, opt_count_all, hash_all, human_output_opts, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) && max_depth == 0) {
    error(0, 0, dcgettext(((void *)0), "warning: summarizing is the same as using --max-depth=0", 5));
}


CondTester, a patch instance with id 50:
Spawn 1 instances, now Total 51
Counter: 52
Batcher Size:51
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:588
--Src File: src/du.c
Fragment 0:
if (((*__errno_location()) != 0) || (__abst_hole(ent, fts, ok, files, bit_flags, prev_level))) {
    error(0, (*__errno_location()), dcgettext(((void *)0), "fts_read failed: %s", 5), quotearg_colon(fts->fts_path));
    ok = 0;
}


CondTester, a patch instance with id 51:
Spawn 1 instances, now Total 52
Counter: 53
Batcher Size:52
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((opt_all && opt_summarize_only) && !(__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}


CondTester, a patch instance with id 52:
Spawn 1 instances, now Total 53
Counter: 54
Batcher Size:53
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if ((opt_all && opt_summarize_only) || (__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}


CondTester, a patch instance with id 53:
Spawn 1 instances, now Total 54
Counter: 55
Batcher Size:54
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:805
--Src File: src/du.c
Fragment 0:
if (((opt_all) || (__abst_hole(opt_summarize_only, opt_all, ok, max_depth_specified, max_depth, Version, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, argc, opt_count_all, argv, human_output_opts, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output))) && opt_summarize_only) {
    error(0, 0, dcgettext(((void *)0), "cannot both summarize and show all entries", 5));
    usage(1);
}


CondTester, a patch instance with id 54:
Spawn 1 instances, now Total 55
Counter: 56
Batcher Size:55
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((!ok) && !(__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    usage(1);


CondTester, a patch instance with id 55:
Spawn 1 instances, now Total 56
Counter: 57
Batcher Size:56
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:802
--Src File: src/du.c
Fragment 0:
if ((!ok) || (__abst_hole(ok, opt_summarize_only, opt_all, Version, max_depth_specified, max_depth, time_style, argmatch_die, time_type, opt_time, exclude, files_from, opt_separate_dirs, symlink_deref_bits, time_format, bit_flags, opt_count_all, argc, human_output_opts, argv, hash_all, di_set, print_grand_total, apparent_size, opt_nul_terminate_output)))
    usage(1);


CondTester, a patch instance with id 56:
Spawn 1 instances, now Total 57
Counter: 58
Batcher Size:57
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:451
--Src File: src/du.c
Fragment 0:
if ((excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) || (__abst_hole(sb, sb->st_dev, sb->st_ino, hash_all, sb->st_nlink, sb->st_mode, opt_count_all, excluded, info, fts, ent, file, ok, exclude, level, n_alloc, dulvl, prev_level, max_depth, opt_all, sb->st_uid, sb->st_gid, sb->__pad0, sb->st_rdev, sb->st_size, sb->st_blksize, sb->st_blocks))) {
    if (info == 1) {
        fts_set(fts, ent, 4);
        const FTSENT *e = fts_read(fts);
        ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
    }
    return 1;
}


CondTester, a patch instance with id 57:
Spawn 1 instances, now Total 58
Counter: 59
Batcher Size:58
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:426
--Src File: src/du.c
Fragment 0:
{
    if ((info != 6) && !(__abst_hole(info, ok, file, exclude, ent, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
        bool excluded = excluded_file_name(exclude, file);
        if (!excluded) {
            if (info == 11) {
                fts_set(fts, ent, 1);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
                info = ent->fts_info;
            }
            if (info == 10 || info == 13) {
                error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
                return 0;
            }
            if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
                excluded = 1;
        }
        if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
            if (info == 1) {
                fts_set(fts, ent, 4);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
            }
            return 1;
        }
        switch (info) {
          case 1:
            return 1;
          case 7:
            error(0, ent->fts_errno, "%s", quote(file));
            ok = 0;
            break;
          case 2:
            if (cycle_warning_required(fts, ent)) {
                do {
                    error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
                } while (0);
                return 0;
            }
            return 1;
        }
    }
}


CondTester, a patch instance with id 58:
Spawn 1 instances, now Total 59
Counter: 60
Batcher Size:59
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:426
--Src File: src/du.c
Fragment 0:
{
    if ((info != 6) || (__abst_hole(info, ok, file, exclude, ent, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
        bool excluded = excluded_file_name(exclude, file);
        if (!excluded) {
            if (info == 11) {
                fts_set(fts, ent, 1);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
                info = ent->fts_info;
            }
            if (info == 10 || info == 13) {
                error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
                return 0;
            }
            if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
                excluded = 1;
        }
        if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
            if (info == 1) {
                fts_set(fts, ent, 4);
                const FTSENT *e = fts_read(fts);
                ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
            }
            return 1;
        }
        switch (info) {
          case 1:
            return 1;
          case 7:
            error(0, ent->fts_errno, "%s", quote(file));
            ok = 0;
            break;
          case 2:
            if (cycle_warning_required(fts, ent)) {
                do {
                    error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
                } while (0);
                return 0;
            }
            return 1;
        }
    }
}


CondTester, a patch instance with id 59:
Spawn 1 instances, now Total 60
Counter: 61
Batcher Size:60
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((c == -1) && !(__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    break;


CondTester, a patch instance with id 60:
Spawn 1 instances, now Total 61
Counter: 62
Batcher Size:61
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:655
--Src File: src/du.c
Fragment 0:
if ((c == -1) || (__abst_hole(c, oi, argc, argv, exclude, opt_nul_terminate_output, opt_all, apparent_size, human_output_opts, print_grand_total, opt_count_all, opt_summarize_only, bit_flags, symlink_deref_bits, opt_separate_dirs, ok, files_from, opt_time, time_type, argmatch_die, time_style, Version, max_depth_specified, max_depth, time_format, hash_all, di_set)))
    break;


CondTester, a patch instance with id 61:
Spawn 1 instances, now Total 62
Counter: 63
Batcher Size:62
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
if ((info == 4) && !(__abst_hole(info, ent, file, ok, exclude, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


CondTester, a patch instance with id 62:
Spawn 1 instances, now Total 63
Counter: 64
Batcher Size:63
Preprocess the following candidate with CondTester:
Priority 20000
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
if ((info == 4) || (__abst_hole(info, ent, file, ok, exclude, fts, sb, opt_count_all, hash_all, level, n_alloc, dulvl, prev_level, max_depth, opt_all))) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


CondTester, a patch instance with id 63:
Spawn 1 instances, now Total 64
Counter: 65
Batcher Size:64
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (4);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 0:
Spawn 1 instances, now Total 65
Counter: 66
Batcher Size:65
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (437);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 1:
Spawn 1 instances, now Total 66
Counter: 67
Batcher Size:66
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (463);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 2:
Spawn 1 instances, now Total 67
Counter: 68
Batcher Size:67
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (5);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 3:
Spawn 1 instances, now Total 68
Counter: 69
Batcher Size:68
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (540);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 4:
Spawn 1 instances, now Total 69
Counter: 70
Batcher Size:69
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (7);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 5:
Spawn 1 instances, now Total 70
Counter: 71
Batcher Size:70
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (optarg ? ((time_types)[__xargmatch_internal("--time", optarg, time_args, (const char *)(time_types), sizeof *(time_types), argmatch_die)]) : time_mtime);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 6:
Spawn 1 instances, now Total 71
Counter: 72
Batcher Size:71
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
usage(1);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 7:
Spawn 1 instances, now Total 72
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 62:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 63:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 0:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 1:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 2:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 3:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 4:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 5:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 6:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 7:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Counter: 73
Batcher Size:62
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
xalloc_die();
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 8:
Spawn 1 instances, now Total 73
Counter: 74
Batcher Size:63
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (6);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 9:
Spawn 1 instances, now Total 74
Counter: 75
Batcher Size:64
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (61440);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 10:
Spawn 1 instances, now Total 75
Counter: 76
Batcher Size:65
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (64);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 11:
Spawn 1 instances, now Total 76
Counter: 77
Batcher Size:66
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
putchar_unlocked('\t');
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 12:
Spawn 1 instances, now Total 77
Counter: 78
Batcher Size:67
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_style = getenv("TIME_STYLE");
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 13:
Spawn 1 instances, now Total 78
Counter: 79
Batcher Size:68
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (11);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 14:
Spawn 1 instances, now Total 79
Counter: 80
Batcher Size:69
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (16384);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 15:
Spawn 1 instances, now Total 80
Counter: 81
Batcher Size:70
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (2);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 16:
Spawn 1 instances, now Total 81
Counter: 82
Batcher Size:71
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (13);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 17:
Spawn 1 instances, now Total 82
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 8:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 9:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 10:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 11:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 12:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 13:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 14:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 15:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 16:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 17:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Counter: 83
Batcher Size:62
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (0);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 18:
Spawn 1 instances, now Total 83
Counter: 84
Batcher Size:63
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (1);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 19:
Spawn 1 instances, now Total 84
Counter: 85
Batcher Size:64
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_type = (10);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 20:
Spawn 1 instances, now Total 85
Counter: 86
Batcher Size:65
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
setlocale(6, "");
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 21:
Spawn 1 instances, now Total 86
Counter: 87
Batcher Size:66
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_format = (file) + 1;
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 22:
Spawn 1 instances, now Total 87
Counter: 88
Batcher Size:67
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_style = "long-iso";
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 23:
Spawn 1 instances, now Total 88
Counter: 89
Batcher Size:68
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_style = (file);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 24:
Spawn 1 instances, now Total 89
Counter: 90
Batcher Size:69
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_format = time_style + 1;
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 25:
Spawn 1 instances, now Total 90
Counter: 91
Batcher Size:70
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
textdomain("coreutils");
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 26:
Spawn 1 instances, now Total 91
Counter: 92
Batcher Size:71
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
time_format = (file);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 27:
Spawn 1 instances, now Total 92
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 18:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 19:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 20:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 21:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 22:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 23:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 24:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 25:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 26:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 27:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Counter: 93
Batcher Size:62
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
(*__errno_location()) = (0);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 28:
Spawn 1 instances, now Total 93
Counter: 94
Batcher Size:63
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "Report %s translation bugs to <http://translationproject.org/team/>\n", 5), last_component((file)));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 29:
Spawn 1 instances, now Total 94
Counter: 95
Batcher Size:64
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "Usage: %s [OPTION]... [FILE]...\n  or:  %s [OPTION]... --files0-from=F\n", 5), program_name, program_name);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 30:
Spawn 1 instances, now Total 95
Counter: 96
Batcher Size:65
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "\nReport %s bugs to %s\n", 5), last_component((file)), "bug-coreutils@gnu.org");
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 31:
Spawn 1 instances, now Total 96
Counter: 97
Batcher Size:66
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "\nReport %s bugs to %s\n", 5), last_component(program_name), "bug-coreutils@gnu.org");
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 32:
Spawn 1 instances, now Total 97
Counter: 98
Batcher Size:67
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "\nDisplay values are in units of the first available SIZE from --block-size,\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\n", 5), (file));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 33:
Spawn 1 instances, now Total 98
Counter: 99
Batcher Size:68
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "Report %s translation bugs to <http://translationproject.org/team/>\n", 5), last_component(program_name));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 34:
Spawn 1 instances, now Total 99
Counter: 100
Batcher Size:69
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "Usage: %s [OPTION]... [FILE]...\n  or:  %s [OPTION]... --files0-from=F\n", 5), (file), program_name);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 35:
Spawn 1 instances, now Total 100
Counter: 101
Batcher Size:70
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "Usage: %s [OPTION]... [FILE]...\n  or:  %s [OPTION]... --files0-from=F\n", 5), program_name, (file));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 36:
Spawn 1 instances, now Total 101
Counter: 102
Batcher Size:71
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
(*__errno_location()) = (1);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 37:
Spawn 1 instances, now Total 102
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 28:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 29:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 30:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 31:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 32:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 33:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 34:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 35:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 36:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 37:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Counter: 103
Batcher Size:62
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
info = (11);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 38:
Spawn 1 instances, now Total 103
Counter: 104
Batcher Size:63
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
n_alloc = (463);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 39:
Spawn 1 instances, now Total 104
Counter: 105
Batcher Size:64
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "For complete documentation, run: info coreutils '%s invocation'\n", 5), last_component(program_name));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 40:
Spawn 1 instances, now Total 105
Counter: 106
Batcher Size:65
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "For complete documentation, run: info coreutils '%s invocation'\n", 5), last_component((file)));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 41:
Spawn 1 instances, now Total 106
Counter: 107
Batcher Size:66
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
prev_level = level;
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 42:
Spawn 1 instances, now Total 107
Counter: 108
Batcher Size:67
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
print_size(&dui_to_print, (file));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 43:
Spawn 1 instances, now Total 108
Counter: 109
Batcher Size:68
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
print_size(&dui_to_print, file);
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 44:
Spawn 1 instances, now Total 109
Counter: 110
Batcher Size:69
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf("\t%s%c", (file), opt_nul_terminate_output ? '\x00' : '\n');
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 45:
Spawn 1 instances, now Total 110
Counter: 111
Batcher Size:70
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
printf(dcgettext(((void *)0), "%s home page: <%s>\n", 5), "GNU coreutils", "http://www.gnu.org/software/coreutils/");
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 46:
Spawn 1 instances, now Total 111
Counter: 112
Batcher Size:71
Preprocess the following candidate with BasicTester:
Priority 7462
At location src/du.c:420
--Src File: src/du.c
Fragment 0:
print_size(&tot_dui, dcgettext(((void *)0), "total", 5));
if (info == 4) {
    error(0, ent->fts_errno, dcgettext(((void *)0), "cannot read directory %s", 5), quote(file));
    ok = 0;
} else if (info != 6) {
    bool excluded = excluded_file_name(exclude, file);
    if (!excluded) {
        if (info == 11) {
            fts_set(fts, ent, 1);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 437, __PRETTY_FUNCTION__));
            info = ent->fts_info;
        }
        if (info == 10 || info == 13) {
            error(0, ent->fts_errno, dcgettext(((void *)0), "cannot access %s", 5), quote(file));
            return 0;
        }
        if (fts->fts_options & 64 && fts->fts_dev != sb->st_dev)
            excluded = 1;
    }
    if (excluded || (!opt_count_all && (hash_all || (!((((sb->st_mode)) & 61440) == (16384)) && 1 < sb->st_nlink)) && !hash_ins(sb->st_ino, sb->st_dev))) {
        if (info == 1) {
            fts_set(fts, ent, 4);
            const FTSENT *e = fts_read(fts);
            ((e == ent) ? (void)(0) : __assert_fail("e == ent", "src/du.c", 463, __PRETTY_FUNCTION__));
        }
        return 1;
    }
    switch (info) {
      case 1:
        return 1;
      case 7:
        error(0, ent->fts_errno, "%s", quote(file));
        ok = 0;
        break;
      case 2:
        if (cycle_warning_required(fts, ent)) {
            do {
                error(0, 0, dcgettext(((void *)0), "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n", 5), quote(file));
            } while (0);
            return 0;
        }
        return 1;
    }
}


BasicTester, a patch instance with id 47:
Spawn 1 instances, now Total 112
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
BasicTester, Testing instance id 38:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 39:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 40:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 41:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 42:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 43:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Passed Negative Cases with BasicTester
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Passed!
BasicTester, Testing instance id 44:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Passed Negative Cases with BasicTester
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Passed!
BasicTester, Testing instance id 45:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 46:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
BasicTester, Testing instance id 47:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Update best score 7461957.000000
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 58:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Passed Negative Cases wiht CondTestder!
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed!
CondTester, Testing instance id 59:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Postprocessing instance id 58:
Trying a synthesis expr 1
Skipping a synthesis:1
Trying a synthesis expr opt_count_all == 0
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcRunning test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Passed!
Passed with updated best score 19999942.000000
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 13:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Passed Negative Cases wiht CondTestder!
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed!
CondTester, Testing instance id 14:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Postprocessing instance id 13:
Trying a synthesis expr 1
Skipping a synthesis:1
Trying a synthesis expr excluded == 0
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcRunning test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Passed!
Passed with updated best score 19999987.000000
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 0:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 22:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 23:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 24:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 1:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Passed Negative Cases wiht CondTestder!
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed!
CondTester, Testing instance id 11:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 12:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Postprocessing instance id 1:
Trying a synthesis expr 1
Skipping a synthesis:1
Trying a synthesis expr fts->fts_dev == 0
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcRunning test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Passed!
Passed with updated best score 19999999.000000
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 37:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Passed Negative Cases wiht CondTestder!
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed Positive Cases
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 1  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 2  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 3  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 4  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 5  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 6  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 7  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 8  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 9  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 10  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 12  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 13  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 14  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 15  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 16  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 17  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 18  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 19  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 20  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 21  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 22  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 24  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 25  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 26  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 27  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 28  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 29  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 30  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 31  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 32  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 33  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 34  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 38  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 39  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 40  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 41  > __res
Passed!
CondTester, Testing instance id 57:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Postprocessing instance id 37:
Postprocessing failed!
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 2:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 3:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 42:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 43:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 39:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 44:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 38:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 51:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 40:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 41:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building failed! Going to build saperately!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcCondTester, Testing instance id 60:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcCondTester, Testing instance id 61:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 55:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 56:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 52:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 53:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 54:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 48:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 49:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 50:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 45:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 46:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 47:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 33:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 34:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 35:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 36:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 29:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 30:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 31:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 32:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 25:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 28:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 26:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 27:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 20:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 21:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 15:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 18:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 19:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 16:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 17:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 4:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 10:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 5:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 8:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 9:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
a batched test job starts!
Building:src at:
/home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/srcMerged code building succ, going to invoke tester!
CondTester, Testing instance id 6:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
CondTester, Testing instance id 7:
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Running test command:
/home/ubuntu/spr-fast/tools/coreutils-test.py /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/src /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l/tests /home/ubuntu/spr-fast/tests/corebench/coreutils/coreutils-case-cfe1040c-f7f398a1/tempworkdir-l 0  > __res
Total cnt of passed cond schemas: 4
Total cnt of cond schemas: 64
Counter: 113
Batcher Size:0
The found score 19999999.000000 is greater than current score 7462.000000!
Terminate current session!
Generated a patch at candidate schema no 2
Total cnt of passed cond schemas: 4
Total cnt of cond schemas: 64
Candidate count:0!!
Found a fix! Store to: coreutils-fix-cfe1040c-f7f398a1src_du.c
Found a fix! Store to: coreutils-fix-cfe1040c-f7f398a1src_du.c-1
Found a fix! Store to: coreutils-fix-cfe1040c-f7f398a1src_du.c-2
Found a fix! Store to: coreutils-fix-cfe1040c-f7f398a1src_du.c-3
Found a fix! Store to: coreutils-fix-cfe1040c-f7f398a1src_du.c-4
Antipattern stats END: earlyret => 948
Antipattern stats END: errorexit => 33
Repair process ends successfully!
Total 15422 different repair candidate schema!!!!
Total number of compiles: 38
Total number of test eval: 659
